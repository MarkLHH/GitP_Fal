{"ast":null,"code":"import _toConsumableArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect,useRef}from'react';import{Input,Label,Form,Button}from'reactstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import'emoji-mart/css/emoji-mart.css';import{Picker}from'emoji-mart';import AppContext,{ChatContext}from'../../../context/Context';import classNames from'classnames';import{getGrays}from'../../../helpers/utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var formatDate=function formatDate(date){var options={weekday:'short',day:'numeric',month:'long',year:'numeric',hour:'numeric',minute:'numeric'};var now=date.toLocaleString('en-US',options).split(',').map(function(item){return item.trim();});return{day:now[0],hour:now[3],date:now[1]+', '+now[2]};};var MessageTextArea=function MessageTextArea(_ref){var thread=_ref.thread;var _useContext=useContext(AppContext),isDark=_useContext.isDark,isRTL=_useContext.isRTL;var _useContext2=useContext(ChatContext),messages=_useContext2.messages,messagesDispatch=_useContext2.messagesDispatch,threadsDispatch=_useContext2.threadsDispatch,textAreaInitialHeight=_useContext2.textAreaInitialHeight,setTextAreaInitialHeight=_useContext2.setTextAreaInitialHeight;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),previewEmoji=_useState2[0],setPreviewEmoji=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var isMountedRef=useRef(null);//Emoji box hiding Controller\nuseEffect(function(){var handleClickOutsideEmojiBox=function handleClickOutsideEmojiBox(e){if(e.target.closest('.emoji-mart')||e.target.closest('.textarea'))return;setPreviewEmoji(false);};if(previewEmoji){document.addEventListener('click',handleClickOutsideEmojiBox,false);}else{document.removeEventListener('click',handleClickOutsideEmojiBox,false);}return function(){return document.removeEventListener('click',handleClickOutsideEmojiBox,false);};},[previewEmoji]);useEffect(function(){//TextBox and message body height controlling\nisMountedRef.current=true;var textAreaPreviousHeight=textAreaInitialHeight;var autoExpand=function autoExpand(field){// Reset field height\nfield.style.height='2rem';// Calculate the height\nvar textAreaCurrentHeight=field.scrollHeight;if(textAreaCurrentHeight<=160&&document.querySelector('.card-chat-pane')){if(textAreaPreviousHeight!==textAreaCurrentHeight&&isMountedRef.current){document.querySelector('.card-chat-pane').style.height=\"calc(100% - \".concat(textAreaCurrentHeight,\"px)\");setTextAreaInitialHeight(textAreaPreviousHeight=textAreaCurrentHeight);}}field.style.height=textAreaCurrentHeight+'px';};if(document.querySelector('.textarea')){document.addEventListener('input',function(event){if(event.target.className==='textarea');autoExpand(event.target);},false);}return function(){isMountedRef.current=false;};},[textAreaInitialHeight,setTextAreaInitialHeight]);var addEmoji=function addEmoji(e){var emoji=e.native;setMessage(message+emoji);};var handleSubmit=function handleSubmit(e){e.preventDefault();var date=new Date();var newMessage={senderUserId:3,message:\"\".concat(message.replace(/(?:\\r\\n|\\r|\\n)/g,'<br>')),status:'delivered',time:formatDate(date)};var _messages$find=messages.find(function(_ref2){var id=_ref2.id;return id===thread.messagesId;}),content=_messages$find.content;if(message){messagesDispatch({type:'EDIT',payload:{id:thread.messagesId,content:[].concat(_toConsumableArray(content),[newMessage])},id:thread.messagesId});threadsDispatch({type:'EDIT',payload:thread,id:thread.id,isUpdatedStart:true});}setMessage('');document.querySelector('.textarea').style.height='2rem';document.querySelector('.card-chat-pane').style.height=\"calc(100% - 2rem)\";};return/*#__PURE__*/_jsxs(Form,{className:\"chat-editor-area bg-white\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Input,{className:\"d-none\",type:\"file\",id:\"chat-file-upload\"}),/*#__PURE__*/_jsx(Label,{for:\"chat-file-upload\",className:\"mb-0 p-1 chat-file-upload cursor-pointer\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"paperclip\"})}),/*#__PURE__*/_jsx(Input,{className:\"border-0 outline-none shadow-none resize-none textarea bg-white\",type:\"textarea\",placeholder:\"Type your message\",bsSize:\"sm\",value:message,onChange:function onChange(_ref3){var target=_ref3.target;return setMessage(target.value);},style:{height:'2rem',maxHeight:'10rem',paddingRight:isRTL?'0.75rem':'7rem',paddingLeft:isRTL?'7rem':'0.75rem'}}),/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:['far','laugh-beam'],transform:\"grow-5\",className:\"emoji-icon\",onClick:function onClick(){return setPreviewEmoji(!previewEmoji);}}),previewEmoji&&/*#__PURE__*/_jsx(Picker,{set:\"google\",onSelect:addEmoji,sheetSize:20,style:{position:'absolute',bottom:'100%',left:isRTL?'2%':'auto',right:isRTL?'auto':'2%',padding:0,zIndex:1,backgroundColor:getGrays(isDark)[100]},theme:isDark?'dark':'light',showPreview:false,showSkinTones:false}),/*#__PURE__*/_jsx(Button,{color:\"transparent\",size:\"sm\",className:classNames(\"btn-send outline-none ml-1\",{'text-primary':message.length>0}),type:\"submit\",children:\"Send\"})]});};export default MessageTextArea;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/chat/content/MessageTextArea.js"],"names":["React","useState","useContext","useEffect","useRef","Input","Label","Form","Button","FontAwesomeIcon","Picker","AppContext","ChatContext","classNames","getGrays","formatDate","date","options","weekday","day","month","year","hour","minute","now","toLocaleString","split","map","item","trim","MessageTextArea","thread","isDark","isRTL","messages","messagesDispatch","threadsDispatch","textAreaInitialHeight","setTextAreaInitialHeight","previewEmoji","setPreviewEmoji","message","setMessage","isMountedRef","handleClickOutsideEmojiBox","e","target","closest","document","addEventListener","removeEventListener","current","textAreaPreviousHeight","autoExpand","field","style","height","textAreaCurrentHeight","scrollHeight","querySelector","event","className","addEmoji","emoji","native","handleSubmit","preventDefault","Date","newMessage","senderUserId","replace","status","time","find","id","messagesId","content","type","payload","isUpdatedStart","value","maxHeight","paddingRight","paddingLeft","position","bottom","left","right","padding","zIndex","backgroundColor","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Label, Form, Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport AppContext, { ChatContext } from '../../../context/Context';\r\nimport classNames from 'classnames';\r\nimport { getGrays } from '../../../helpers/utils';\r\n\r\nconst formatDate = date => {\r\n  const options = {\r\n    weekday: 'short',\r\n    day: 'numeric',\r\n    month: 'long',\r\n    year: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric'\r\n  };\r\n\r\n  const now = date\r\n    .toLocaleString('en-US', options)\r\n    .split(',')\r\n    .map(item => item.trim());\r\n\r\n  return {\r\n    day: now[0],\r\n    hour: now[3],\r\n    date: now[1] + ', ' + now[2]\r\n  };\r\n};\r\n\r\nconst MessageTextArea = ({ thread }) => {\r\n  const { isDark, isRTL } = useContext(AppContext);\r\n  const { messages, messagesDispatch, threadsDispatch, textAreaInitialHeight, setTextAreaInitialHeight } = useContext(\r\n    ChatContext\r\n  );\r\n  const [previewEmoji, setPreviewEmoji] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const isMountedRef = useRef(null);\r\n\r\n  //Emoji box hiding Controller\r\n  useEffect(() => {\r\n    const handleClickOutsideEmojiBox = e => {\r\n      if (e.target.closest('.emoji-mart') || e.target.closest('.textarea')) return;\r\n      setPreviewEmoji(false);\r\n    };\r\n\r\n    if (previewEmoji) {\r\n      document.addEventListener('click', handleClickOutsideEmojiBox, false);\r\n    } else {\r\n      document.removeEventListener('click', handleClickOutsideEmojiBox, false);\r\n    }\r\n\r\n    return () => document.removeEventListener('click', handleClickOutsideEmojiBox, false);\r\n  }, [previewEmoji]);\r\n\r\n  useEffect(() => {\r\n    //TextBox and message body height controlling\r\n    isMountedRef.current = true;\r\n    let textAreaPreviousHeight = textAreaInitialHeight;\r\n    const autoExpand = function(field) {\r\n      // Reset field height\r\n      field.style.height = '2rem';\r\n\r\n      // Calculate the height\r\n      const textAreaCurrentHeight = field.scrollHeight;\r\n\r\n      if (textAreaCurrentHeight <= 160 && document.querySelector('.card-chat-pane')) {\r\n        if (textAreaPreviousHeight !== textAreaCurrentHeight && isMountedRef.current) {\r\n          document.querySelector('.card-chat-pane').style.height = `calc(100% - ${textAreaCurrentHeight}px)`;\r\n          setTextAreaInitialHeight((textAreaPreviousHeight = textAreaCurrentHeight));\r\n        }\r\n      }\r\n\r\n      field.style.height = textAreaCurrentHeight + 'px';\r\n    };\r\n    if (document.querySelector('.textarea')) {\r\n      document.addEventListener(\r\n        'input',\r\n        function(event) {\r\n          if (event.target.className === 'textarea');\r\n          autoExpand(event.target);\r\n        },\r\n        false\r\n      );\r\n    }\r\n    return () => {\r\n      isMountedRef.current = false;\r\n    };\r\n  }, [textAreaInitialHeight, setTextAreaInitialHeight]);\r\n\r\n  const addEmoji = e => {\r\n    let emoji = e.native;\r\n    setMessage(message + emoji);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const date = new Date();\r\n\r\n    let newMessage = {\r\n      senderUserId: 3,\r\n      message: `${message.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')}`,\r\n      status: 'delivered',\r\n      time: formatDate(date)\r\n    };\r\n\r\n    const { content } = messages.find(({ id }) => id === thread.messagesId);\r\n    if (message) {\r\n      messagesDispatch({\r\n        type: 'EDIT',\r\n        payload: { id: thread.messagesId, content: [...content, newMessage] },\r\n        id: thread.messagesId\r\n      });\r\n\r\n      threadsDispatch({\r\n        type: 'EDIT',\r\n        payload: thread,\r\n        id: thread.id,\r\n        isUpdatedStart: true\r\n      });\r\n    }\r\n\r\n    setMessage('');\r\n\r\n    document.querySelector('.textarea').style.height = '2rem';\r\n    document.querySelector('.card-chat-pane').style.height = `calc(100% - 2rem)`;\r\n  };\r\n\r\n  return (\r\n    <Form className=\"chat-editor-area bg-white\" onSubmit={handleSubmit}>\r\n      <Input className=\"d-none\" type=\"file\" id=\"chat-file-upload\" />\r\n      <Label for=\"chat-file-upload\" className=\"mb-0 p-1 chat-file-upload cursor-pointer\">\r\n        <FontAwesomeIcon icon=\"paperclip\" />\r\n      </Label>\r\n\r\n      <Input\r\n        className=\"border-0 outline-none shadow-none resize-none textarea bg-white\"\r\n        type=\"textarea\"\r\n        placeholder=\"Type your message\"\r\n        bsSize=\"sm\"\r\n        value={message}\r\n        onChange={({ target }) => setMessage(target.value)}\r\n        style={{\r\n          height: '2rem',\r\n          maxHeight: '10rem',\r\n          paddingRight: isRTL ? '0.75rem' : '7rem',\r\n          paddingLeft: isRTL ? '7rem' : '0.75rem'\r\n        }}\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={['far', 'laugh-beam']}\r\n        transform=\"grow-5\"\r\n        className=\"emoji-icon\"\r\n        onClick={() => setPreviewEmoji(!previewEmoji)}\r\n      />\r\n      {previewEmoji && (\r\n        <Picker\r\n          set=\"google\"\r\n          onSelect={addEmoji}\r\n          sheetSize={20}\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: '100%',\r\n            left: isRTL ? '2%' : 'auto',\r\n            right: isRTL ? 'auto' : '2%',\r\n            padding: 0,\r\n            zIndex: 1,\r\n            backgroundColor: getGrays(isDark)[100]\r\n          }}\r\n          theme={isDark ? 'dark' : 'light'}\r\n          showPreview={false}\r\n          showSkinTones={false}\r\n        />\r\n      )}\r\n      <Button\r\n        color=\"transparent\"\r\n        size=\"sm\"\r\n        className={classNames(`btn-send outline-none ml-1`, {\r\n          'text-primary': message.length > 0\r\n        })}\r\n        type=\"submit\"\r\n      >\r\n        Send\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nMessageTextArea.propTypes = {\r\n  thread: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MessageTextArea;\r\n"]},"metadata":{},"sourceType":"module"}