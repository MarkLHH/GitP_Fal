{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Link}from'react-router-dom';import{Alert,Button,Card,CardBody,Col,CustomInput,Form,Input,Label,ListGroup,ListGroupItem,Modal,ModalBody,ModalFooter,ModalHeader,Row}from'reactstrap';import Notification from'../notification/Notification';import FalconCardHeader from'../common/FalconCardHeader';import Loader from'../common/Loader';import{isIterableArray}from'../../helpers/utils';import{notifications as rawNotifications}from'../../data/notification/notification';import useFakeFetch from'../../hooks/useFakeFetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";var NotificationSettings=function NotificationSettings(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),check1=_useState2[0],setCheck1=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),check2=_useState4[0],setCheck2=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),check3=_useState6[0],setCheck3=_useState6[1];var listGroupItemClasses='d-flex justify-content-between align-items-center py-2 px-0 border-200';return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(CustomInput,{type:\"radio\",id:\"exampleCustomRadio\",name:\"customRadio\",label:\"Get a notification each time there is activity on your page or an important update.\"}),/*#__PURE__*/_jsx(CustomInput,{type:\"radio\",id:\"exampleCustomRadio2\",name:\"customRadio\",label:\"Get one notification every 12-24 hours on all activity and updates.\"}),/*#__PURE__*/_jsx(CustomInput,{type:\"radio\",id:\"exampleCustomRadio3\",name:\"customRadio\",label:\"Off\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"fs-0 mb-3 mt-4\",children:\"Edit your notification settings for: \"}),/*#__PURE__*/_jsxs(ListGroup,{flush:true,className:\"mb-4 fs--1\",children:[/*#__PURE__*/_jsxs(ListGroupItem,{className:listGroupItemClasses,children:[/*#__PURE__*/_jsx(\"span\",{children:\"New Mention of Page \"}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(Label,{check:true}),/*#__PURE__*/_jsx(Input,{type:\"checkbox\",checked:check1,onChange:function onChange(){return setCheck1(!check1);}})]})]}),/*#__PURE__*/_jsxs(ListGroupItem,{className:listGroupItemClasses,children:[/*#__PURE__*/_jsx(\"span\",{children:\"New Comments on page post\"}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(Label,{check:true}),/*#__PURE__*/_jsx(Input,{type:\"checkbox\",checked:check2,onChange:function onChange(){return setCheck2(!check2);}})]})]}),/*#__PURE__*/_jsxs(ListGroupItem,{className:listGroupItemClasses,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Edits to Comments you have written\"}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(Label,{check:true}),/*#__PURE__*/_jsx(Input,{type:\"checkbox\",checked:check3,onChange:function onChange(){return setCheck3(!check3);}})]})]})]}),/*#__PURE__*/_jsx(CustomInput,{type:\"checkbox\",id:\"customCheckboxActivity\",label:\"Allow notifications from your followers activity\"}),/*#__PURE__*/_jsx(CustomInput,{type:\"checkbox\",id:\"customCheckboxAssociationsGroups\",label:\"Groups\"}),/*#__PURE__*/_jsx(CustomInput,{type:\"checkbox\",id:\"customCheckboxAssociations\",label:\"Associations\"})]});};var Notifications=function Notifications(_ref){var _ref$items=_ref.items,items=_ref$items===void 0?rawNotifications.length:_ref$items,children=_ref.children;var _useFakeFetch=useFakeFetch(rawNotifications),loading=_useFakeFetch.loading,notifications=_useFakeFetch.data,setNotifications=_useFakeFetch.setData;var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),settingsIsOpen=_useState8[0],setSettingsIsOpen=_useState8[1];var toggleSettingsModal=function toggleSettingsModal(){return setSettingsIsOpen(!settingsIsOpen);};var markAsRead=function markAsRead(e){e.preventDefault();var updatedNotifications=notifications.map(function(notification){if(!notification.hasOwnProperty('unread'))return notification;return _objectSpread(_objectSpread({},notification),{},{unread:false});});setNotifications(updatedNotifications);};return/*#__PURE__*/_jsxs(Card,{className:\"h-100\",children:[/*#__PURE__*/_jsxs(FalconCardHeader,{title:\"Your Notifications\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fs--1\",children:[/*#__PURE__*/_jsx(Link,{className:\"text-sans-serif\",to:\"#!\",onClick:markAsRead,children:\"Mark all as read\"}),/*#__PURE__*/_jsx(Link,{className:\"text-sans-serif ml-2 ml-sm-3\",to:\"#!\",onClick:toggleSettingsModal,children:\"Notification settings\"})]}),/*#__PURE__*/_jsxs(Modal,{isOpen:settingsIsOpen,toggle:toggleSettingsModal,centered:true,size:\"lg\",children:[/*#__PURE__*/_jsx(ModalHeader,{children:\"Notification Settings\"}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsx(NotificationSettings,{})}),/*#__PURE__*/_jsxs(ModalFooter,{children:[/*#__PURE__*/_jsx(Button,{color:\"secondary\",size:\"sm\",onClick:toggleSettingsModal,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",size:\"sm\",onClick:toggleSettingsModal,children:\"Update\"})]})]})]}),/*#__PURE__*/_jsx(CardBody,{className:\"p-0\",children:loading?/*#__PURE__*/_jsx(Loader,{}):isIterableArray(notifications)?notifications.slice(0,items).map(function(notification,index){return/*#__PURE__*/_createElement(Notification,_objectSpread(_objectSpread({},notification),{},{key:index}));}):/*#__PURE__*/_jsx(Row,{className:\"p-card\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Alert,{color:\"info\",className:\"mb-0\",children:\"No notifications found!\"})})})}),children]});};export default Notifications;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/page/Notifications.js"],"names":["React","useState","Link","Alert","Button","Card","CardBody","Col","CustomInput","Form","Input","Label","ListGroup","ListGroupItem","Modal","ModalBody","ModalFooter","ModalHeader","Row","Notification","FalconCardHeader","Loader","isIterableArray","notifications","rawNotifications","useFakeFetch","NotificationSettings","check1","setCheck1","check2","setCheck2","check3","setCheck3","listGroupItemClasses","Notifications","items","length","children","loading","data","setNotifications","setData","settingsIsOpen","setSettingsIsOpen","toggleSettingsModal","markAsRead","e","preventDefault","updatedNotifications","map","notification","hasOwnProperty","unread","slice","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  Col,\n  CustomInput,\n  Form,\n  Input,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row\n} from 'reactstrap';\nimport Notification from '../notification/Notification';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Loader from '../common/Loader';\nimport { isIterableArray } from '../../helpers/utils';\nimport { notifications as rawNotifications } from '../../data/notification/notification';\nimport useFakeFetch from '../../hooks/useFakeFetch';\n\nconst NotificationSettings = () => {\n  const [check1, setCheck1] = useState(true);\n  const [check2, setCheck2] = useState(true);\n  const [check3, setCheck3] = useState(true);\n\n  const listGroupItemClasses = 'd-flex justify-content-between align-items-center py-2 px-0 border-200';\n\n  return (\n    <Form>\n      <CustomInput\n        type=\"radio\"\n        id=\"exampleCustomRadio\"\n        name=\"customRadio\"\n        label=\"Get a notification each time there is activity on your page or an important update.\"\n      />\n      <CustomInput\n        type=\"radio\"\n        id=\"exampleCustomRadio2\"\n        name=\"customRadio\"\n        label=\"Get one notification every 12-24 hours on all activity and updates.\"\n      />\n      <CustomInput type=\"radio\" id=\"exampleCustomRadio3\" name=\"customRadio\" label=\"Off\" />\n\n      <h5 className=\"fs-0 mb-3 mt-4\">Edit your notification settings for: </h5>\n\n      <ListGroup flush className=\"mb-4 fs--1\">\n        <ListGroupItem className={listGroupItemClasses}>\n          <span>New Mention of Page </span>\n          <span>\n            <Label check />\n            <Input type=\"checkbox\" checked={check1} onChange={() => setCheck1(!check1)} />\n          </span>\n        </ListGroupItem>\n        <ListGroupItem className={listGroupItemClasses}>\n          <span>New Comments on page post</span>\n          <span>\n            <Label check />\n            <Input type=\"checkbox\" checked={check2} onChange={() => setCheck2(!check2)} />\n          </span>\n        </ListGroupItem>\n        <ListGroupItem className={listGroupItemClasses}>\n          <span>Edits to Comments you have written</span>\n          <span>\n            <Label check />\n            <Input type=\"checkbox\" checked={check3} onChange={() => setCheck3(!check3)} />\n          </span>\n        </ListGroupItem>\n      </ListGroup>\n\n      <CustomInput\n        type=\"checkbox\"\n        id=\"customCheckboxActivity\"\n        label=\"Allow notifications from your followers activity\"\n      />\n      <CustomInput type=\"checkbox\" id=\"customCheckboxAssociationsGroups\" label=\"Groups\" />\n      <CustomInput type=\"checkbox\" id=\"customCheckboxAssociations\" label=\"Associations\" />\n    </Form>\n  );\n};\n\nconst Notifications = ({ items = rawNotifications.length, children }) => {\n  const { loading, data: notifications, setData: setNotifications } = useFakeFetch(rawNotifications);\n  const [settingsIsOpen, setSettingsIsOpen] = useState(false);\n\n  const toggleSettingsModal = () => setSettingsIsOpen(!settingsIsOpen);\n\n  const markAsRead = e => {\n    e.preventDefault();\n    const updatedNotifications = notifications.map(notification => {\n      if (!notification.hasOwnProperty('unread')) return notification;\n\n      return {\n        ...notification,\n        unread: false\n      };\n    });\n\n    setNotifications(updatedNotifications);\n  };\n\n  return (\n    <Card className=\"h-100\">\n      <FalconCardHeader title=\"Your Notifications\">\n        <div className=\"fs--1\">\n          <Link className=\"text-sans-serif\" to=\"#!\" onClick={markAsRead}>\n            Mark all as read\n          </Link>\n          <Link className=\"text-sans-serif ml-2 ml-sm-3\" to=\"#!\" onClick={toggleSettingsModal}>\n            Notification settings\n          </Link>\n        </div>\n\n        <Modal isOpen={settingsIsOpen} toggle={toggleSettingsModal} centered size=\"lg\">\n          <ModalHeader>Notification Settings</ModalHeader>\n          <ModalBody>\n            <NotificationSettings />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" size=\"sm\" onClick={toggleSettingsModal}>\n              Cancel\n            </Button>\n            <Button color=\"primary\" size=\"sm\" onClick={toggleSettingsModal}>\n              Update\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </FalconCardHeader>\n      <CardBody className=\"p-0\">\n        {loading ? (\n          <Loader />\n        ) : isIterableArray(notifications) ? (\n          notifications.slice(0, items).map((notification, index) => <Notification {...notification} key={index} />)\n        ) : (\n          <Row className=\"p-card\">\n            <Col>\n              <Alert color=\"info\" className=\"mb-0\">\n                No notifications found!\n              </Alert>\n            </Col>\n          </Row>\n        )}\n      </CardBody>\n      {children}\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  items: PropTypes.number,\n  children: PropTypes.node\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}