{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/common/ScrollBarCustom.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport Scrollbar from 'react-scrollbars-custom';\nimport AppContext from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollBarCustom = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isRTL\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(Scrollbar, {\n    style: {\n      height: '100%',\n      minWidth: '75px'\n    },\n    rtl: isRTL,\n    noScrollX: true,\n    trackYProps: {\n      renderer(props) {\n        const {\n          elementRef,\n          ...restProps\n        } = props;\n        return /*#__PURE__*/_jsxDEV(\"span\", { ...restProps,\n          ref: elementRef,\n          className: \"TrackY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 18\n        }, this);\n      }\n\n    },\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScrollBarCustom, \"8zoF/QyaP1MdNTuxpq21KbN3FnY=\");\n\n_c = ScrollBarCustom;\nScrollBarCustom.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ScrollBarCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollBarCustom\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/ScrollBarCustom.js"],"names":["PropTypes","React","useContext","Scrollbar","AppContext","ScrollBarCustom","children","rest","isRTL","height","minWidth","renderer","props","elementRef","restProps","propTypes","node","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAAA;;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACE,UAAD,CAA5B;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,QAAQ,EAAE;AAFL,KADT;AAKE,IAAA,GAAG,EAAEF,KALP;AAME,IAAA,SAAS,MANX;AAOE,IAAA,WAAW,EAAE;AACXG,MAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,cAAM;AAAEC,UAAAA,UAAF;AAAc,aAAGC;AAAjB,YAA+BF,KAArC;AACA,4BAAO,qBAAUE,SAAV;AAAqB,UAAA,GAAG,EAAED,UAA1B;AAAsC,UAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAJU,KAPf;AAAA,OAaMN,IAbN;AAAA,cAeGD;AAfH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtBD;;GAAMD,e;;KAAAA,e;AAwBNA,eAAe,CAACU,SAAhB,GAA4B;AAC1BT,EAAAA,QAAQ,EAAEN,SAAS,CAACgB,IAAV,CAAeC;AADC,CAA5B;AAIA,eAAeZ,eAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport Scrollbar from 'react-scrollbars-custom';\nimport AppContext from '../../context/Context';\n\nconst ScrollBarCustom = ({ children, ...rest }) => {\n  const { isRTL } = useContext(AppContext);\n\n  return (\n    <Scrollbar\n      style={{\n        height: '100%',\n        minWidth: '75px'\n      }}\n      rtl={isRTL}\n      noScrollX\n      trackYProps={{\n        renderer(props) {\n          const { elementRef, ...restProps } = props;\n          return <span {...restProps} ref={elementRef} className=\"TrackY\" />;\n        }\n      }}\n      {...rest}\n    >\n      {children}\n    </Scrollbar>\n  );\n};\n\nScrollBarCustom.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default ScrollBarCustom;\n"]},"metadata":{},"sourceType":"module"}