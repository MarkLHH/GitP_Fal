{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useContext}from'react';import ContentWithAsideLayout from'../../layouts/ContentWithAsideLayout';import{ProductContext}from'../../context/Context';import{calculateSale,getTotalPrice}from'../../helpers/utils';import CheckoutAside from'./checkout/CheckoutAside';import CheckoutShippingAddress from'./checkout/CheckoutShippingAddress';import CheckoutPaymentMethod from'./checkout/CheckoutPaymentMethod';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Checkout=function Checkout(){var _useContext=useContext(ProductContext),products=_useContext.products,shoppingCart=_useContext.shoppingCart,appliedPromo=_useContext.appliedPromo;var _useState=useState('address-1'),_useState2=_slicedToArray(_useState,2),shippingAddress=_useState2[0],setShippingAddress=_useState2[1];var _useState3=useState('credit-card'),_useState4=_slicedToArray(_useState3,2),paymentMethod=_useState4[0],setPaymentMethod=_useState4[1];var calculatedShippingCost=parseFloat(shoppingCart.map(function(shoppingCartItem){return products.find(function(product){return product.id===shoppingCartItem.id;});}).filter(function(product){return product.hasOwnProperty('shippingCost')&&product.shippingCost!==0;}).reduce(function(accumulated,product){return accumulated>product.shippingCost?accumulated:product.shippingCost;},0));var subTotal=parseFloat(getTotalPrice(shoppingCart,products).toFixed(2));var payableTotal=parseFloat((parseFloat(calculateSale(subTotal,!!appliedPromo?appliedPromo.discount:0))+calculatedShippingCost).toFixed(2));return/*#__PURE__*/_jsx(ContentWithAsideLayout,{aside:/*#__PURE__*/_jsx(CheckoutAside,{calculatedShippingCost:calculatedShippingCost,subTotal:subTotal,payableTotal:payableTotal}),isStickyAside:false,children:/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(CheckoutShippingAddress,{shippingAddress:shippingAddress,setShippingAddress:setShippingAddress}),/*#__PURE__*/_jsx(CheckoutPaymentMethod,{payableTotal:payableTotal,paymentMethod:paymentMethod,setPaymentMethod:setPaymentMethod})]})});};export default Checkout;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/e-commerce/Checkout.js"],"names":["React","Fragment","useState","useContext","ContentWithAsideLayout","ProductContext","calculateSale","getTotalPrice","CheckoutAside","CheckoutShippingAddress","CheckoutPaymentMethod","Checkout","products","shoppingCart","appliedPromo","shippingAddress","setShippingAddress","paymentMethod","setPaymentMethod","calculatedShippingCost","parseFloat","map","shoppingCartItem","find","product","id","filter","hasOwnProperty","shippingCost","reduce","accumulated","subTotal","toFixed","payableTotal","discount"],"mappings":"sGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,UAApC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,sBAAP,KAAmC,sCAAnC,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA6C,qBAA7C,CACA,MAAOC,CAAAA,aAAP,KAA0B,0BAA1B,CACA,MAAOC,CAAAA,uBAAP,KAAoC,oCAApC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,kCAAlC,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,iBAC4BR,UAAU,CAACE,cAAD,CADtC,CACbO,QADa,aACbA,QADa,CACHC,YADG,aACHA,YADG,CACWC,YADX,aACWA,YADX,eAEyBZ,QAAQ,CAAC,WAAD,CAFjC,wCAEda,eAFc,eAEGC,kBAFH,8BAGqBd,QAAQ,CAAC,aAAD,CAH7B,yCAGde,aAHc,eAGCC,gBAHD,eAKrB,GAAMC,CAAAA,sBAAsB,CAAGC,UAAU,CACvCP,YAAY,CACTQ,GADH,CACO,SAAAC,gBAAgB,QAAIV,CAAAA,QAAQ,CAACW,IAAT,CAAc,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,EAAR,GAAeH,gBAAgB,CAACG,EAApC,EAArB,CAAJ,EADvB,EAEGC,MAFH,CAEU,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACG,cAAR,CAAuB,cAAvB,GAA0CH,OAAO,CAACI,YAAR,GAAyB,CAAvE,EAFjB,EAGGC,MAHH,CAGU,SAACC,WAAD,CAAcN,OAAd,QAA2BM,CAAAA,WAAW,CAAGN,OAAO,CAACI,YAAtB,CAAqCE,WAArC,CAAmDN,OAAO,CAACI,YAAtF,EAHV,CAG+G,CAH/G,CADuC,CAAzC,CAMA,GAAMG,CAAAA,QAAQ,CAAGX,UAAU,CAACb,aAAa,CAACM,YAAD,CAAeD,QAAf,CAAb,CAAsCoB,OAAtC,CAA8C,CAA9C,CAAD,CAA3B,CACA,GAAMC,CAAAA,YAAY,CAAGb,UAAU,CAC7B,CAACA,UAAU,CAACd,aAAa,CAACyB,QAAD,CAAW,CAAC,CAACjB,YAAF,CAAiBA,YAAY,CAACoB,QAA9B,CAAyC,CAApD,CAAd,CAAV,CAAkFf,sBAAnF,EAA2Ga,OAA3G,CACE,CADF,CAD6B,CAA/B,CAMA,mBACE,KAAC,sBAAD,EACE,KAAK,cACH,KAAC,aAAD,EACE,sBAAsB,CAAEb,sBAD1B,CAEE,QAAQ,CAAEY,QAFZ,CAGE,YAAY,CAAEE,YAHhB,EAFJ,CAQE,aAAa,CAAE,KARjB,uBAUE,MAAC,QAAD,yBACE,KAAC,uBAAD,EAAyB,eAAe,CAAElB,eAA1C,CAA2D,kBAAkB,CAAEC,kBAA/E,EADF,cAEE,KAAC,qBAAD,EACE,YAAY,CAAEiB,YADhB,CAEE,aAAa,CAAEhB,aAFjB,CAGE,gBAAgB,CAAEC,gBAHpB,EAFF,GAVF,EADF,CAqBD,CAvCD,CAyCA,cAAeP,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useState, useContext } from 'react';\nimport ContentWithAsideLayout from '../../layouts/ContentWithAsideLayout';\nimport { ProductContext } from '../../context/Context';\nimport { calculateSale, getTotalPrice } from '../../helpers/utils';\nimport CheckoutAside from './checkout/CheckoutAside';\nimport CheckoutShippingAddress from './checkout/CheckoutShippingAddress';\nimport CheckoutPaymentMethod from './checkout/CheckoutPaymentMethod';\n\nconst Checkout = () => {\n  const { products, shoppingCart, appliedPromo } = useContext(ProductContext);\n  const [shippingAddress, setShippingAddress] = useState('address-1');\n  const [paymentMethod, setPaymentMethod] = useState('credit-card');\n\n  const calculatedShippingCost = parseFloat(\n    shoppingCart\n      .map(shoppingCartItem => products.find(product => product.id === shoppingCartItem.id))\n      .filter(product => product.hasOwnProperty('shippingCost') && product.shippingCost !== 0)\n      .reduce((accumulated, product) => (accumulated > product.shippingCost ? accumulated : product.shippingCost), 0)\n  );\n  const subTotal = parseFloat(getTotalPrice(shoppingCart, products).toFixed(2));\n  const payableTotal = parseFloat(\n    (parseFloat(calculateSale(subTotal, !!appliedPromo ? appliedPromo.discount : 0)) + calculatedShippingCost).toFixed(\n      2\n    )\n  );\n\n  return (\n    <ContentWithAsideLayout\n      aside={\n        <CheckoutAside\n          calculatedShippingCost={calculatedShippingCost}\n          subTotal={subTotal}\n          payableTotal={payableTotal}\n        />\n      }\n      isStickyAside={false}\n    >\n      <Fragment>\n        <CheckoutShippingAddress shippingAddress={shippingAddress} setShippingAddress={setShippingAddress} />\n        <CheckoutPaymentMethod\n          payableTotal={payableTotal}\n          paymentMethod={paymentMethod}\n          setPaymentMethod={setPaymentMethod}\n        />\n      </Fragment>\n    </ContentWithAsideLayout>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}