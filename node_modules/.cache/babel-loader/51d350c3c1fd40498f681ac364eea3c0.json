{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/auth/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, Form, Row, Col, FormGroup, Input, CustomInput, Label } from 'reactstrap';\nimport Divider from '../common/Divider';\nimport SocialAuthButtons from './SocialAuthButtons';\nimport withRedirect from '../../hoc/withRedirect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  setRedirect,\n  hasLabel,\n  layout\n}) => {\n  _s();\n\n  // State\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [remember, setRemember] = useState(true);\n  const [isDisabled, setIsDisabled] = useState(true); // Handler\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success(`Logged in as ${email}`);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    setIsDisabled(!email || !password);\n  }, [email, password]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [hasLabel && /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: !hasLabel ? 'Email address' : '',\n        value: email,\n        onChange: ({\n          target\n        }) => setEmail(target.value),\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [hasLabel && /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: !hasLabel ? 'Password' : '',\n        value: password,\n        onChange: ({\n          target\n        }) => setPassword(target.value),\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          id: \"customCheckRemember\",\n          label: \"Remember me\",\n          checked: remember,\n          onChange: ({\n            target\n          }) => setRemember(target.checked),\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"fs--1\",\n          to: `/authentication/${layout}/forget-password`,\n          children: \"Forget Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        block: true,\n        className: \"mt-3\",\n        disabled: isDisabled,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      className: \"mt-4\",\n      children: \"or log in with\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SocialAuthButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"d9gjRjLLEDZkxpgDkmdz3vYmUNo=\");\n\n_c = LoginForm;\nLoginForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  layout: PropTypes.string,\n  hasLabel: PropTypes.bool\n};\nLoginForm.defaultProps = {\n  layout: 'basic',\n  hasLabel: false\n};\nexport default _c2 = withRedirect(LoginForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/auth/LoginForm.js"],"names":["React","useState","useEffect","PropTypes","Link","toast","Button","Form","Row","Col","FormGroup","Input","CustomInput","Label","Divider","SocialAuthButtons","withRedirect","LoginForm","setRedirect","hasLabel","layout","email","setEmail","password","setPassword","remember","setRemember","isDisabled","setIsDisabled","handleSubmit","e","preventDefault","success","target","value","checked","propTypes","func","isRequired","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, Form, Row, Col, FormGroup, Input, CustomInput, Label } from 'reactstrap';\nimport Divider from '../common/Divider';\nimport SocialAuthButtons from './SocialAuthButtons';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst LoginForm = ({ setRedirect, hasLabel, layout }) => {\n  // State\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [remember, setRemember] = useState(true);\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success(`Logged in as ${email}`);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    setIsDisabled(!email || !password);\n  }, [email, password]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        {hasLabel && <Label>Email address</Label>}\n        <Input\n          placeholder={!hasLabel ? 'Email address' : ''}\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n          type=\"email\"\n        />\n      </FormGroup>\n      <FormGroup>\n        {hasLabel && <Label>Password</Label>}\n        <Input\n          placeholder={!hasLabel ? 'Password' : ''}\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          type=\"password\"\n        />\n      </FormGroup>\n      <Row className=\"justify-content-between align-items-center\">\n        <Col xs=\"auto\">\n          <CustomInput\n            id=\"customCheckRemember\"\n            label=\"Remember me\"\n            checked={remember}\n            onChange={({ target }) => setRemember(target.checked)}\n            type=\"checkbox\"\n          />\n        </Col>\n        <Col xs=\"auto\">\n          <Link className=\"fs--1\" to={`/authentication/${layout}/forget-password`}>\n            Forget Password?\n          </Link>\n        </Col>\n      </Row>\n      <FormGroup>\n        <Button color=\"primary\" block className=\"mt-3\" disabled={isDisabled}>\n          Log in\n        </Button>\n      </FormGroup>\n      <Divider className=\"mt-4\">or log in with</Divider>\n      <SocialAuthButtons />\n    </Form>\n  );\n};\n\nLoginForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  layout: PropTypes.string,\n  hasLabel: PropTypes.bool\n};\n\nLoginForm.defaultProps = {\n  layout: 'basic',\n  hasLabel: false\n};\n\nexport default withRedirect(LoginForm);\n"]},"metadata":{},"sourceType":"module"}