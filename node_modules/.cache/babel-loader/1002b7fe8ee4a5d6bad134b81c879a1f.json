{"ast":null,"code":"import _defineProperty from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useContext}from'react';import{Nav,NavItem,NavLink,UncontrolledTooltip}from'reactstrap';import ProfileDropdown from'./ProfileDropdown';import NotificationDropdown from'./NotificationDropdown';import SettingsAnimatedIcon from'./SettingsAnimatedIcon';import CartNotification from'./CartNotification';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Link}from'react-router-dom';import AppContext from'../../context/Context';import classNames from'classnames';import{navbarBreakPoint}from'../../config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TopNavRightSideNavItem=function TopNavRightSideNavItem(){var _useContext=useContext(AppContext),isTopNav=_useContext.isTopNav,isCombo=_useContext.isCombo;return/*#__PURE__*/_jsxs(Nav,{navbar:true,className:\"navbar-nav-icons ml-auto flex-row align-items-center\",children:[/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(SettingsAnimatedIcon,{})}),(isCombo||isTopNav)&&/*#__PURE__*/_jsxs(NavItem,{className:classNames(\"p-2 px-lg-0 cursor-pointer\",_defineProperty({},\"d-\".concat(navbarBreakPoint,\"-none\"),isCombo)),children:[/*#__PURE__*/_jsx(NavLink,{tag:Link,to:\"/changelog\",id:\"changelog\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"code-branch\",transform:\"right-6 grow-4\"})}),/*#__PURE__*/_jsx(UncontrolledTooltip,{autohide:false,placement:\"left\",target:\"changelog\",children:\"Changelog\"})]}),/*#__PURE__*/_jsx(CartNotification,{}),/*#__PURE__*/_jsx(NotificationDropdown,{}),/*#__PURE__*/_jsx(ProfileDropdown,{})]});};export default TopNavRightSideNavItem;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/navbar/TopNavRightSideNavItem.js"],"names":["React","useContext","Nav","NavItem","NavLink","UncontrolledTooltip","ProfileDropdown","NotificationDropdown","SettingsAnimatedIcon","CartNotification","FontAwesomeIcon","Link","AppContext","classNames","navbarBreakPoint","TopNavRightSideNavItem","isTopNav","isCombo"],"mappings":"wGAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,GAAT,CAAcC,OAAd,CAAuBC,OAAvB,CAAgCC,mBAAhC,KAA2D,YAA3D,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,gBAAT,KAAiC,cAAjC,C,wFAEA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,iBACLd,UAAU,CAACW,UAAD,CADL,CAC3BI,QAD2B,aAC3BA,QAD2B,CACjBC,OADiB,aACjBA,OADiB,CAEnC,mBACE,MAAC,GAAD,EAAK,MAAM,KAAX,CAAY,SAAS,CAAC,sDAAtB,wBACE,KAAC,OAAD,wBACE,KAAC,oBAAD,IADF,EADF,CAIG,CAACA,OAAO,EAAID,QAAZ,gBACC,MAAC,OAAD,EAAS,SAAS,CAAEH,UAAU,6DAAuCC,gBAAvC,UAAiEG,OAAjE,EAA9B,wBACE,KAAC,OAAD,EAAS,GAAG,CAAEN,IAAd,CAAoB,EAAE,CAAC,YAAvB,CAAoC,EAAE,CAAC,WAAvC,uBACE,KAAC,eAAD,EAAiB,IAAI,CAAC,aAAtB,CAAoC,SAAS,CAAC,gBAA9C,EADF,EADF,cAIE,KAAC,mBAAD,EAAqB,QAAQ,CAAE,KAA/B,CAAsC,SAAS,CAAC,MAAhD,CAAuD,MAAM,CAAC,WAA9D,uBAJF,GALJ,cAcE,KAAC,gBAAD,IAdF,cAeE,KAAC,oBAAD,IAfF,cAgBE,KAAC,eAAD,IAhBF,GADF,CAoBD,CAtBD,CAwBA,cAAeI,CAAAA,sBAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Nav, NavItem, NavLink, UncontrolledTooltip } from 'reactstrap';\r\nimport ProfileDropdown from './ProfileDropdown';\r\nimport NotificationDropdown from './NotificationDropdown';\r\nimport SettingsAnimatedIcon from './SettingsAnimatedIcon';\r\nimport CartNotification from './CartNotification';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from 'react-router-dom';\r\nimport AppContext from '../../context/Context';\r\nimport classNames from 'classnames';\r\nimport { navbarBreakPoint } from '../../config';\r\n\r\nconst TopNavRightSideNavItem = () => {\r\n  const { isTopNav, isCombo } = useContext(AppContext);\r\n  return (\r\n    <Nav navbar className=\"navbar-nav-icons ml-auto flex-row align-items-center\">\r\n      <NavItem>\r\n        <SettingsAnimatedIcon />\r\n      </NavItem>\r\n      {(isCombo || isTopNav) && (\r\n        <NavItem className={classNames(`p-2 px-lg-0 cursor-pointer`, { [`d-${navbarBreakPoint}-none`]: isCombo })}>\r\n          <NavLink tag={Link} to=\"/changelog\" id=\"changelog\">\r\n            <FontAwesomeIcon icon=\"code-branch\" transform=\"right-6 grow-4\" />\r\n          </NavLink>\r\n          <UncontrolledTooltip autohide={false} placement=\"left\" target=\"changelog\">\r\n            Changelog\r\n          </UncontrolledTooltip>\r\n        </NavItem>\r\n      )}\r\n      <CartNotification />\r\n      <NotificationDropdown />\r\n      <ProfileDropdown />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default TopNavRightSideNavItem;\r\n"]},"metadata":{},"sourceType":"module"}