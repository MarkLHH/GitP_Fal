{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useRef,useEffect}from'react';import{DragDropContext}from'react-beautiful-dnd';import is from'is_js';import{KanbanContext}from'../../context/Context';import{isIterableArray}from'../../helpers/utils';import KanbanColumn from'./KanbanColumn';import AddAnotherList from'./AddAnotherList';import KanbanModal from'./KanbanModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var reorder=function reorder(list,startIndex,endIndex){var result=Array.from(list);var _result$splice=result.splice(startIndex,1),_result$splice2=_slicedToArray(_result$splice,1),removed=_result$splice2[0];result.splice(endIndex,0,removed);return result;};var move=function move(source,destination,droppableSource,droppableDestination){var sourceClone=Array.from(source);var destClone=Array.from(destination);var _sourceClone$splice=sourceClone.splice(droppableSource.index,1),_sourceClone$splice2=_slicedToArray(_sourceClone$splice,1),removed=_sourceClone$splice2[0];destClone.splice(droppableDestination.index,0,removed);var result={};result[droppableSource.droppableId]=sourceClone;result[droppableDestination.droppableId]=destClone;return result;};var KanbanContainer=function KanbanContainer(){var _useContext=useContext(KanbanContext),kanbanColumns=_useContext.kanbanColumns,UpdateColumnData=_useContext.UpdateColumnData,modalContent=_useContext.modalContent,modal=_useContext.modal,setModal=_useContext.setModal;var containerRef=useRef(null);// Detect device\nuseEffect(function(){if(is.ipad()){containerRef.current.classList.add('ipad');}if(is.mobile()){containerRef.current.classList.add('mobile');if(is.safari()){containerRef.current.classList.add('safari');}if(is.chrome()){containerRef.current.classList.add('chrome');}}},[]);var getList=function getList(id){var targetColumn=kanbanColumns.find(function(item){return item.id===id;});return targetColumn.items;};var onDragEnd=function onDragEnd(result){var source=result.source,destination=result.destination;// dropped outside the list\nif(!destination){return;}if(source.droppableId===destination.droppableId){var items=reorder(getList(source.droppableId),source.index,destination.index);var column=kanbanColumns.find(function(item){return item.id===source.droppableId;});// update individual column\nUpdateColumnData(column,items);}else{var _result=move(getList(source.droppableId),getList(destination.droppableId),source,destination);var sourceColumn=kanbanColumns.find(function(item){return item.id===source.droppableId;});var destinationColumn=kanbanColumns.find(function(item){return item.id===destination.droppableId;});// update source\nUpdateColumnData(sourceColumn,_result[source.droppableId]);//destination update\nUpdateColumnData(destinationColumn,_result[destination.droppableId]);}};return/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:onDragEnd,children:/*#__PURE__*/_jsxs(\"div\",{className:\"kanban-container scrollbar\",ref:containerRef,children:[isIterableArray(kanbanColumns)&&kanbanColumns.map(function(kanbanColumnItem,index){return/*#__PURE__*/_jsx(KanbanColumn,{kanbanColumnItem:kanbanColumnItem,index:index},index);}),/*#__PURE__*/_jsx(AddAnotherList,{}),/*#__PURE__*/_jsx(KanbanModal,{modal:modal,setModal:setModal,modalContent:modalContent})]})});};export default KanbanContainer;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/kanban/KanbanContainer.js"],"names":["React","useContext","useRef","useEffect","DragDropContext","is","KanbanContext","isIterableArray","KanbanColumn","AddAnotherList","KanbanModal","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","KanbanContainer","kanbanColumns","UpdateColumnData","modalContent","modal","setModal","containerRef","ipad","current","classList","add","mobile","safari","chrome","getList","id","targetColumn","find","item","items","onDragEnd","column","sourceColumn","destinationColumn","map","kanbanColumnItem"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport is from 'is_js';\r\n\r\nimport { KanbanContext } from '../../context/Context';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport KanbanColumn from './KanbanColumn';\r\nimport AddAnotherList from './AddAnotherList';\r\nimport KanbanModal from './KanbanModal';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst KanbanContainer = () => {\r\n  const { kanbanColumns, UpdateColumnData, modalContent, modal, setModal } = useContext(KanbanContext);\r\n  const containerRef = useRef(null);\r\n\r\n  // Detect device\r\n  useEffect(() => {\r\n    if (is.ipad()) {\r\n      containerRef.current.classList.add('ipad');\r\n    }\r\n    if (is.mobile()) {\r\n      containerRef.current.classList.add('mobile');\r\n      if (is.safari()) {\r\n        containerRef.current.classList.add('safari');\r\n      }\r\n      if (is.chrome()) {\r\n        containerRef.current.classList.add('chrome');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const getList = id => {\r\n    const targetColumn = kanbanColumns.find(item => item.id === id);\r\n    return targetColumn.items;\r\n  };\r\n\r\n  const onDragEnd = result => {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const items = reorder(getList(source.droppableId), source.index, destination.index);\r\n      const column = kanbanColumns.find(item => item.id === source.droppableId);\r\n      // update individual column\r\n      UpdateColumnData(column, items);\r\n    } else {\r\n      const result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\r\n\r\n      const sourceColumn = kanbanColumns.find(item => item.id === source.droppableId);\r\n      const destinationColumn = kanbanColumns.find(item => item.id === destination.droppableId);\r\n      // update source\r\n      UpdateColumnData(sourceColumn, result[source.droppableId]);\r\n\r\n      //destination update\r\n      UpdateColumnData(destinationColumn, result[destination.droppableId]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"kanban-container scrollbar\" ref={containerRef}>\r\n        {isIterableArray(kanbanColumns) &&\r\n          kanbanColumns.map((kanbanColumnItem, index) => {\r\n            return <KanbanColumn kanbanColumnItem={kanbanColumnItem} key={index} index={index} />;\r\n          })}\r\n        <AddAnotherList />\r\n        <KanbanModal modal={modal} setModal={setModal} modalContent={modalContent} />\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default KanbanContainer;\r\n"]},"metadata":{},"sourceType":"module"}