{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/plugins/BulkSelect.js\";\nimport React, { Fragment } from 'react';\nimport useBulkSelect from '../../hooks/useBulkSelect';\nimport rawEmails from '../../data/email/emails';\nimport classNames from 'classnames';\nimport { Card, CardBody } from 'reactstrap';\nimport Flex from '../common/Flex';\nimport FalconEditor from '../common/FalconEditor';\nimport PageHeader from '../common/PageHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bulkSelectCode = `function BulkSelectExample() {\n  const emailIds = rawEmails.map(email => email.id);\n  \n  const {\n    selectedItems,\n    isSelectedItem,\n    isAllSelected,\n    isIndeterminate,\n    toggleSelectedItem,\n    toggleIsAllSelected\n  } = useBulkSelect(emailIds);\n\n  return (\n    <Card>\n      <CardBody className=\"p-0\">\n        <Table className=\"mb-0\">\n          <thead>\n            <tr>\n              <th>\n                <CustomInput\n                  id=\"checkbox-bulk\"\n                  type=\"checkbox\"\n                  checked={isAllSelected}\n                  onChange={() => toggleIsAllSelected()}\n                  innerRef={input => input && (input.indeterminate = isIndeterminate)}\n                />\n              </th>\n              <th>Sender</th>\n              <th>Subject</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rawEmails.map(({ id, user, title, img }) => (\n              <tr className={classNames({ 'bg-light': isSelectedItem(id) })} key={id} >\n                <td>\n                  <Flex>\n                    <CustomInput\n                      id={'checkbox-'+id}\n                      type=\"checkbox\"\n                      checked={isSelectedItem(id)}\n                      onChange={() => toggleSelectedItem(id)}\n                    />\n                  </Flex>\n                </td>\n                <th className=\"text-nowrap\">\n                  <Media>\n                    <img src={img} alt={user} width={20} />\n                    <Media body className=\"ml-2 align-items-center\">\n                      {user}\n                    </Media>\n                  </Media>\n                </th>\n                <td>{title}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </CardBody>\n    </Card>\n  );\n}`;\n\nconst BulkSelect = () => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n    title: \"Bulk Select\",\n    description: \"You can use <code>useBulkSelect</code> hook to add the functionality of bulk selection. These are the exports of this hook: <code>selectedItems, isSelectedItem, isAllSelected, isIndeterminate, toggleSelectedItem, toggleIsAllSelected</code>\",\n    className: \"mb-3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-0\",\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: bulkSelectCode,\n        scope: {\n          useBulkSelect,\n          rawEmails,\n          classNames,\n          Flex\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 3\n}, this);\n\n_c = BulkSelect;\nexport default BulkSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"BulkSelect\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/plugins/BulkSelect.js"],"names":["React","Fragment","useBulkSelect","rawEmails","classNames","Card","CardBody","Flex","FalconEditor","PageHeader","bulkSelectCode","BulkSelect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,YAA/B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,cAAc,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EA5DA;;AA8DA,MAAMC,UAAU,GAAG,mBACjB,QAAC,QAAD;AAAA,0BACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,WAAW,EAAC,iPAFd;AAGE,IAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,UADF,eAME,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,KAApB;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAED,cAApB;AAAoC,QAAA,KAAK,EAAE;AAAER,UAAAA,aAAF;AAAiBC,UAAAA,SAAjB;AAA4BC,UAAAA,UAA5B;AAAwCG,UAAAA;AAAxC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UANF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMI,U;AAeN,eAAeA,UAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport useBulkSelect from '../../hooks/useBulkSelect';\nimport rawEmails from '../../data/email/emails';\nimport classNames from 'classnames';\nimport { Card, CardBody } from 'reactstrap';\nimport Flex from '../common/Flex';\nimport FalconEditor from '../common/FalconEditor';\nimport PageHeader from '../common/PageHeader';\n\nconst bulkSelectCode = `function BulkSelectExample() {\n  const emailIds = rawEmails.map(email => email.id);\n  \n  const {\n    selectedItems,\n    isSelectedItem,\n    isAllSelected,\n    isIndeterminate,\n    toggleSelectedItem,\n    toggleIsAllSelected\n  } = useBulkSelect(emailIds);\n\n  return (\n    <Card>\n      <CardBody className=\"p-0\">\n        <Table className=\"mb-0\">\n          <thead>\n            <tr>\n              <th>\n                <CustomInput\n                  id=\"checkbox-bulk\"\n                  type=\"checkbox\"\n                  checked={isAllSelected}\n                  onChange={() => toggleIsAllSelected()}\n                  innerRef={input => input && (input.indeterminate = isIndeterminate)}\n                />\n              </th>\n              <th>Sender</th>\n              <th>Subject</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rawEmails.map(({ id, user, title, img }) => (\n              <tr className={classNames({ 'bg-light': isSelectedItem(id) })} key={id} >\n                <td>\n                  <Flex>\n                    <CustomInput\n                      id={'checkbox-'+id}\n                      type=\"checkbox\"\n                      checked={isSelectedItem(id)}\n                      onChange={() => toggleSelectedItem(id)}\n                    />\n                  </Flex>\n                </td>\n                <th className=\"text-nowrap\">\n                  <Media>\n                    <img src={img} alt={user} width={20} />\n                    <Media body className=\"ml-2 align-items-center\">\n                      {user}\n                    </Media>\n                  </Media>\n                </th>\n                <td>{title}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </CardBody>\n    </Card>\n  );\n}`;\n\nconst BulkSelect = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Bulk Select\"\n      description=\"You can use <code>useBulkSelect</code> hook to add the functionality of bulk selection. These are the exports of this hook: <code>selectedItems, isSelectedItem, isAllSelected, isIndeterminate, toggleSelectedItem, toggleIsAllSelected</code>\"\n      className=\"mb-3\"\n    />\n    <Card className=\"mb-0\">\n      <CardBody className=\"p-0\">\n        <FalconEditor code={bulkSelectCode} scope={{ useBulkSelect, rawEmails, classNames, Flex }} />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default BulkSelect;\n"]},"metadata":{},"sourceType":"module"}