{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useContext}from'react';import{Draggable}from'react-beautiful-dnd';import{Card,CardBody,Badge,CardImg,UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem,UncontrolledTooltip}from'reactstrap';import{Link}from'react-router-dom';import Avatar from'../common/Avatar';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{KanbanContext}from'../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskCard=function TaskCard(_ref){var taskCardItemId=_ref.taskCardItemId,taskCard=_ref.taskCard,taskCardImage=_ref.taskCardImage,members=_ref.members,taskCardIndex=_ref.taskCardIndex;var _useContext=useContext(KanbanContext),getItemStyle=_useContext.getItemStyle,setModalContent=_useContext.setModalContent,setModal=_useContext.setModal;return/*#__PURE__*/_jsx(Draggable,{draggableId:\"draggableId\".concat(taskCardItemId),index:taskCardIndex,children:function children(provided,snapshot){return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({className:\"kanban-item\",ref:provided.innerRef},provided.draggableProps),provided.dragHandleProps),{},{style:provided.draggableProps.style,children:/*#__PURE__*/_jsxs(Card,{className:\"kanban-item-card hover-actions-trigger \",style:getItemStyle(snapshot.isDragging),onClick:function onClick(){setModalContent({taskCard:taskCard,taskCardImage:taskCardImage});setModal(true);},children:[taskCardImage&&/*#__PURE__*/_jsx(CardImg,{top:true,width:\"100%\",src:taskCardImage.url,className:\"overflow-hidden position-relative\",alt:\"Card image cap\"}),/*#__PURE__*/_jsxs(CardBody,{children:[taskCard.labels&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:taskCard.labels.map(function(label,index){return/*#__PURE__*/_jsx(Badge,{className:\"badge-soft-\".concat(label.color,\" d-inline-block py-1 mr-1 mb-1\"),children:label.text},index+10);})}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0 font-weight-medium text-sans-serif\",dangerouslySetInnerHTML:{__html:taskCard.title}}),(taskCard.members||taskCard.attachments||taskCard.checklist)&&/*#__PURE__*/_jsxs(\"div\",{className:\"kanban-item-footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-500\",children:[taskCard.members&&members.find(function(member){return member.id===1;})&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"eye\",className:\"mr-2\",id:\"cardId-\".concat(taskCard.id),transform:\"grow-1\"}),/*#__PURE__*/_jsx(UncontrolledTooltip,{target:\"cardId-\".concat(taskCard.id),children:\"You're assigned in this card\"})]}),taskCard.attachments&&/*#__PURE__*/_jsxs(\"span\",{id:\"attachments-\".concat(taskCard.id),className:\"mr-2\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"paperclip\",className:\"mr-1\"}),/*#__PURE__*/_jsx(\"span\",{children:taskCard.attachments.length}),/*#__PURE__*/_jsx(UncontrolledTooltip,{target:\"attachments-\".concat(taskCard.id),children:\"Attachments\"})]}),taskCard.checklist&&/*#__PURE__*/_jsxs(\"span\",{id:\"Checklist-\".concat(taskCard.id),children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"check\",className:\"mr-1\"}),/*#__PURE__*/_jsxs(\"span\",{children:[taskCard.checklist.completed,\"/\",taskCard.checklist.totalCount]}),/*#__PURE__*/_jsx(UncontrolledTooltip,{target:\"Checklist-\".concat(taskCard.id),children:\"Checklist\"})]})]}),/*#__PURE__*/_jsx(\"div\",{children:taskCard.members&&members.map(function(member,index){return/*#__PURE__*/_jsxs(Link,{to:\"#!\",className:index>0?'ml-n1 p-0':'p-0',id:\"member-\".concat(member.id,\"-\").concat(taskCard.id),children:[/*#__PURE__*/_jsx(Avatar,{src:member.avatar.src,size:\"l\"}),/*#__PURE__*/_jsx(UncontrolledTooltip,{target:\"member-\".concat(member.id,\"-\").concat(taskCard.id),children:member.name})]},index);})})]}),/*#__PURE__*/_jsxs(UncontrolledDropdown,{className:\"position-absolute text-sans-serif t-0 r-0 mt-card mr-card hover-actions\",onClick:function onClick(e){e.stopPropagation();},children:[/*#__PURE__*/_jsx(DropdownToggle,{color:\"falcon-default\",size:\"sm\",className:\"py-0 px-2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"ellipsis-h\"})}),/*#__PURE__*/_jsxs(DropdownMenu,{right:true,className:\"py-0\",children:[/*#__PURE__*/_jsx(DropdownItem,{children:\"Add Card\"}),/*#__PURE__*/_jsx(DropdownItem,{children:\"Edit\"}),/*#__PURE__*/_jsx(DropdownItem,{children:\"Copy link\"}),/*#__PURE__*/_jsx(DropdownItem,{divider:true}),/*#__PURE__*/_jsx(DropdownItem,{className:\"text-danger\",children:\"Remove\"})]})]})]})]})}));}});};export default TaskCard;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/kanban/TaskCard.js"],"names":["React","useContext","Draggable","Card","CardBody","Badge","CardImg","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledTooltip","Link","Avatar","FontAwesomeIcon","KanbanContext","TaskCard","taskCardItemId","taskCard","taskCardImage","members","taskCardIndex","getItemStyle","setModalContent","setModal","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","isDragging","url","labels","map","label","index","color","text","__html","title","attachments","checklist","find","member","id","length","completed","totalCount","avatar","src","name","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Badge,\r\n  CardImg,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledTooltip\r\n} from 'reactstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '../common/Avatar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { KanbanContext } from '../../context/Context';\r\n\r\nconst TaskCard = ({ taskCardItemId, taskCard, taskCardImage, members, taskCardIndex }) => {\r\n  const { getItemStyle, setModalContent, setModal } = useContext(KanbanContext);\r\n  return (\r\n    <Draggable draggableId={`draggableId${taskCardItemId}`} index={taskCardIndex}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          className=\"kanban-item\"\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          style={provided.draggableProps.style}\r\n        >\r\n          <Card\r\n            className=\"kanban-item-card hover-actions-trigger \"\r\n            style={getItemStyle(snapshot.isDragging)}\r\n            onClick={() => {\r\n              setModalContent({ taskCard, taskCardImage });\r\n              setModal(true);\r\n            }}\r\n          >\r\n            {taskCardImage && (\r\n              <CardImg\r\n                top\r\n                width=\"100%\"\r\n                src={taskCardImage.url}\r\n                className=\"overflow-hidden position-relative\"\r\n                alt=\"Card image cap\"\r\n              />\r\n            )}\r\n\r\n            <CardBody>\r\n              {taskCard.labels && (\r\n                <div className=\"mb-2\">\r\n                  {taskCard.labels.map((label, index) => (\r\n                    <Badge className={`badge-soft-${label.color} d-inline-block py-1 mr-1 mb-1`} key={index + 10}>\r\n                      {label.text}\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              <p\r\n                className=\"mb-0 font-weight-medium text-sans-serif\"\r\n                dangerouslySetInnerHTML={{ __html: taskCard.title }}\r\n              />\r\n              {(taskCard.members || taskCard.attachments || taskCard.checklist) && (\r\n                <div className=\"kanban-item-footer\">\r\n                  <div className=\"text-500\">\r\n                    {taskCard.members && members.find(member => member.id === 1) && (\r\n                      <>\r\n                        <FontAwesomeIcon icon=\"eye\" className=\"mr-2\" id={`cardId-${taskCard.id}`} transform=\"grow-1\" />\r\n                        <UncontrolledTooltip target={`cardId-${taskCard.id}`}>\r\n                          You're assigned in this card\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    )}\r\n                    {taskCard.attachments && (\r\n                      <span id={`attachments-${taskCard.id}`} className=\"mr-2\">\r\n                        <FontAwesomeIcon icon=\"paperclip\" className=\"mr-1\" />\r\n                        <span>{taskCard.attachments.length}</span>\r\n                        <UncontrolledTooltip target={`attachments-${taskCard.id}`}>Attachments</UncontrolledTooltip>\r\n                      </span>\r\n                    )}\r\n                    {taskCard.checklist && (\r\n                      <span id={`Checklist-${taskCard.id}`}>\r\n                        <FontAwesomeIcon icon=\"check\" className=\"mr-1\" />\r\n                        <span>\r\n                          {taskCard.checklist.completed}/{taskCard.checklist.totalCount}\r\n                        </span>\r\n                        <UncontrolledTooltip target={`Checklist-${taskCard.id}`}>Checklist</UncontrolledTooltip>\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {taskCard.members &&\r\n                      members.map((member, index) => (\r\n                        <Link\r\n                          to=\"#!\"\r\n                          className={index > 0 ? 'ml-n1 p-0' : 'p-0'}\r\n                          key={index}\r\n                          id={`member-${member.id}-${taskCard.id}`}\r\n                        >\r\n                          <Avatar src={member.avatar.src} size=\"l\" />\r\n                          <UncontrolledTooltip target={`member-${member.id}-${taskCard.id}`}>\r\n                            {member.name}\r\n                          </UncontrolledTooltip>\r\n                        </Link>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <UncontrolledDropdown\r\n                className=\"position-absolute text-sans-serif t-0 r-0 mt-card mr-card hover-actions\"\r\n                onClick={e => {\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                <DropdownToggle color=\"falcon-default\" size=\"sm\" className=\"py-0 px-2\">\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"py-0\">\r\n                  <DropdownItem>Add Card</DropdownItem>\r\n                  <DropdownItem>Edit</DropdownItem>\r\n                  <DropdownItem>Copy link</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem className=\"text-danger\">Remove</DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n"]},"metadata":{},"sourceType":"module"}