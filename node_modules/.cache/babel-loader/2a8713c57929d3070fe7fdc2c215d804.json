{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/auth/RegistrationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, CustomInput, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Divider from '../common/Divider';\nimport SocialAuthButtons from './SocialAuthButtons';\nimport withRedirect from '../../hoc/withRedirect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationForm = ({\n  setRedirect,\n  setRedirectUrl,\n  layout,\n  hasLabel\n}) => {\n  _s();\n\n  // State\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isAccepted, setIsAccepted] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(true); // Handler\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success(`Successfully registered as ${name}`);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    setRedirectUrl(`/authentication/${layout}/login`);\n  }, [setRedirectUrl, layout]);\n  useEffect(() => {\n    setIsDisabled(!name || !email || !password || !confirmPassword || !isAccepted || password !== confirmPassword);\n  }, [name, email, password, confirmPassword, isAccepted]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [hasLabel && /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: !hasLabel ? 'Name' : '',\n        value: name,\n        onChange: ({\n          target\n        }) => setName(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [hasLabel && /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: !hasLabel ? 'Email address' : '',\n        value: email,\n        onChange: ({\n          target\n        }) => setEmail(target.value),\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"col-6\",\n        children: [hasLabel && /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: !hasLabel ? 'Password' : '',\n          value: password,\n          onChange: ({\n            target\n          }) => setPassword(target.value),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"col-6\",\n        children: [hasLabel && /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: !hasLabel ? 'Confirm Password' : '',\n          value: confirmPassword,\n          onChange: ({\n            target\n          }) => setConfirmPassword(target.value),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      id: \"customCheckTerms\",\n      label: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [\"I accept the \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#!\",\n          children: \"terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#!\",\n          children: \"privacy policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this),\n      checked: isAccepted,\n      onChange: ({\n        target\n      }) => setIsAccepted(target.checked),\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        block: true,\n        className: \"mt-3\",\n        disabled: isDisabled,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      className: \"mt-4\",\n      children: \"or register with\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SocialAuthButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"2M+BDaFaYjjF9+ks1s8fCEVAV0k=\");\n\n_c = RegistrationForm;\nRegistrationForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func.isRequired,\n  layout: PropTypes.string,\n  hasLabel: PropTypes.bool\n};\nRegistrationForm.defaultProps = {\n  layout: 'basic',\n  hasLabel: false\n};\nexport default _c2 = withRedirect(RegistrationForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RegistrationForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/auth/RegistrationForm.js"],"names":["React","Fragment","useState","useEffect","PropTypes","Link","toast","Button","CustomInput","Form","FormGroup","Input","Label","Divider","SocialAuthButtons","withRedirect","RegistrationForm","setRedirect","setRedirectUrl","layout","hasLabel","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isAccepted","setIsAccepted","isDisabled","setIsDisabled","handleSubmit","e","preventDefault","success","target","value","checked","propTypes","func","isRequired","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, CustomInput, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Divider from '../common/Divider';\nimport SocialAuthButtons from './SocialAuthButtons';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst RegistrationForm = ({ setRedirect, setRedirectUrl, layout, hasLabel }) => {\n  // State\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isAccepted, setIsAccepted] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success(`Successfully registered as ${name}`);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    setRedirectUrl(`/authentication/${layout}/login`);\n  }, [setRedirectUrl, layout]);\n\n  useEffect(() => {\n    setIsDisabled(!name || !email || !password || !confirmPassword || !isAccepted || password !== confirmPassword);\n  }, [name, email, password, confirmPassword, isAccepted]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        {hasLabel && <Label>Name</Label>}\n        <Input placeholder={!hasLabel ? 'Name' : ''} value={name} onChange={({ target }) => setName(target.value)} />\n      </FormGroup>\n      <FormGroup>\n        {hasLabel && <Label>Email address</Label>}\n        <Input\n          placeholder={!hasLabel ? 'Email address' : ''}\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n          type=\"email\"\n        />\n      </FormGroup>\n      <div className=\"form-row\">\n        <FormGroup className=\"col-6\">\n          {hasLabel && <Label>Password</Label>}\n          <Input\n            placeholder={!hasLabel ? 'Password' : ''}\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup className=\"col-6\">\n          {hasLabel && <Label>Confirm Password</Label>}\n          <Input\n            placeholder={!hasLabel ? 'Confirm Password' : ''}\n            value={confirmPassword}\n            onChange={({ target }) => setConfirmPassword(target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n      </div>\n\n      <CustomInput\n        id=\"customCheckTerms\"\n        label={\n          <Fragment>\n            I accept the <Link to=\"#!\">terms</Link> and <Link to=\"#!\">privacy policy</Link>\n          </Fragment>\n        }\n        checked={isAccepted}\n        onChange={({ target }) => setIsAccepted(target.checked)}\n        type=\"checkbox\"\n      />\n      <FormGroup>\n        <Button color=\"primary\" block className=\"mt-3\" disabled={isDisabled}>\n          Register\n        </Button>\n      </FormGroup>\n      <Divider className=\"mt-4\">or register with</Divider>\n      <SocialAuthButtons />\n    </Form>\n  );\n};\n\nRegistrationForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func.isRequired,\n  layout: PropTypes.string,\n  hasLabel: PropTypes.bool\n};\n\nRegistrationForm.defaultProps = {\n  layout: 'basic',\n  hasLabel: false\n};\n\nexport default withRedirect(RegistrationForm);\n"]},"metadata":{},"sourceType":"module"}