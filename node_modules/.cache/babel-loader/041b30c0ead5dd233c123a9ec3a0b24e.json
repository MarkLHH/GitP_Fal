{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/e-commerce/Products.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useContext, useEffect } from 'react';\nimport { Button, Card, CardBody, Col, CustomInput, Form, InputGroup, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../helpers/utils';\nimport Product from './product/Product';\nimport Flex from '../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport InputGroupAddon from 'reactstrap/es/InputGroupAddon';\nimport ProductFooter from './product/ProductFooter';\nimport usePagination from '../../hooks/usePagination';\nimport { ProductContext } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst Products = ({\n  match,\n  history\n}) => {\n  _s();\n\n  // Context\n  const {\n    products,\n    setProductsLayout,\n    handleSort,\n    sortBy,\n    isAsc\n  } = useContext(ProductContext); // State\n\n  const [productIds, setProductIds] = useState([]); // Hook\n\n  const {\n    loading\n  } = useFakeFetch(products);\n  const {\n    data: paginationData,\n    meta: paginationMeta,\n    handler: paginationHandler\n  } = usePagination(productIds, 4);\n  const {\n    total,\n    itemsPerPage,\n    from,\n    to\n  } = paginationMeta;\n  const {\n    perPage\n  } = paginationHandler;\n  const {\n    productLayout\n  } = match.params;\n  const isList = productLayout === 'list';\n  const isGrid = productLayout === 'grid';\n  useEffect(() => {\n    setProductIds(products.map(product => product.id));\n  }, [products, setProductIds]);\n  useEffect(() => {\n    setProductsLayout(productLayout);\n  }, [setProductsLayout, productLayout]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: \"auto\",\n            className: \"mb-2 mb-sm-0\",\n            tag: Flex,\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n              id: \"itemsPerPage\",\n              type: \"select\",\n              bsSize: \"sm\",\n              value: itemsPerPage,\n              onChange: ({\n                target\n              }) => perPage(Number(target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 6,\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: total,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"mb-0 text-nowrap ml-2\",\n              children: [\"Showing \", from, \"-\", to, \" of \", total, \" Products\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"auto\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              className: \"d-inline-block mr-3\",\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                size: \"sm\",\n                tag: Flex,\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"mr-1\",\n                  children: \"Sort by:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n                  type: \"select\",\n                  defaultValue: sortBy,\n                  id: \"ProductSortBy\",\n                  onChange: ({\n                    target\n                  }) => handleSort(target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"price\",\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rating\",\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"review\",\n                    children: \"Review\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"off\",\n                    children: \"Off\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                  addonType: \"append\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => handleSort(sortBy),\n                    className: \"cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: classNames({\n                        'sort-amount-up': isAsc,\n                        'sort-amount-down': !isAsc\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"cursor-pointer\",\n              icon: classNames({\n                'list-ul': isGrid,\n                th: isList\n              }),\n              onClick: () => history.push(`/e-commerce/products/${isList ? 'grid' : 'list'}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardBody, {\n        className: classNames({\n          'p-0  overflow-hidden': isList,\n          'pb-0': isGrid\n        }),\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Row, {\n          noGutters: isList,\n          children: isIterableArray(products) && products.filter(product => paginationData.includes(product.id)).map((product, index) => /*#__PURE__*/_createElement(Product, { ...product,\n            key: product.id,\n            index: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 44\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductFooter, {\n        meta: paginationMeta,\n        handler: paginationHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"fGZJox1LJFZcKbMbTbyscWwFhu8=\", false, function () {\n  return [useFakeFetch, usePagination];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/e-commerce/Products.js"],"names":["React","Fragment","useState","useContext","useEffect","Button","Card","CardBody","Col","CustomInput","Form","InputGroup","Row","Loader","useFakeFetch","isIterableArray","Product","Flex","FontAwesomeIcon","classNames","InputGroupAddon","ProductFooter","usePagination","ProductContext","Products","match","history","products","setProductsLayout","handleSort","sortBy","isAsc","productIds","setProductIds","loading","data","paginationData","meta","paginationMeta","handler","paginationHandler","total","itemsPerPage","from","to","perPage","productLayout","params","isList","isGrid","map","product","id","target","Number","value","th","push","filter","includes","index"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext, useEffect } from 'react';\nimport { Button, Card, CardBody, Col, CustomInput, Form, InputGroup, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../helpers/utils';\nimport Product from './product/Product';\nimport Flex from '../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport InputGroupAddon from 'reactstrap/es/InputGroupAddon';\nimport ProductFooter from './product/ProductFooter';\nimport usePagination from '../../hooks/usePagination';\nimport { ProductContext } from '../../context/Context';\n\nconst Products = ({ match, history }) => {\n  // Context\n  const { products, setProductsLayout, handleSort, sortBy, isAsc } = useContext(ProductContext);\n\n  // State\n  const [productIds, setProductIds] = useState([]);\n\n  // Hook\n  const { loading } = useFakeFetch(products);\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(productIds, 4);\n  const { total, itemsPerPage, from, to } = paginationMeta;\n  const { perPage } = paginationHandler;\n\n  const { productLayout } = match.params;\n  const isList = productLayout === 'list';\n  const isGrid = productLayout === 'grid';\n\n  useEffect(() => {\n    setProductIds(products.map(product => product.id));\n  }, [products, setProductIds]);\n\n  useEffect(() => {\n    setProductsLayout(productLayout);\n  }, [setProductsLayout, productLayout]);\n\n  return (\n    <Fragment>\n      <Card className=\"mb-3\">\n        <CardBody>\n          <Row className=\"justify-content-between align-items-center\">\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\n              <CustomInput\n                id=\"itemsPerPage\"\n                type=\"select\"\n                bsSize=\"sm\"\n                value={itemsPerPage}\n                onChange={({ target }) => perPage(Number(target.value))}\n              >\n                <option value={2}>2</option>\n                <option value={4}>4</option>\n                <option value={6}>6</option>\n                <option value={total}>All</option>\n              </CustomInput>\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                Showing {from}-{to} of {total} Products\n              </h6>\n            </Col>\n            <Col sm=\"auto\">\n              <Form className=\"d-inline-block mr-3\">\n                <InputGroup size=\"sm\" tag={Flex} align=\"center\">\n                  <small className=\"mr-1\">Sort by:</small>\n                  <CustomInput\n                    type=\"select\"\n                    defaultValue={sortBy}\n                    id=\"ProductSortBy\"\n                    onChange={({ target }) => handleSort(target.value)}\n                  >\n                    <option value=\"price\">Price</option>\n                    <option value=\"rating\">Rating</option>\n                    <option value=\"review\">Review</option>\n                    <option value=\"off\">Off</option>\n                  </CustomInput>\n                  <InputGroupAddon addonType=\"append\">\n                    <Button onClick={() => handleSort(sortBy)} className=\"cursor-pointer\">\n                      <FontAwesomeIcon icon={classNames({ 'sort-amount-up': isAsc, 'sort-amount-down': !isAsc })} />\n                    </Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Form>\n\n              <FontAwesomeIcon\n                className=\"cursor-pointer\"\n                icon={classNames({ 'list-ul': isGrid, th: isList })}\n                onClick={() => history.push(`/e-commerce/products/${isList ? 'grid' : 'list'}`)}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n      <Card>\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\n          {loading ? (\n            <Loader />\n          ) : (\n            <Row noGutters={isList}>\n              {isIterableArray(products) &&\n                products\n                  .filter(product => paginationData.includes(product.id))\n                  .map((product, index) => <Product {...product} key={product.id} index={index} />)}\n            </Row>\n          )}\n        </CardBody>\n        <ProductFooter meta={paginationMeta} handler={paginationHandler} />\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}