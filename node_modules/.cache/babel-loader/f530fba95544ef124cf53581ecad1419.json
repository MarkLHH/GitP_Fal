{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/utilities/StretchedLink.js\";\nimport React, { Fragment } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconEditor from '../common/FalconEditor';\nimport generic1 from '../../assets/img/generic/1.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stretchedLinkCode = `<Fragment>\n  <Card style={{width: '18rem'}}>\n    <CardImg src={generic1} top />\n    <CardBody>\n      <CardTitle tag=\"h5\" tag=\"h5\">\n        Card title\n      </CardTitle>\n      <CardText tag=\"p\">\n        Some quick example text to build on the card\n        title and make up the bulk of the card's\n        content.\n      </CardText>\n      <Button color=\"primary\" size=\"sm\" className=\"stretched-link\">\n        Go somewhere\n      </Button>\n    </CardBody>\n  </Card>\n</Fragment>`;\n\nconst StretchedLink = () => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n    title: \"Stretched Link\",\n    description: \"Make any HTML element or reactstrap component clickable by \\u201Cstretching\\u201D a nested link via CSS.\",\n    className: \"mb-3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-2\",\n        children: \"Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".stretched-link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), \"to a link to make its containing block clickable via a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"::after\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 99\n        }, this), ' ', \"pseudo element. In most cases, this means that an element with \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"position: relative; \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 74\n        }, this), \"that contains a link with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".stretched-link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 27\n        }, this), \"class is clickable.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cards have \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"position: relative \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 22\n        }, this), \"by default in reactstrap, so in this case you can safely add the\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".stretched-link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \"class to a link in the card without any other HTML changes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Multiple links and tap targets are not recommended with stretched links. However, some\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \" position \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), \"and \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"z-index \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 38\n        }, this), \"styles can help should this be required.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: stretchedLinkCode,\n        language: \"jsx\",\n        scope: {\n          generic1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);\n\n_c = StretchedLink;\nexport default StretchedLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"StretchedLink\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/utilities/StretchedLink.js"],"names":["React","Fragment","Card","CardHeader","CardBody","PageHeader","FalconEditor","generic1","stretchedLinkCode","StretchedLink"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,YAA3C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,iBAAiB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAjBA;;AAmBA,MAAMC,aAAa,GAAG,mBACpB,QAAC,QAAD;AAAA,0BACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,WAAW,EAAC,0GAFd;AAGE,IAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,UADF,eAME,QAAC,IAAD;AAAA,4BACE,QAAC,UAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,wCACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,0EAC0F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD1F,EAC+G,GAD/G,kFAEiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFjE,iDAGkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAA,+CACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADb,mFAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE;AAAA,0HAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,uBAE6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,UAApB;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAED,iBAApB;AAAuC,QAAA,QAAQ,EAAC,KAAhD;AAAsD,QAAA,KAAK,EAAE;AAAED,UAAAA;AAAF;AAA7D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UANF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAME,a;AA+BN,eAAeA,aAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconEditor from '../common/FalconEditor';\nimport generic1 from '../../assets/img/generic/1.jpg';\n\nconst stretchedLinkCode = `<Fragment>\n  <Card style={{width: '18rem'}}>\n    <CardImg src={generic1} top />\n    <CardBody>\n      <CardTitle tag=\"h5\" tag=\"h5\">\n        Card title\n      </CardTitle>\n      <CardText tag=\"p\">\n        Some quick example text to build on the card\n        title and make up the bulk of the card's\n        content.\n      </CardText>\n      <Button color=\"primary\" size=\"sm\" className=\"stretched-link\">\n        Go somewhere\n      </Button>\n    </CardBody>\n  </Card>\n</Fragment>`;\n\nconst StretchedLink = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Stretched Link\"\n      description=\"Make any HTML element or reactstrap component clickable by “stretching” a nested link via CSS.\"\n      className=\"mb-3\"\n    />\n    <Card>\n      <CardHeader>\n        <h5 className=\"mb-2\">Example</h5>\n        <p>\n          Add <code>.stretched-link </code>to a link to make its containing block clickable via a <code>::after</code>{' '}\n          pseudo element. In most cases, this means that an element with <code>position: relative; </code>that contains\n          a link with the <code>.stretched-link </code>class is clickable.\n        </p>\n        <p>\n          Cards have <code>position: relative </code>by default in reactstrap, so in this case you can safely add the\n          <code>.stretched-link </code>class to a link in the card without any other HTML changes.\n        </p>\n        <p>\n          Multiple links and tap targets are not recommended with stretched links. However, some\n          <code> position </code>and <code>z-index </code>styles can help should this be required.\n        </p>\n      </CardHeader>\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={stretchedLinkCode} language=\"jsx\" scope={{ generic1 }} />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default StretchedLink;\n"]},"metadata":{},"sourceType":"module"}