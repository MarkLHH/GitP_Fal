{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/email/inbox/EmailAttachment.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Media } from 'reactstrap';\nimport Lightbox from 'react-image-lightbox';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getIconClassNames = type => {\n  switch (type) {\n    case 'youtube':\n      return 'text-youtube';\n\n    case 'zip':\n      return 'text-warning';\n\n    case 'doc':\n      return 'text-primary';\n\n    case 'img':\n      return 'text-danger';\n\n    case 'pdf':\n      return 'text-danger';\n\n    default:\n      return 'text-primary';\n  }\n};\n\nconst EmailAttachment = ({\n  fileName,\n  icon,\n  type,\n  src\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Media, {\n    className: \"d-inline-flex align-items-center border rounded-pill px-3 py-1 mr-2 mt-2 inbox-link cursor-pointer\",\n    onClick: () => setIsOpen(!isOpen),\n    children: [type === 'img' && isOpen && /*#__PURE__*/_jsxDEV(Lightbox, {\n      mainSrc: src,\n      reactModalStyle: {\n        overlay: {\n          zIndex: 999999\n        }\n      },\n      onCloseRequest: () => setIsOpen(!isOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: icon,\n      transform: \"grow-4\",\n      className: getIconClassNames(type)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ml-2\",\n      children: fileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmailAttachment, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = EmailAttachment;\nEmailAttachment.propTypes = {\n  fileName: PropTypes.string.isRequired,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\n  type: PropTypes.string.isRequired,\n  src: PropTypes.string\n};\nexport default EmailAttachment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailAttachment\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/email/inbox/EmailAttachment.js"],"names":["React","PropTypes","Media","Lightbox","FontAwesomeIcon","getIconClassNames","type","EmailAttachment","fileName","icon","src","isOpen","setIsOpen","useState","overlay","zIndex","propTypes","string","isRequired","oneOfType","array"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AAEA,MAAMC,iBAAiB,GAAGC,IAAI,IAAI;AAChC,UAAQA,IAAR;AACE,SAAK,SAAL;AACE,aAAO,cAAP;;AACF,SAAK,KAAL;AACE,aAAO,cAAP;;AACF,SAAK,KAAL;AACE,aAAO,cAAP;;AACF,SAAK,KAAL;AACE,aAAO,aAAP;;AACF,SAAK,KAAL;AACE,aAAO,aAAP;;AACF;AACE,aAAO,cAAP;AAZJ;AAcD,CAfD;;AAiBA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBH,EAAAA,IAAlB;AAAwBI,EAAAA;AAAxB,CAAD,KAAmC;AAAA;;AACzD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAA5B;AAEA,sBACE,QAAC,KAAD;AACE,IAAA,SAAS,EAAC,oGADZ;AAEE,IAAA,OAAO,EAAE,MAAMD,SAAS,CAAC,CAACD,MAAF,CAF1B;AAAA,eAIGL,IAAI,KAAK,KAAT,IAAkBK,MAAlB,iBACC,QAAC,QAAD;AACE,MAAA,OAAO,EAAED,GADX;AAEE,MAAA,eAAe,EAAE;AAAEI,QAAAA,OAAO,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AAAX,OAFnB;AAGE,MAAA,cAAc,EAAE,MAAMH,SAAS,CAAC,CAACD,MAAF;AAHjC;AAAA;AAAA;AAAA;AAAA,YALJ,eAWE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEF,IAAvB;AAA6B,MAAA,SAAS,EAAC,QAAvC;AAAgD,MAAA,SAAS,EAAEJ,iBAAiB,CAACC,IAAD;AAA5E;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,gBAAwBE;AAAxB;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnBD;;GAAMD,e;;KAAAA,e;AAqBNA,eAAe,CAACS,SAAhB,GAA4B;AAC1BR,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UADD;AAE1BT,EAAAA,IAAI,EAAER,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACgB,MAAX,EAAmBhB,SAAS,CAACmB,KAA7B,CAApB,EAAyDF,UAFrC;AAG1BZ,EAAAA,IAAI,EAAEL,SAAS,CAACgB,MAAV,CAAiBC,UAHG;AAI1BR,EAAAA,GAAG,EAAET,SAAS,CAACgB;AAJW,CAA5B;AAOA,eAAeV,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Media } from 'reactstrap';\nimport Lightbox from 'react-image-lightbox';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst getIconClassNames = type => {\n  switch (type) {\n    case 'youtube':\n      return 'text-youtube';\n    case 'zip':\n      return 'text-warning';\n    case 'doc':\n      return 'text-primary';\n    case 'img':\n      return 'text-danger';\n    case 'pdf':\n      return 'text-danger';\n    default:\n      return 'text-primary';\n  }\n};\n\nconst EmailAttachment = ({ fileName, icon, type, src }) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <Media\n      className=\"d-inline-flex align-items-center border rounded-pill px-3 py-1 mr-2 mt-2 inbox-link cursor-pointer\"\n      onClick={() => setIsOpen(!isOpen)}\n    >\n      {type === 'img' && isOpen && (\n        <Lightbox\n          mainSrc={src}\n          reactModalStyle={{ overlay: { zIndex: 999999 } }}\n          onCloseRequest={() => setIsOpen(!isOpen)}\n        />\n      )}\n      <FontAwesomeIcon icon={icon} transform=\"grow-4\" className={getIconClassNames(type)} />\n      <span className=\"ml-2\">{fileName}</span>\n    </Media>\n  );\n};\n\nEmailAttachment.propTypes = {\n  fileName: PropTypes.string.isRequired,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\n  type: PropTypes.string.isRequired,\n  src: PropTypes.string\n};\n\nexport default EmailAttachment;\n"]},"metadata":{},"sourceType":"module"}