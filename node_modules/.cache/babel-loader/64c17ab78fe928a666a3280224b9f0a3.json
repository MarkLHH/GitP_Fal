{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{toast}from'react-toastify';import{Button,Form,Row,Col,FormGroup,Input,CustomInput,Label}from'reactstrap';import Divider from'../common/Divider';import SocialAuthButtons from'./SocialAuthButtons';import withRedirect from'../../hoc/withRedirect';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(_ref){var setRedirect=_ref.setRedirect,hasLabel=_ref.hasLabel,layout=_ref.layout;// State\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),remember=_useState6[0],setRemember=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isDisabled=_useState8[0],setIsDisabled=_useState8[1];// Handler\nvar handleSubmit=function handleSubmit(e){e.preventDefault();toast.success(\"Logged in as \".concat(email));setRedirect(true);};useEffect(function(){setIsDisabled(!email||!password);},[email,password]);return/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(FormGroup,{children:[hasLabel&&/*#__PURE__*/_jsx(Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Input,{placeholder:!hasLabel?'Email address':'',value:email,onChange:function onChange(_ref2){var target=_ref2.target;return setEmail(target.value);},type:\"email\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[hasLabel&&/*#__PURE__*/_jsx(Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Input,{placeholder:!hasLabel?'Password':'',value:password,onChange:function onChange(_ref3){var target=_ref3.target;return setPassword(target.value);},type:\"password\"})]}),/*#__PURE__*/_jsxs(Row,{className:\"justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(Col,{xs:\"auto\",children:/*#__PURE__*/_jsx(CustomInput,{id:\"customCheckRemember\",label:\"Remember me\",checked:remember,onChange:function onChange(_ref4){var target=_ref4.target;return setRemember(target.checked);},type:\"checkbox\"})}),/*#__PURE__*/_jsx(Col,{xs:\"auto\",children:/*#__PURE__*/_jsx(Link,{className:\"fs--1\",to:\"/authentication/\".concat(layout,\"/forget-password\"),children:\"Forget Password?\"})})]}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Button,{color:\"primary\",block:true,className:\"mt-3\",disabled:isDisabled,children:\"Log in\"})}),/*#__PURE__*/_jsx(Divider,{className:\"mt-4\",children:\"or log in with\"}),/*#__PURE__*/_jsx(SocialAuthButtons,{})]});};LoginForm.defaultProps={layout:'basic',hasLabel:false};export default withRedirect(LoginForm);","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/auth/LoginForm.js"],"names":["React","useState","useEffect","Link","toast","Button","Form","Row","Col","FormGroup","Input","CustomInput","Label","Divider","SocialAuthButtons","withRedirect","LoginForm","setRedirect","hasLabel","layout","email","setEmail","password","setPassword","remember","setRemember","isDisabled","setIsDisabled","handleSubmit","e","preventDefault","success","target","value","checked","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, Form, Row, Col, FormGroup, Input, CustomInput, Label } from 'reactstrap';\nimport Divider from '../common/Divider';\nimport SocialAuthButtons from './SocialAuthButtons';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst LoginForm = ({ setRedirect, hasLabel, layout }) => {\n  // State\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [remember, setRemember] = useState(true);\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success(`Logged in as ${email}`);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    setIsDisabled(!email || !password);\n  }, [email, password]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        {hasLabel && <Label>Email address</Label>}\n        <Input\n          placeholder={!hasLabel ? 'Email address' : ''}\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n          type=\"email\"\n        />\n      </FormGroup>\n      <FormGroup>\n        {hasLabel && <Label>Password</Label>}\n        <Input\n          placeholder={!hasLabel ? 'Password' : ''}\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          type=\"password\"\n        />\n      </FormGroup>\n      <Row className=\"justify-content-between align-items-center\">\n        <Col xs=\"auto\">\n          <CustomInput\n            id=\"customCheckRemember\"\n            label=\"Remember me\"\n            checked={remember}\n            onChange={({ target }) => setRemember(target.checked)}\n            type=\"checkbox\"\n          />\n        </Col>\n        <Col xs=\"auto\">\n          <Link className=\"fs--1\" to={`/authentication/${layout}/forget-password`}>\n            Forget Password?\n          </Link>\n        </Col>\n      </Row>\n      <FormGroup>\n        <Button color=\"primary\" block className=\"mt-3\" disabled={isDisabled}>\n          Log in\n        </Button>\n      </FormGroup>\n      <Divider className=\"mt-4\">or log in with</Divider>\n      <SocialAuthButtons />\n    </Form>\n  );\n};\n\nLoginForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  layout: PropTypes.string,\n  hasLabel: PropTypes.bool\n};\n\nLoginForm.defaultProps = {\n  layout: 'basic',\n  hasLabel: false\n};\n\nexport default withRedirect(LoginForm);\n"]},"metadata":{},"sourceType":"module"}