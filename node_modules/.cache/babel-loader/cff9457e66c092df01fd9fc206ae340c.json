{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/plugins/ProgressBarJs.js\";\nimport React, { Fragment } from 'react';\nimport PageHeader from '../common/PageHeader';\nimport { Button, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Circle } from 'react-es6-progressbar.js';\nimport { getGrays, themeColors } from '../../helpers/utils';\nimport FalconEditor from '../common/FalconEditor';\nimport AppContext from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst progressbarCode = `function ProgressbarExample() {\n  const { isDark } = useContext(AppContext);\n  const grays = getGrays(isDark);\n  const options = {\n    color: themeColors.primary,\n    progress: 93,\n    strokeWidth: 5,\n    trailWidth: 5,\n    trailColor: grays['200'],\n    easing: 'easeInOut',\n    duration: 3000,\n    svgStyle: {\n      'stroke-linecap': 'round',\n      display: 'block',\n      width: '100%'\n    },\n    text: { autoStyleContainer: false },\n    // Set default step function for all animate calls\n    step: (state, circle) => {\n      const percentage = Math.round(circle.value() * 100);\n      circle.setText(\"<span class='value'>\"+percentage+\"<b>%</b></span>\");\n    }\n  };\n  \n  return <Circle\n    progress={0.89}\n    options={options}\n    container_class=\"progress-circle progress-circle-dashboard\"\n    container_style={{ width: '150px', height: '150px' }}\n  />\n}`;\n\nconst Progressbar = () => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n    title: \"Progressbar\",\n    description: \"With ProgressBar.js, it's easy to create responsive and stylish progress bars for the web. Animations perform well even on mobile devices. It provides a few built\\u2011in shapes like Line, Circle and SemiCircle but you can also create custom shaped progress bars with any vector graphic editor.\",\n    className: \"mb-3\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      tag: \"a\",\n      href: \"https://github.com/ronaldroe/react-es6-progressbar.js\",\n      target: \"_blank\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"pl-0\",\n      children: [\"Progressbar Documentation\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"chevron-right\",\n        className: \"ml-1 fs--2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: progressbarCode,\n        scope: {\n          Circle,\n          themeColors,\n          getGrays,\n          AppContext\n        },\n        language: \"jsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this);\n\n_c = Progressbar;\nexport default Progressbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Progressbar\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/plugins/ProgressBarJs.js"],"names":["React","Fragment","PageHeader","Button","Card","CardBody","FontAwesomeIcon","Circle","getGrays","themeColors","FalconEditor","AppContext","progressbarCode","Progressbar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,YAAvC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,eAAe,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EA9BA;;AAgCA,MAAMC,WAAW,GAAG,mBAClB,QAAC,QAAD;AAAA,0BACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,WAAW,EAAC,wSAFd;AAKE,IAAA,SAAS,EAAC,MALZ;AAAA,2BAOE,QAAC,MAAD;AACE,MAAA,GAAG,EAAC,GADN;AAEE,MAAA,IAAI,EAAC,uDAFP;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,KAAK,EAAC,MAJR;AAKE,MAAA,IAAI,EAAC,IALP;AAME,MAAA,SAAS,EAAC,MANZ;AAAA,2DASE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,eAAtB;AAAsC,QAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF,eAoBE,QAAC,IAAD;AAAA,2BACE,QAAC,QAAD;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAED,eAApB;AAAqC,QAAA,KAAK,EAAE;AAAEL,UAAAA,MAAF;AAAUE,UAAAA,WAAV;AAAuBD,UAAAA,QAAvB;AAAiCG,UAAAA;AAAjC,SAA5C;AAA2F,QAAA,QAAQ,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UApBF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAME,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PageHeader from '../common/PageHeader';\nimport { Button, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Circle } from 'react-es6-progressbar.js';\nimport { getGrays, themeColors } from '../../helpers/utils';\nimport FalconEditor from '../common/FalconEditor';\nimport AppContext from '../../context/Context';\n\nconst progressbarCode = `function ProgressbarExample() {\n  const { isDark } = useContext(AppContext);\n  const grays = getGrays(isDark);\n  const options = {\n    color: themeColors.primary,\n    progress: 93,\n    strokeWidth: 5,\n    trailWidth: 5,\n    trailColor: grays['200'],\n    easing: 'easeInOut',\n    duration: 3000,\n    svgStyle: {\n      'stroke-linecap': 'round',\n      display: 'block',\n      width: '100%'\n    },\n    text: { autoStyleContainer: false },\n    // Set default step function for all animate calls\n    step: (state, circle) => {\n      const percentage = Math.round(circle.value() * 100);\n      circle.setText(\"<span class='value'>\"+percentage+\"<b>%</b></span>\");\n    }\n  };\n  \n  return <Circle\n    progress={0.89}\n    options={options}\n    container_class=\"progress-circle progress-circle-dashboard\"\n    container_style={{ width: '150px', height: '150px' }}\n  />\n}`;\n\nconst Progressbar = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Progressbar\"\n      description=\"With ProgressBar.js, it's easy to create responsive and stylish progress bars for the web. Animations perform\n        well even on mobile devices. It provides a few builtâ€‘in shapes like Line, Circle and SemiCircle but you can also\n        create custom shaped progress bars with any vector graphic editor.\"\n      className=\"mb-3\"\n    >\n      <Button\n        tag=\"a\"\n        href=\"https://github.com/ronaldroe/react-es6-progressbar.js\"\n        target=\"_blank\"\n        color=\"link\"\n        size=\"sm\"\n        className=\"pl-0\"\n      >\n        Progressbar Documentation\n        <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n      </Button>\n    </PageHeader>\n    <Card>\n      <CardBody>\n        <FalconEditor code={progressbarCode} scope={{ Circle, themeColors, getGrays, AppContext }} language=\"jsx\" />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default Progressbar;\n"]},"metadata":{},"sourceType":"module"}