{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/dashboard-alt/BestSellingProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardBody, CardFooter, Col, CustomInput, Row, Table } from 'reactstrap';\nimport BestSellingProduct from './BestSellingProduct';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getTotalPrice = items => items.map(({\n  unit,\n  price\n}) => unit * price).reduce((total, currentValue) => total + currentValue, 0);\n\nconst BestSellingProducts = ({\n  products\n}) => {\n  _s();\n\n  const {\n    currency\n  } = useContext(AppContext);\n  const totalPrice = getTotalPrice(products);\n  const noOfProducts = products.length;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"h-lg-100 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        borderless: true,\n        className: \"table-dashboard mb-0 fs--1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-900\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Best Selling Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-right\",\n              children: [\"Revenue (\", currency, totalPrice, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"pr-card text-right\",\n              style: {\n                width: '8rem'\n              },\n              children: \"Revenue (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map((product, index) => /*#__PURE__*/_jsxDEV(BestSellingProduct, {\n            product: product,\n            totalPrice: totalPrice,\n            currency: currency,\n            isLast: index === noOfProducts - 1\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      className: \"bg-light py-2\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"flex-between-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(CustomInput, {\n            type: \"select\",\n            id: \"exampleCustomSelect\",\n            bsSize: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Last 7 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Last Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Last Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"falcon-default\",\n            size: \"sm\",\n            tag: Link,\n            to: \"#!\",\n            children: \"View All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BestSellingProducts, \"ip5EK8dlzSHU4NI7cSqU9z5JF1g=\");\n\n_c = BestSellingProducts;\nBestSellingProducts.propTypes = {\n  products: PropTypes.arrayOf(BestSellingProduct.propTypes.product).isRequired\n};\nexport default BestSellingProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"BestSellingProducts\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/dashboard-alt/BestSellingProducts.js"],"names":["React","useContext","PropTypes","Button","Card","CardBody","CardFooter","Col","CustomInput","Row","Table","BestSellingProduct","Link","AppContext","getTotalPrice","items","map","unit","price","reduce","total","currentValue","BestSellingProducts","products","currency","totalPrice","noOfProducts","length","width","product","index","id","propTypes","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardBody, CardFooter, Col, CustomInput, Row, Table } from 'reactstrap';\nimport BestSellingProduct from './BestSellingProduct';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../context/Context';\n\nconst getTotalPrice = items =>\n  items.map(({ unit, price }) => unit * price).reduce((total, currentValue) => total + currentValue, 0);\n\nconst BestSellingProducts = ({ products }) => {\n  const { currency } = useContext(AppContext);\n  const totalPrice = getTotalPrice(products);\n  const noOfProducts = products.length;\n\n  return (\n    <Card className=\"h-lg-100 overflow-hidden\">\n      <CardBody className=\"p-0\">\n        <Table borderless className=\"table-dashboard mb-0 fs--1\">\n          <thead className=\"bg-light\">\n            <tr className=\"text-900\">\n              <th>Best Selling Products</th>\n              <th className=\"text-right\">\n                Revenue ({currency}\n                {totalPrice})\n              </th>\n              <th className=\"pr-card text-right\" style={{ width: '8rem' }}>\n                Revenue (%)\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product, index) => (\n              <BestSellingProduct\n                product={product}\n                totalPrice={totalPrice}\n                currency={currency}\n                isLast={index === noOfProducts - 1}\n                key={product.id}\n              />\n            ))}\n          </tbody>\n        </Table>\n      </CardBody>\n      <CardFooter className=\"bg-light py-2\">\n        <Row className=\"flex-between-center\">\n          <Col xs=\"auto\">\n            <CustomInput type=\"select\" id=\"exampleCustomSelect\" bsSize=\"sm\">\n              <option>Last 7 days</option>\n              <option>Last Month</option>\n              <option>Last Year</option>\n            </CustomInput>\n          </Col>\n          <Col xs=\"auto\">\n            <Button color=\"falcon-default\" size=\"sm\" tag={Link} to=\"#!\">\n              View All\n            </Button>\n          </Col>\n        </Row>\n      </CardFooter>\n    </Card>\n  );\n};\n\nBestSellingProducts.propTypes = { products: PropTypes.arrayOf(BestSellingProduct.propTypes.product).isRequired };\n\nexport default BestSellingProducts;\n"]},"metadata":{},"sourceType":"module"}