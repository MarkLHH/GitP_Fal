{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/feed/AddToFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { Card, CardBody } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport { isIterableArray } from '../../helpers/utils';\nimport PersonFollow from './PersonFollow';\nimport rawPeople from '../../data/people/people';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst AddToFeed = ({\n  peoples\n}) => {\n  _s();\n\n  const {\n    loading: peopleLoading,\n    data: people\n  } = useFakeFetch(rawPeople.slice(0, peoples));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Add to your feed\",\n      titleTag: \"h5\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"fs--1\",\n        to: \"/pages/people\",\n        children: \"See all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: peopleLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) : isIterableArray(people) && people.map((person, index) => /*#__PURE__*/_createElement(PersonFollow, { ...person,\n        key: person.id,\n        divider: people.length === index + 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddToFeed, \"ZIobXmi9H80zvA7OjNGbFczCGhk=\", false, function () {\n  return [useFakeFetch];\n});\n\n_c = AddToFeed;\nAddToFeed.propTypes = {\n  peoples: PropTypes.number\n};\nexport default AddToFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToFeed\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/feed/AddToFeed.js"],"names":["React","PropTypes","useFakeFetch","Card","CardBody","FalconCardHeader","Link","Loader","isIterableArray","PersonFollow","rawPeople","AddToFeed","peoples","loading","peopleLoading","data","people","slice","map","person","index","id","length","propTypes","number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,YAA/B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,OAAO,EAAEC,aAAX;AAA0BC,IAAAA,IAAI,EAAEC;AAAhC,MAA2Cd,YAAY,CAACQ,SAAS,CAACO,KAAV,CAAgB,CAAhB,EAAmBL,OAAnB,CAAD,CAA7D;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC,kBAAxB;AAA2C,MAAA,QAAQ,EAAC,IAApD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,EAAE,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,QAAD;AAAA,gBACGE,aAAa,gBACZ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADY,GAGZN,eAAe,CAACQ,MAAD,CAAf,IACAA,MAAM,CAACE,GAAP,CAAW,CAACC,MAAD,EAASC,KAAT,kBACT,eAAC,YAAD,OAAkBD,MAAlB;AAA0B,QAAA,GAAG,EAAEA,MAAM,CAACE,EAAtC;AAA0C,QAAA,OAAO,EAAEL,MAAM,CAACM,MAAP,KAAkBF,KAAK,GAAG,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AALJ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtBD;;GAAMT,S;UAC6CT,Y;;;KAD7CS,S;AAwBNA,SAAS,CAACY,SAAV,GAAsB;AACpBX,EAAAA,OAAO,EAAEX,SAAS,CAACuB;AADC,CAAtB;AAIA,eAAeb,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { Card, CardBody } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport { isIterableArray } from '../../helpers/utils';\nimport PersonFollow from './PersonFollow';\nimport rawPeople from '../../data/people/people';\n\nconst AddToFeed = ({ peoples }) => {\n  const { loading: peopleLoading, data: people } = useFakeFetch(rawPeople.slice(0, peoples));\n\n  return (\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Add to your feed\" titleTag=\"h5\">\n        <Link className=\"fs--1\" to=\"/pages/people\">\n          See all\n        </Link>\n      </FalconCardHeader>\n      <CardBody>\n        {peopleLoading ? (\n          <Loader />\n        ) : (\n          isIterableArray(people) &&\n          people.map((person, index) => (\n            <PersonFollow {...person} key={person.id} divider={people.length === index + 1} />\n          ))\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nAddToFeed.propTypes = {\n  peoples: PropTypes.number\n};\n\nexport default AddToFeed;\n"]},"metadata":{},"sourceType":"module"}