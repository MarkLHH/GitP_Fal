{"ast":null,"code":"import React,{useContext}from'react';import FalconCardHeader from'../common/FalconCardHeader';import{Badge,Card,CardBody,Col,Row}from'reactstrap';import Flex from'../common/Flex';import ReactEchartsCore from'echarts-for-react/lib/core';import echarts from'echarts/lib/echarts';import'echarts/lib/chart/line';import{getGrays,themeColors,rgbaColor,getPosition,numberFormatter}from'../../helpers/utils';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import AppContext from'../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getOption=function getOption(data,isDark){var grays=getGrays(isDark);return{tooltip:{triggerOn:'mousemove',trigger:'axis',padding:[7,10],formatter:'{b0}: {c0}',backgroundColor:grays.white,borderColor:grays['300'],borderWidth:1,transitionDuration:0,position:function position(pos,params,dom,rect,size){return getPosition(pos,params,dom,rect,size);},textStyle:{color:themeColors.dark}},xAxis:{type:'category',data:['Week 4','Week 5'],boundaryGap:false,splitLine:{show:false},axisLine:{show:false,lineStyle:{color:grays['300'],type:'dashed'}},axisLabel:{show:false},axisTick:{show:false},axisPointer:{type:'none'}},yAxis:{type:'value',splitLine:{show:false},axisLine:{show:false},axisLabel:{show:false},axisTick:{show:false},axisPointer:{show:false}},series:[{type:'line',lineStyle:{color:themeColors.primary,width:3},itemStyle:{color:grays['100'],borderColor:themeColors.primary,borderWidth:2},hoverAnimation:true,data:data,connectNulls:true,smooth:0.6,smoothMonotone:'x',symbol:'circle',symbolSize:8,areaStyle:{color:{type:'linear',x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:rgbaColor(themeColors.primary,0.25)},{offset:1,color:rgbaColor(themeColors.primary,0)}]}}}],grid:{bottom:'2%',top:'0%',right:'10px',left:'10px'}};};var TotalOrder=function TotalOrder(_ref){var data=_ref.data;var _useContext=useContext(AppContext),isDark=_useContext.isDark;var total=data.reduce(function(total,currentValue){return total+currentValue;},0);return/*#__PURE__*/_jsxs(Card,{className:\"h-md-100\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{className:\"pb-0\",title:\"Total Order\",light:false,titleTag:\"h6\"}),/*#__PURE__*/_jsx(CardBody,{tag:Flex,align:\"end\",children:/*#__PURE__*/_jsxs(Row,{className:\"flex-grow-1\",children:[/*#__PURE__*/_jsxs(Col,{className:\"align-self-end\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fs-4 font-weight-normal text-sans-serif text-700 line-height-1 mb-1\",children:numberFormatter(total,1)}),/*#__PURE__*/_jsxs(Badge,{pill:true,color:\"soft-info\",className:\"fs--2\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"caret-up\",className:\"mr-1\"}),\"13.6%\"]})]}),/*#__PURE__*/_jsx(Col,{xs:\"auto\",className:\"pl-0\",children:/*#__PURE__*/_jsx(ReactEchartsCore,{echarts:echarts,option:getOption(data,isDark),style:{width:'8.75rem',minHeight:'5rem',height:'100%'}})})]})})]});};export default TotalOrder;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/dashboard-alt/TotalOrder.js"],"names":["React","useContext","FalconCardHeader","Badge","Card","CardBody","Col","Row","Flex","ReactEchartsCore","echarts","getGrays","themeColors","rgbaColor","getPosition","numberFormatter","FontAwesomeIcon","AppContext","getOption","data","isDark","grays","tooltip","triggerOn","trigger","padding","formatter","backgroundColor","white","borderColor","borderWidth","transitionDuration","position","pos","params","dom","rect","size","textStyle","color","dark","xAxis","type","boundaryGap","splitLine","show","axisLine","lineStyle","axisLabel","axisTick","axisPointer","yAxis","series","primary","width","itemStyle","hoverAnimation","connectNulls","smooth","smoothMonotone","symbol","symbolSize","areaStyle","x","y","x2","y2","colorStops","offset","grid","bottom","top","right","left","TotalOrder","total","reduce","currentValue","minHeight","height"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { Badge, Card, CardBody, Col, Row } from 'reactstrap';\nimport Flex from '../common/Flex';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/line';\nimport { getGrays, themeColors, rgbaColor, getPosition, numberFormatter } from '../../helpers/utils';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AppContext from '../../context/Context';\n\nconst getOption = (data, isDark) => {\n  const grays = getGrays(isDark);\n  return {\n    tooltip: {\n      triggerOn: 'mousemove',\n      trigger: 'axis',\n      padding: [7, 10],\n      formatter: '{b0}: {c0}',\n      backgroundColor: grays.white,\n      borderColor: grays['300'],\n      borderWidth: 1,\n      transitionDuration: 0,\n      position(pos, params, dom, rect, size) {\n        return getPosition(pos, params, dom, rect, size);\n      },\n      textStyle: { color: themeColors.dark }\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Week 4', 'Week 5'],\n      boundaryGap: false,\n      splitLine: { show: false },\n      axisLine: {\n        show: false,\n        lineStyle: {\n          color: grays['300'],\n          type: 'dashed'\n        }\n      },\n      axisLabel: { show: false },\n      axisTick: { show: false },\n      axisPointer: { type: 'none' }\n    },\n    yAxis: {\n      type: 'value',\n      splitLine: { show: false },\n      axisLine: { show: false },\n      axisLabel: { show: false },\n      axisTick: { show: false },\n      axisPointer: { show: false }\n    },\n    series: [\n      {\n        type: 'line',\n        lineStyle: {\n          color: themeColors.primary,\n          width: 3\n        },\n        itemStyle: {\n          color: grays['100'],\n          borderColor: themeColors.primary,\n          borderWidth: 2\n        },\n        hoverAnimation: true,\n        data: data,\n        connectNulls: true,\n        smooth: 0.6,\n        smoothMonotone: 'x',\n        symbol: 'circle',\n        symbolSize: 8,\n        areaStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [\n              {\n                offset: 0,\n                color: rgbaColor(themeColors.primary, 0.25)\n              },\n              {\n                offset: 1,\n                color: rgbaColor(themeColors.primary, 0)\n              }\n            ]\n          }\n        }\n      }\n    ],\n    grid: { bottom: '2%', top: '0%', right: '10px', left: '10px' }\n  };\n};\n\nconst TotalOrder = ({ data }) => {\n  const { isDark } = useContext(AppContext);\n  const total = data.reduce((total, currentValue) => total + currentValue, 0);\n\n  return (\n    <Card className=\"h-md-100\">\n      <FalconCardHeader className=\"pb-0\" title=\"Total Order\" light={false} titleTag=\"h6\" />\n      <CardBody tag={Flex} align=\"end\">\n        <Row className=\"flex-grow-1\">\n          <Col className=\"align-self-end\">\n            <div className=\"fs-4 font-weight-normal text-sans-serif text-700 line-height-1 mb-1\">\n              {numberFormatter(total, 1)}\n            </div>\n            <Badge pill color=\"soft-info\" className=\"fs--2\">\n              <FontAwesomeIcon icon=\"caret-up\" className=\"mr-1\" />\n              13.6%\n            </Badge>\n          </Col>\n          <Col xs=\"auto\" className=\"pl-0\">\n            <ReactEchartsCore\n              echarts={echarts}\n              option={getOption(data, isDark)}\n              style={{ width: '8.75rem', minHeight: '5rem', height: '100%' }}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nTotalOrder.propTypes = { data: PropTypes.array.isRequired };\n\nexport default TotalOrder;\n"]},"metadata":{},"sourceType":"module"}