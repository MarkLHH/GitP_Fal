{"ast":null,"code":"import React,{Fragment}from'react';import{Media}from'reactstrap';import Avatar from'../common/Avatar';import{Link}from'react-router-dom';import createMarkup from'../../helpers/createMarkup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Comments=function Comments(_ref){var comments=_ref.comments,loadComment=_ref.loadComment;return/*#__PURE__*/_jsxs(Fragment,{children:[comments.map(function(_ref2){var id=_ref2.id,avatarSrc=_ref2.avatarSrc,name=_ref2.name,content=_ref2.content,postTime=_ref2.postTime;return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(Media,{className:\"mt-3\",children:[/*#__PURE__*/_jsx(Avatar,{src:avatarSrc,size:\"xl\"}),/*#__PURE__*/_jsxs(Media,{body:true,className:\"ml-2 fs--1\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"mb-1 bg-200 rounded-soft p-2\",children:[/*#__PURE__*/_jsx(Link,{className:\"font-weight-semi-bold\",to:\"/pages/profile\",children:name}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-1\",dangerouslySetInnerHTML:createMarkup(content)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"px-2\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"#!\",children:\"Like\"}),\" \\u2022 \",/*#__PURE__*/_jsx(\"a\",{href:\"#!\",children:\"Reply\"}),\" \\u2022 \",postTime]})]})]})},id);}),!!loadComment&&/*#__PURE__*/_jsxs(\"a\",{className:\"fs--1 text-700 d-inline-block mt-2\",href:\"#!\",children:[\"Load more comments (\",loadComment,\")\"]})]});};export default Comments;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/feed/Comments.js"],"names":["React","Fragment","Media","Avatar","Link","createMarkup","Comments","comments","loadComment","map","id","avatarSrc","name","content","postTime"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,KAAT,KAAsB,YAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA+B,IAA5BC,CAAAA,QAA4B,MAA5BA,QAA4B,CAAlBC,WAAkB,MAAlBA,WAAkB,CAC9C,mBACE,MAAC,QAAD,YACGD,QAAQ,CAACE,GAAT,CAAa,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,CAAOC,SAAP,OAAOA,SAAP,CAAkBC,IAAlB,OAAkBA,IAAlB,CAAwBC,OAAxB,OAAwBA,OAAxB,CAAiCC,QAAjC,OAAiCA,QAAjC,oBACZ,KAAC,QAAD,wBACE,MAAC,KAAD,EAAO,SAAS,CAAC,MAAjB,wBACE,KAAC,MAAD,EAAQ,GAAG,CAAEH,SAAb,CAAwB,IAAI,CAAC,IAA7B,EADF,cAEE,MAAC,KAAD,EAAO,IAAI,KAAX,CAAY,SAAS,CAAC,YAAtB,wBACE,WAAG,SAAS,CAAC,8BAAb,wBACE,KAAC,IAAD,EAAM,SAAS,CAAC,uBAAhB,CAAwC,EAAE,CAAC,gBAA3C,UACGC,IADH,EADF,cAIE,aAAM,SAAS,CAAC,MAAhB,CAAuB,uBAAuB,CAAEP,YAAY,CAACQ,OAAD,CAA5D,EAJF,GADF,cAOE,aAAK,SAAS,CAAC,MAAf,wBACE,UAAG,IAAI,CAAC,IAAR,kBADF,yBAC0B,UAAG,IAAI,CAAC,IAAR,mBAD1B,YACoDC,QADpD,GAPF,GAFF,GADF,EAAeJ,EAAf,CADY,EAAb,CADH,CAmBG,CAAC,CAACF,WAAF,eACC,WAAG,SAAS,CAAC,oCAAb,CAAkD,IAAI,CAAC,IAAvD,kCACuBA,WADvB,OApBJ,GADF,CA2BD,CA5BD,CAmCA,cAAeF,CAAAA,QAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Media } from 'reactstrap';\nimport Avatar from '../common/Avatar';\nimport { Link } from 'react-router-dom';\nimport createMarkup from '../../helpers/createMarkup';\n\nconst Comments = ({ comments, loadComment }) => {\n  return (\n    <Fragment>\n      {comments.map(({ id, avatarSrc, name, content, postTime }) => (\n        <Fragment key={id}>\n          <Media className=\"mt-3\">\n            <Avatar src={avatarSrc} size=\"xl\" />\n            <Media body className=\"ml-2 fs--1\">\n              <p className=\"mb-1 bg-200 rounded-soft p-2\">\n                <Link className=\"font-weight-semi-bold\" to=\"/pages/profile\">\n                  {name}\n                </Link>\n                <span className=\"ml-1\" dangerouslySetInnerHTML={createMarkup(content)} />\n              </p>\n              <div className=\"px-2\">\n                <a href=\"#!\">Like</a> • <a href=\"#!\">Reply</a> • {postTime}\n              </div>\n            </Media>\n          </Media>\n        </Fragment>\n      ))}\n      {!!loadComment && (\n        <a className=\"fs--1 text-700 d-inline-block mt-2\" href=\"#!\">\n          Load more comments ({loadComment})\n        </a>\n      )}\n    </Fragment>\n  );\n};\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired,\n  loadComment: PropTypes.string\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}