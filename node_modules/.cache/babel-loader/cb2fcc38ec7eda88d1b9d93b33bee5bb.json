{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/page/Faq.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageHeader from '../common/PageHeader';\nimport faqs from '../../data/faq/faqs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst QAs = ({\n  question,\n  answer,\n  divider\n}) => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#!\",\n      children: [question, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"caret-right\",\n        transform: \"right-7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"fs--1 mb-0\",\n    children: answer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), divider && /*#__PURE__*/_jsxDEV(\"hr\", {\n    className: \"my-3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 17\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c = QAs;\nQAs.propTypes = {\n  question: PropTypes.string,\n  answer: PropTypes.string,\n  divider: PropTypes.bool\n};\nQAs.defaultProps = {\n  divider: true\n};\n\nconst Faq = () => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n    title: \"Frequently Asked Questions\",\n    description: \"Below you'll find answers to the questions we get<br/>asked the most about to join with Falcon\",\n    className: \"mb-3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardBody, {\n      children: faqs.map((faq, index) => /*#__PURE__*/_createElement(QAs, { ...faq,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      className: \"d-flex align-items-center bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"d-inline-block mr-3 mb-0 fs--1\",\n        children: \"Was this information helpful?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"falcon-default\",\n        size: \"sm\",\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"falcon-default\",\n        size: \"sm\",\n        className: \"ml-2\",\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\n\n_c2 = Faq;\nexport default Faq;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QAs\");\n$RefreshReg$(_c2, \"Faq\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/page/Faq.js"],"names":["React","Fragment","PropTypes","Link","Button","Card","CardBody","CardFooter","FontAwesomeIcon","PageHeader","faqs","QAs","question","answer","divider","propTypes","string","bool","defaultProps","Faq","map","faq","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,UAAjC,QAAmD,YAAnD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,kBACV,QAAC,QAAD;AAAA,0BACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,IAAT;AAAA,iBACGF,QADH,eAEE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,aAAtB;AAAoC,QAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,eAOE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA,cAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAPF,EAQGC,OAAO,iBAAI;AAAI,IAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,UARd;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,G;AAaNA,GAAG,CAACI,SAAJ,GAAgB;AACdH,EAAAA,QAAQ,EAAEV,SAAS,CAACc,MADN;AAEdH,EAAAA,MAAM,EAAEX,SAAS,CAACc,MAFJ;AAGdF,EAAAA,OAAO,EAAEZ,SAAS,CAACe;AAHL,CAAhB;AAMAN,GAAG,CAACO,YAAJ,GAAmB;AAAEJ,EAAAA,OAAO,EAAE;AAAX,CAAnB;;AAEA,MAAMK,GAAG,GAAG,mBACV,QAAC,QAAD;AAAA,0BACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,WAAW,EAAC,gGAFd;AAGE,IAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,UADF,eAME,QAAC,IAAD;AAAA,4BACE,QAAC,QAAD;AAAA,gBACGT,IAAI,CAACU,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACR,eAAC,GAAD,OAASD,GAAT;AAAc,QAAA,GAAG,EAAEC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,oCAAtB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,gBAAd;AAA+B,QAAA,IAAI,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,gBAAd;AAA+B,QAAA,IAAI,EAAC,IAApC;AAAyC,QAAA,SAAS,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UANF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMH,G;AA0BN,eAAeA,GAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageHeader from '../common/PageHeader';\nimport faqs from '../../data/faq/faqs';\n\nconst QAs = ({ question, answer, divider }) => (\n  <Fragment>\n    <h6>\n      <Link to=\"#!\">\n        {question}\n        <FontAwesomeIcon icon=\"caret-right\" transform=\"right-7\" />\n      </Link>\n    </h6>\n    <p className=\"fs--1 mb-0\">{answer}</p>\n    {divider && <hr className=\"my-3\" />}\n  </Fragment>\n);\n\nQAs.propTypes = {\n  question: PropTypes.string,\n  answer: PropTypes.string,\n  divider: PropTypes.bool\n};\n\nQAs.defaultProps = { divider: true };\n\nconst Faq = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Frequently Asked Questions\"\n      description=\"Below you'll find answers to the questions we get<br/>asked the most about to join with Falcon\"\n      className=\"mb-3\"\n    />\n    <Card>\n      <CardBody>\n        {faqs.map((faq, index) => (\n          <QAs {...faq} key={index} />\n        ))}\n      </CardBody>\n      <CardFooter className=\"d-flex align-items-center bg-light\">\n        <h5 className=\"d-inline-block mr-3 mb-0 fs--1\">Was this information helpful?</h5>\n        <Button color=\"falcon-default\" size=\"sm\">\n          Yes\n        </Button>\n        <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\n          No\n        </Button>\n      </CardFooter>\n    </Card>\n  </Fragment>\n);\n\nexport default Faq;\n"]},"metadata":{},"sourceType":"module"}