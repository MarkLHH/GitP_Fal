{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/common/FalconLightBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Lightbox from 'react-image-lightbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FalconLightBox = ({\n  imgSrc,\n  children\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cursor-pointer\",\n      onClick: () => setIsOpen(true),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Lightbox, {\n      mainSrc: imgSrc,\n      onCloseRequest: () => setIsOpen(false),\n      reactModalStyle: {\n        overlay: {\n          zIndex: 999999\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FalconLightBox, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = FalconLightBox;\nFalconLightBox.propTypes = {\n  imgSrc: PropTypes.string.isRequired\n};\nexport default FalconLightBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"FalconLightBox\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/FalconLightBox.js"],"names":["React","Fragment","useState","PropTypes","Lightbox","FalconLightBox","imgSrc","children","isOpen","setIsOpen","overlay","zIndex","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA0B;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAE,MAAMO,SAAS,CAAC,IAAD,CAAxD;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAIGC,MAAM,iBACL,QAAC,QAAD;AACE,MAAA,OAAO,EAAEF,MADX;AAEE,MAAA,cAAc,EAAE,MAAMG,SAAS,CAAC,KAAD,CAFjC;AAGE,MAAA,eAAe,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AAAX;AAHnB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;GAAMN,c;;KAAAA,c;AAkBNA,cAAc,CAACO,SAAf,GAA2B;AAAEN,EAAAA,MAAM,EAAEH,SAAS,CAACU,MAAV,CAAiBC;AAA3B,CAA3B;AAEA,eAAeT,cAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Lightbox from 'react-image-lightbox';\n\nconst FalconLightBox = ({ imgSrc, children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Fragment>\n      <div className=\"cursor-pointer\" onClick={() => setIsOpen(true)}>\n        {children}\n      </div>\n      {isOpen && (\n        <Lightbox\n          mainSrc={imgSrc}\n          onCloseRequest={() => setIsOpen(false)}\n          reactModalStyle={{ overlay: { zIndex: 999999 } }}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nFalconLightBox.propTypes = { imgSrc: PropTypes.string.isRequired };\n\nexport default FalconLightBox;\n"]},"metadata":{},"sourceType":"module"}