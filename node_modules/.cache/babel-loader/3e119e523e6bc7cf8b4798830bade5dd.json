{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import classNames from'classnames';import React,{useState}from'react';import{Link}from'react-router-dom';import{Card,Dropdown,DropdownMenu,DropdownToggle}from'reactstrap';import ListGroup from'reactstrap/es/ListGroup';import ListGroupItem from'reactstrap/es/ListGroupItem';import{rawEarlierNotifications,rawNewNotifications}from'../../data/notification/notification';import{isIterableArray}from'../../helpers/utils';import useFakeFetch from'../../hooks/useFakeFetch';import FalconCardHeader from'../common/FalconCardHeader';import Notification from'../notification/Notification';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NotificationDropdown=function NotificationDropdown(){// State\nvar _useFakeFetch=useFakeFetch(rawNewNotifications),newNotifications=_useFakeFetch.data,setNewNotifications=_useFakeFetch.setData;var _useFakeFetch2=useFakeFetch(rawEarlierNotifications),earlierNotifications=_useFakeFetch2.data,setEarlierNotifications=_useFakeFetch2.setData;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isAllRead=_useState4[0],setIsAllRead=_useState4[1];// Handler\nvar handleToggle=function handleToggle(e){e.preventDefault();setIsOpen(!isOpen);};var markAsRead=function markAsRead(e){e.preventDefault();var updatedNewNotifications=newNotifications.map(function(notification){if(notification.hasOwnProperty('unread')){return _objectSpread(_objectSpread({},notification),{},{unread:false});}return notification;});var updatedEarlierNotifications=earlierNotifications.map(function(notification){if(notification.hasOwnProperty('unread')){return _objectSpread(_objectSpread({},notification),{},{unread:false});}setIsAllRead(true);return notification;});setNewNotifications(updatedNewNotifications);setEarlierNotifications(updatedEarlierNotifications);};return/*#__PURE__*/_jsxs(Dropdown,{nav:true,inNavbar:true,isOpen:isOpen,toggle:handleToggle,onMouseOver:function onMouseOver(){var windowWidth=window.innerWidth;windowWidth>992&&setIsOpen(true);},onMouseLeave:function onMouseLeave(){var windowWidth=window.innerWidth;windowWidth>992&&setIsOpen(false);},children:[/*#__PURE__*/_jsx(DropdownToggle,{nav:true,className:classNames('px-0',{'notification-indicator notification-indicator-primary':!isAllRead}),children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"bell\",transform:\"shrink-6\",className:\"fs-4\"})}),/*#__PURE__*/_jsx(DropdownMenu,{right:true,className:\"dropdown-menu-card\",children:/*#__PURE__*/_jsxs(Card,{className:\"card-notification shadow-none\",style:{maxWidth:'20rem'},children:[/*#__PURE__*/_jsx(FalconCardHeader,{className:\"card-header\",title:\"Notifications\",titleTag:\"h6\",light:false,children:/*#__PURE__*/_jsx(Link,{className:\"card-link font-weight-normal\",to:\"#!\",onClick:markAsRead,children:\"Mark all as read\"})}),/*#__PURE__*/_jsxs(ListGroup,{flush:true,className:\"font-weight-normal fs--1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"list-group-title\",children:\"NEW\"}),isIterableArray(newNotifications)&&newNotifications.map(function(notification,index){return/*#__PURE__*/_jsx(ListGroupItem,{onClick:handleToggle,children:/*#__PURE__*/_jsx(Notification,_objectSpread(_objectSpread({},notification),{},{flush:true}))},index);}),/*#__PURE__*/_jsx(\"div\",{className:\"list-group-title\",children:\"EARLIER\"}),isIterableArray(earlierNotifications)&&earlierNotifications.map(function(notification,index){return/*#__PURE__*/_jsx(ListGroupItem,{onClick:handleToggle,children:/*#__PURE__*/_jsx(Notification,_objectSpread(_objectSpread({},notification),{},{flush:true}))},index);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-footer text-center border-top\",onClick:handleToggle,children:/*#__PURE__*/_jsx(Link,{className:\"card-link d-block\",to:\"/pages/notifications\",children:\"View all\"})})]})})]});};export default NotificationDropdown;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/navbar/NotificationDropdown.js"],"names":["FontAwesomeIcon","classNames","React","useState","Link","Card","Dropdown","DropdownMenu","DropdownToggle","ListGroup","ListGroupItem","rawEarlierNotifications","rawNewNotifications","isIterableArray","useFakeFetch","FalconCardHeader","Notification","NotificationDropdown","newNotifications","data","setNewNotifications","setData","earlierNotifications","setEarlierNotifications","isOpen","setIsOpen","isAllRead","setIsAllRead","handleToggle","e","preventDefault","markAsRead","updatedNewNotifications","map","notification","hasOwnProperty","unread","updatedEarlierNotifications","windowWidth","window","innerWidth","maxWidth","index"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classNames from 'classnames';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport ListGroup from 'reactstrap/es/ListGroup';\r\nimport ListGroupItem from 'reactstrap/es/ListGroupItem';\r\nimport { rawEarlierNotifications, rawNewNotifications } from '../../data/notification/notification';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport useFakeFetch from '../../hooks/useFakeFetch';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport Notification from '../notification/Notification';\r\n\r\nconst NotificationDropdown = () => {\r\n  // State\r\n  const { data: newNotifications, setData: setNewNotifications } = useFakeFetch(rawNewNotifications);\r\n  const { data: earlierNotifications, setData: setEarlierNotifications } = useFakeFetch(rawEarlierNotifications);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isAllRead, setIsAllRead] = useState(false);\r\n\r\n  // Handler\r\n  const handleToggle = e => {\r\n    e.preventDefault();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const markAsRead = e => {\r\n    e.preventDefault();\r\n    const updatedNewNotifications = newNotifications.map(notification => {\r\n      if (notification.hasOwnProperty('unread')) {\r\n        return {\r\n          ...notification,\r\n          unread: false\r\n        };\r\n      }\r\n      return notification;\r\n    });\r\n    const updatedEarlierNotifications = earlierNotifications.map(notification => {\r\n      if (notification.hasOwnProperty('unread')) {\r\n        return {\r\n          ...notification,\r\n          unread: false\r\n        };\r\n      }\r\n      setIsAllRead(true);\r\n      return notification;\r\n    });\r\n\r\n    setNewNotifications(updatedNewNotifications);\r\n    setEarlierNotifications(updatedEarlierNotifications);\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      nav\r\n      inNavbar\r\n      isOpen={isOpen}\r\n      toggle={handleToggle}\r\n      onMouseOver={() => {\r\n        let windowWidth = window.innerWidth;\r\n        windowWidth > 992 && setIsOpen(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        let windowWidth = window.innerWidth;\r\n        windowWidth > 992 && setIsOpen(false);\r\n      }}\r\n    >\r\n      <DropdownToggle\r\n        nav\r\n        className={classNames('px-0', {\r\n          'notification-indicator notification-indicator-primary': !isAllRead\r\n        })}\r\n      >\r\n        <FontAwesomeIcon icon=\"bell\" transform=\"shrink-6\" className=\"fs-4\" />\r\n      </DropdownToggle>\r\n      <DropdownMenu right className=\"dropdown-menu-card\">\r\n        <Card className=\"card-notification shadow-none\" style={{ maxWidth: '20rem' }}>\r\n          <FalconCardHeader className=\"card-header\" title=\"Notifications\" titleTag=\"h6\" light={false}>\r\n            <Link className=\"card-link font-weight-normal\" to=\"#!\" onClick={markAsRead}>\r\n              Mark all as read\r\n            </Link>\r\n          </FalconCardHeader>\r\n          <ListGroup flush className=\"font-weight-normal fs--1\">\r\n            <div className=\"list-group-title\">NEW</div>\r\n            {isIterableArray(newNotifications) &&\r\n              newNotifications.map((notification, index) => (\r\n                <ListGroupItem key={index} onClick={handleToggle}>\r\n                  <Notification {...notification} flush />\r\n                </ListGroupItem>\r\n              ))}\r\n            <div className=\"list-group-title\">EARLIER</div>\r\n            {isIterableArray(earlierNotifications) &&\r\n              earlierNotifications.map((notification, index) => (\r\n                <ListGroupItem key={index} onClick={handleToggle}>\r\n                  <Notification {...notification} flush />\r\n                </ListGroupItem>\r\n              ))}\r\n          </ListGroup>\r\n          <div className=\"card-footer text-center border-top\" onClick={handleToggle}>\r\n            <Link className=\"card-link d-block\" to=\"/pages/notifications\">\r\n              View all\r\n            </Link>\r\n          </div>\r\n        </Card>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NotificationDropdown;\r\n"]},"metadata":{},"sourceType":"module"}