{"ast":null,"code":"import React from'react';import{Card,CardBody,CardFooter,Col,CustomInput,Row}from'reactstrap';import CardDropdown from'./CardDropdown';import FalconCardHeader from'../common/FalconCardHeader';import Flex from'../common/Flex';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Link}from'react-router-dom';import{Circle}from'react-es6-progressbar.js';import{rgbaColor,themeColors}from'../../helpers/utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BandwidthSaved=function BandwidthSaved(_ref){var total=_ref.total,saved=_ref.saved;var options={color:themeColors.primary,progress:saved/total,strokeWidth:5,trailWidth:5,trailColor:rgbaColor('#000',0.15),easing:'easeInOut',duration:3000,svgStyle:{'stroke-linecap':'round',display:'block',width:'100%'},text:{autoStyleContainer:false},// Set default step function for all animate calls\nstep:function step(state,circle){var percentage=Math.round(circle.value()*100);circle.setText(\"<span class='value'>\".concat(percentage,\"<b>%</b></span>\"));}};return/*#__PURE__*/_jsxs(Card,{className:\"h-100\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Bandwidth Saved\",titleTag:\"h6\",className:\"py-2\",children:/*#__PURE__*/_jsx(CardDropdown,{})}),/*#__PURE__*/_jsx(CardBody,{tag:Flex,align:\"center\",justify:\"center\",className:\"h-100\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Circle,{progress:saved/total,options:options,container_class:\"progress-circle progress-circle-dashboard\",container_style:{width:'150px',height:'150px'}}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-4\",children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"fs-0 mb-1\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"check\",transform:\"shrink-2\",className:\"text-success mr-1\"}),saved,\" GB saved\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"fs--1 mb-0\",children:[total,\" GB total bandwidth\"]})]})]})}),/*#__PURE__*/_jsx(CardFooter,{className:\"bg-light py-2\",children:/*#__PURE__*/_jsxs(Row,{className:\"flex-between-center\",children:[/*#__PURE__*/_jsx(Col,{xs:\"auto\",children:/*#__PURE__*/_jsxs(CustomInput,{type:\"select\",id:\"exampleCustomSelect\",bsSize:\"sm\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"Last 6 Months\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Last Year\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Last 2 Year\"})]})}),/*#__PURE__*/_jsx(Col,{xs:\"auto\",children:/*#__PURE__*/_jsx(Link,{className:\"fs--1\",to:\"#!\",children:\"Help\"})})]})})]});};export default BandwidthSaved;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/dashboard-alt/BandwidthSaved.js"],"names":["React","Card","CardBody","CardFooter","Col","CustomInput","Row","CardDropdown","FalconCardHeader","Flex","FontAwesomeIcon","Link","Circle","rgbaColor","themeColors","BandwidthSaved","total","saved","options","color","primary","progress","strokeWidth","trailWidth","trailColor","easing","duration","svgStyle","display","width","text","autoStyleContainer","step","state","circle","percentage","Math","round","value","setText","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardFooter, Col, CustomInput, Row } from 'reactstrap';\nimport CardDropdown from './CardDropdown';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Flex from '../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { Circle } from 'react-es6-progressbar.js';\nimport { rgbaColor, themeColors } from '../../helpers/utils';\n\nconst BandwidthSaved = ({ total, saved }) => {\n  const options = {\n    color: themeColors.primary,\n    progress: saved / total,\n    strokeWidth: 5,\n    trailWidth: 5,\n    trailColor: rgbaColor('#000', 0.15),\n    easing: 'easeInOut',\n    duration: 3000,\n    svgStyle: {\n      'stroke-linecap': 'round',\n      display: 'block',\n      width: '100%'\n    },\n    text: { autoStyleContainer: false },\n    // Set default step function for all animate calls\n    step: (state, circle) => {\n      const percentage = Math.round(circle.value() * 100);\n      circle.setText(`<span class='value'>${percentage}<b>%</b></span>`);\n    }\n  };\n\n  return (\n    <Card className=\"h-100\">\n      <FalconCardHeader title=\"Bandwidth Saved\" titleTag=\"h6\" className=\"py-2\">\n        <CardDropdown />\n      </FalconCardHeader>\n      <CardBody tag={Flex} align=\"center\" justify=\"center\" className=\"h-100\">\n        <div>\n          <Circle\n            progress={saved / total}\n            options={options}\n            container_class=\"progress-circle progress-circle-dashboard\"\n            container_style={{ width: '150px', height: '150px' }}\n          />\n          <div className=\"text-center mt-4\">\n            <h6 className=\"fs-0 mb-1\">\n              <FontAwesomeIcon icon=\"check\" transform=\"shrink-2\" className=\"text-success mr-1\" />\n              {saved} GB saved\n            </h6>\n            <p className=\"fs--1 mb-0\">{total} GB total bandwidth</p>\n          </div>\n        </div>\n      </CardBody>\n      <CardFooter className=\"bg-light py-2\">\n        <Row className=\"flex-between-center\">\n          <Col xs=\"auto\">\n            <CustomInput type=\"select\" id=\"exampleCustomSelect\" bsSize=\"sm\">\n              <option>Last 6 Months</option>\n              <option>Last Year</option>\n              <option>Last 2 Year</option>\n            </CustomInput>\n          </Col>\n          <Col xs=\"auto\">\n            <Link className=\"fs--1\" to=\"#!\">\n              Help\n            </Link>\n          </Col>\n        </Row>\n      </CardFooter>\n    </Card>\n  );\n};\n\nBandwidthSaved.propTypes = {\n  total: PropTypes.number.isRequired,\n  saved: PropTypes.number.isRequired\n};\n\nexport default BandwidthSaved;\n"]},"metadata":{},"sourceType":"module"}