{"ast":null,"code":"import React,{Fragment}from'react';import{Card,CardHeader,CardBody}from'reactstrap';import PageHeader from'../common/PageHeader';import FalconEditor from'../common/FalconEditor';import generic1 from'../../assets/img/generic/1.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var stretchedLinkCode=\"<Fragment>\\n  <Card style={{width: '18rem'}}>\\n    <CardImg src={generic1} top />\\n    <CardBody>\\n      <CardTitle tag=\\\"h5\\\" tag=\\\"h5\\\">\\n        Card title\\n      </CardTitle>\\n      <CardText tag=\\\"p\\\">\\n        Some quick example text to build on the card\\n        title and make up the bulk of the card's\\n        content.\\n      </CardText>\\n      <Button color=\\\"primary\\\" size=\\\"sm\\\" className=\\\"stretched-link\\\">\\n        Go somewhere\\n      </Button>\\n    </CardBody>\\n  </Card>\\n</Fragment>\";var StretchedLink=function StretchedLink(){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Stretched Link\",description:\"Make any HTML element or reactstrap component clickable by \\u201Cstretching\\u201D a nested link via CSS.\",className:\"mb-3\"}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardHeader,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-2\",children:\"Example\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Add \",/*#__PURE__*/_jsx(\"code\",{children:\".stretched-link \"}),\"to a link to make its containing block clickable via a \",/*#__PURE__*/_jsx(\"code\",{children:\"::after\"}),' ',\"pseudo element. In most cases, this means that an element with \",/*#__PURE__*/_jsx(\"code\",{children:\"position: relative; \"}),\"that contains a link with the \",/*#__PURE__*/_jsx(\"code\",{children:\".stretched-link \"}),\"class is clickable.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Cards have \",/*#__PURE__*/_jsx(\"code\",{children:\"position: relative \"}),\"by default in reactstrap, so in this case you can safely add the\",/*#__PURE__*/_jsx(\"code\",{children:\".stretched-link \"}),\"class to a link in the card without any other HTML changes.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Multiple links and tap targets are not recommended with stretched links. However, some\",/*#__PURE__*/_jsx(\"code\",{children:\" position \"}),\"and \",/*#__PURE__*/_jsx(\"code\",{children:\"z-index \"}),\"styles can help should this be required.\"]})]}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:stretchedLinkCode,language:\"jsx\",scope:{generic1:generic1}})})]})]});};export default StretchedLink;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/utilities/StretchedLink.js"],"names":["React","Fragment","Card","CardHeader","CardBody","PageHeader","FalconEditor","generic1","stretchedLinkCode","StretchedLink"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,QAA3B,KAA2C,YAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,C,wFAEA,GAAMC,CAAAA,iBAAiB,yfAAvB,CAmBA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,sBACpB,MAAC,QAAD,yBACE,KAAC,UAAD,EACE,KAAK,CAAC,gBADR,CAEE,WAAW,CAAC,0GAFd,CAGE,SAAS,CAAC,MAHZ,EADF,cAME,MAAC,IAAD,yBACE,MAAC,UAAD,yBACE,WAAI,SAAS,CAAC,MAAd,qBADF,cAEE,yCACM,0CADN,wEAC0F,iCAD1F,CAC+G,GAD/G,gFAEiE,8CAFjE,+CAGkB,0CAHlB,yBAFF,cAOE,gDACa,6CADb,iFAEE,0CAFF,iEAPF,cAWE,2HAEE,oCAFF,qBAE6B,kCAF7B,8CAXF,GADF,cAiBE,KAAC,QAAD,EAAU,SAAS,CAAC,UAApB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAED,iBAApB,CAAuC,QAAQ,CAAC,KAAhD,CAAsD,KAAK,CAAE,CAAED,QAAQ,CAARA,QAAF,CAA7D,EADF,EAjBF,GANF,GADoB,EAAtB,CA+BA,cAAeE,CAAAA,aAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconEditor from '../common/FalconEditor';\nimport generic1 from '../../assets/img/generic/1.jpg';\n\nconst stretchedLinkCode = `<Fragment>\n  <Card style={{width: '18rem'}}>\n    <CardImg src={generic1} top />\n    <CardBody>\n      <CardTitle tag=\"h5\" tag=\"h5\">\n        Card title\n      </CardTitle>\n      <CardText tag=\"p\">\n        Some quick example text to build on the card\n        title and make up the bulk of the card's\n        content.\n      </CardText>\n      <Button color=\"primary\" size=\"sm\" className=\"stretched-link\">\n        Go somewhere\n      </Button>\n    </CardBody>\n  </Card>\n</Fragment>`;\n\nconst StretchedLink = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Stretched Link\"\n      description=\"Make any HTML element or reactstrap component clickable by “stretching” a nested link via CSS.\"\n      className=\"mb-3\"\n    />\n    <Card>\n      <CardHeader>\n        <h5 className=\"mb-2\">Example</h5>\n        <p>\n          Add <code>.stretched-link </code>to a link to make its containing block clickable via a <code>::after</code>{' '}\n          pseudo element. In most cases, this means that an element with <code>position: relative; </code>that contains\n          a link with the <code>.stretched-link </code>class is clickable.\n        </p>\n        <p>\n          Cards have <code>position: relative </code>by default in reactstrap, so in this case you can safely add the\n          <code>.stretched-link </code>class to a link in the card without any other HTML changes.\n        </p>\n        <p>\n          Multiple links and tap targets are not recommended with stretched links. However, some\n          <code> position </code>and <code>z-index </code>styles can help should this be required.\n        </p>\n      </CardHeader>\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={stretchedLinkCode} language=\"jsx\" scope={{ generic1 }} />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default StretchedLink;\n"]},"metadata":{},"sourceType":"module"}