{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/e-commerce/product/StarCount.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StarCount = ({\n  stars,\n  base = [1, 2, 3, 4, 5]\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: base.map(index => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [index <= stars && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"star\",\n        className: \"text-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 30\n      }, this), stars.toString().split('.')[1] === '5' && stars.toString().split('.')[0] === (index - 1).toString() ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"star-half-alt\",\n        className: \"text-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this) : index > stars && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"star\",\n        className: \"text-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 30\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StarCount;\nStarCount.propTypes = {\n  stars: PropTypes.number.isRequired\n};\nexport default StarCount;\n\nvar _c;\n\n$RefreshReg$(_c, \"StarCount\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/e-commerce/product/StarCount.js"],"names":["React","Fragment","PropTypes","FontAwesomeIcon","StarCount","stars","base","map","index","toString","split","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAAhB,CAAD,KAAuC;AACvD,sBACE,QAAC,QAAD;AAAA,cACGA,IAAI,CAACC,GAAL,CAASC,KAAK,iBACb,QAAC,QAAD;AAAA,iBACGA,KAAK,IAAIH,KAAT,iBAAkB,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADrB,EAEGA,KAAK,CAACI,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,GAAnC,IAA0CL,KAAK,CAACI,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,CAACF,KAAK,GAAG,CAAT,EAAYC,QAAZ,EAA7E,gBACC,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,eAAtB;AAAsC,QAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cADD,GAGCD,KAAK,GAAGH,KAAR,iBAAiB,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cALrB;AAAA,OAAeG,KAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMJ,S;AAiBNA,SAAS,CAACO,SAAV,GAAsB;AAAEN,EAAAA,KAAK,EAAEH,SAAS,CAACU,MAAV,CAAiBC;AAA1B,CAAtB;AAEA,eAAeT,SAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst StarCount = ({ stars, base = [1, 2, 3, 4, 5] }) => {\n  return (\n    <Fragment>\n      {base.map(index => (\n        <Fragment key={index}>\n          {index <= stars && <FontAwesomeIcon icon=\"star\" className=\"text-warning\" />}\n          {stars.toString().split('.')[1] === '5' && stars.toString().split('.')[0] === (index - 1).toString() ? (\n            <FontAwesomeIcon icon=\"star-half-alt\" className=\"text-warning\" />\n          ) : (\n            index > stars && <FontAwesomeIcon icon=\"star\" className=\"text-300\" />\n          )}\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n};\n\nStarCount.propTypes = { stars: PropTypes.number.isRequired };\n\nexport default StarCount;\n"]},"metadata":{},"sourceType":"module"}