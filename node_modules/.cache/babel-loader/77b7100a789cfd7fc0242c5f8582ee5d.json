{"ast":null,"code":"import _toConsumableArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{KanbanContext}from'../../context/Context';import{Button,Form,Input,Row,Col}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddAnotherCard=function AddAnotherCard(_ref){var kanbanColumnItem=_ref.kanbanColumnItem,setShowForm=_ref.setShowForm;var _useContext=useContext(KanbanContext),kanbanColumnsDispatch=_useContext.kanbanColumnsDispatch,kanbanTaskCards=_useContext.kanbanTaskCards,kanbanTaskCardsDispatch=_useContext.kanbanTaskCardsDispatch;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),cardHeaderTitle=_useState2[0],setCardHeaderTitle=_useState2[1];var handleAddCard=function handleAddCard(value){var item={id:kanbanTaskCards.length+1,title:value};kanbanTaskCardsDispatch({type:'ADD',payload:item,id:item.id});kanbanColumnsDispatch({type:'EDIT',payload:_objectSpread(_objectSpread({},kanbanColumnItem),{},{items:[].concat(_toConsumableArray(kanbanColumnItem.items),[item.id])}),id:kanbanColumnItem.id});};var handleSubmit=function handleSubmit(e){e.preventDefault();handleAddCard(cardHeaderTitle);setShowForm(false);setCardHeaderTitle('');};return/*#__PURE__*/_jsx(\"div\",{className:\"p-3 border bg-white rounded-soft transition-none mt-3\",children:/*#__PURE__*/_jsxs(Form,{onSubmit:function onSubmit(e){return handleSubmit(e);},children:[/*#__PURE__*/_jsx(Input,{type:\"textarea\",placeholder:\"Enter a title for this card...\",className:\"mb-2 add-card\",value:cardHeaderTitle,autoFocus:true,onChange:function onChange(_ref2){var target=_ref2.target;setCardHeaderTitle(target.value);}}),/*#__PURE__*/_jsxs(Row,{form:true,className:\"mt-2\",children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Button,{color:\"primary\",size:\"sm\",block:true,type:\"submit\",children:\"Add\"})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Button,{color:\"outline-secondary\",size:\"sm\",block:true,className:\"border-400\",onClick:function onClick(){setShowForm(false);setCardHeaderTitle('');},children:\"Cancel\"})})]})]})});};export default AddAnotherCard;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/kanban/AddAnotherCard.js"],"names":["React","useContext","useState","KanbanContext","Button","Form","Input","Row","Col","AddAnotherCard","kanbanColumnItem","setShowForm","kanbanColumnsDispatch","kanbanTaskCards","kanbanTaskCardsDispatch","cardHeaderTitle","setCardHeaderTitle","handleAddCard","value","item","id","length","title","type","payload","items","handleSubmit","e","preventDefault","target"],"mappings":"yTAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,GAA9B,CAAmCC,GAAnC,KAA8C,YAA9C,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAuC,IAApCC,CAAAA,gBAAoC,MAApCA,gBAAoC,CAAlBC,WAAkB,MAAlBA,WAAkB,iBACgBV,UAAU,CAACE,aAAD,CAD1B,CACpDS,qBADoD,aACpDA,qBADoD,CAC7BC,eAD6B,aAC7BA,eAD6B,CACZC,uBADY,aACZA,uBADY,eAGdZ,QAAQ,CAAC,EAAD,CAHM,wCAGrDa,eAHqD,eAGpCC,kBAHoC,eAK5D,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC7B,GAAMC,CAAAA,IAAI,CAAG,CACXC,EAAE,CAAEP,eAAe,CAACQ,MAAhB,CAAyB,CADlB,CAEXC,KAAK,CAAEJ,KAFI,CAAb,CAKAJ,uBAAuB,CAAC,CACtBS,IAAI,CAAE,KADgB,CAEtBC,OAAO,CAAEL,IAFa,CAGtBC,EAAE,CAAED,IAAI,CAACC,EAHa,CAAD,CAAvB,CAMAR,qBAAqB,CAAC,CACpBW,IAAI,CAAE,MADc,CAEpBC,OAAO,gCAAOd,gBAAP,MAAyBe,KAAK,8BAAMf,gBAAgB,CAACe,KAAvB,GAA8BN,IAAI,CAACC,EAAnC,EAA9B,EAFa,CAGpBA,EAAE,CAAEV,gBAAgB,CAACU,EAHD,CAAD,CAArB,CAKD,CAjBD,CAmBA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxBA,CAAC,CAACC,cAAF,GACAX,aAAa,CAACF,eAAD,CAAb,CACAJ,WAAW,CAAC,KAAD,CAAX,CACAK,kBAAkB,CAAC,EAAD,CAAlB,CACD,CALD,CAMA,mBACE,YAAK,SAAS,CAAC,uDAAf,uBACE,MAAC,IAAD,EAAM,QAAQ,CAAE,kBAAAW,CAAC,QAAID,CAAAA,YAAY,CAACC,CAAD,CAAhB,EAAjB,wBACE,KAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,WAAW,CAAC,gCAFd,CAGE,SAAS,CAAC,eAHZ,CAIE,KAAK,CAAEZ,eAJT,CAKE,SAAS,KALX,CAME,QAAQ,CAAE,wBAAgB,IAAbc,CAAAA,MAAa,OAAbA,MAAa,CACxBb,kBAAkB,CAACa,MAAM,CAACX,KAAR,CAAlB,CACD,CARH,EADF,cAWE,MAAC,GAAD,EAAK,IAAI,KAAT,CAAU,SAAS,CAAC,MAApB,wBACE,KAAC,GAAD,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,IAAI,CAAC,IAA7B,CAAkC,KAAK,KAAvC,CAAwC,IAAI,CAAC,QAA7C,iBADF,EADF,cAME,KAAC,GAAD,wBACE,KAAC,MAAD,EACE,KAAK,CAAC,mBADR,CAEE,IAAI,CAAC,IAFP,CAGE,KAAK,KAHP,CAIE,SAAS,CAAC,YAJZ,CAKE,OAAO,CAAE,kBAAM,CACbP,WAAW,CAAC,KAAD,CAAX,CACAK,kBAAkB,CAAC,EAAD,CAAlB,CACD,CARH,oBADF,EANF,GAXF,GADF,EADF,CAqCD,CAnED,CAqEA,cAAeP,CAAAA,cAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { KanbanContext } from '../../context/Context';\r\nimport { Button, Form, Input, Row, Col } from 'reactstrap';\r\n\r\nconst AddAnotherCard = ({ kanbanColumnItem, setShowForm }) => {\r\n  const { kanbanColumnsDispatch, kanbanTaskCards, kanbanTaskCardsDispatch } = useContext(KanbanContext);\r\n\r\n  const [cardHeaderTitle, setCardHeaderTitle] = useState('');\r\n\r\n  const handleAddCard = value => {\r\n    const item = {\r\n      id: kanbanTaskCards.length + 1,\r\n      title: value\r\n    };\r\n\r\n    kanbanTaskCardsDispatch({\r\n      type: 'ADD',\r\n      payload: item,\r\n      id: item.id\r\n    });\r\n\r\n    kanbanColumnsDispatch({\r\n      type: 'EDIT',\r\n      payload: { ...kanbanColumnItem, items: [...kanbanColumnItem.items, item.id] },\r\n      id: kanbanColumnItem.id\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    handleAddCard(cardHeaderTitle);\r\n    setShowForm(false);\r\n    setCardHeaderTitle('');\r\n  };\r\n  return (\r\n    <div className=\"p-3 border bg-white rounded-soft transition-none mt-3\">\r\n      <Form onSubmit={e => handleSubmit(e)}>\r\n        <Input\r\n          type=\"textarea\"\r\n          placeholder=\"Enter a title for this card...\"\r\n          className=\"mb-2 add-card\"\r\n          value={cardHeaderTitle}\r\n          autoFocus\r\n          onChange={({ target }) => {\r\n            setCardHeaderTitle(target.value);\r\n          }}\r\n        />\r\n        <Row form className=\"mt-2\">\r\n          <Col>\r\n            <Button color=\"primary\" size=\"sm\" block type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              color=\"outline-secondary\"\r\n              size=\"sm\"\r\n              block\r\n              className=\"border-400\"\r\n              onClick={() => {\r\n                setShowForm(false);\r\n                setCardHeaderTitle('');\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAnotherCard;\r\n"]},"metadata":{},"sourceType":"module"}