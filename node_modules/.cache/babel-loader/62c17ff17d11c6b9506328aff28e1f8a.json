{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{Fragment,useState}from'react';import{Map,InfoWindow,Marker,GoogleApiWrapper}from'google-maps-react';import classNames from'classnames';import googleMapStyles from'../../helpers/googleMapStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GoogleMap=function GoogleMap(_ref){var mapStyle=_ref.mapStyle,className=_ref.className,children=_ref.children,rest=_objectWithoutProperties(_ref,[\"mapStyle\",\"className\",\"children\"]);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),activeMarker=_useState2[0],setActiveMarker=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showingInfoWindow=_useState4[0],setShowingInfoWindow=_useState4[1];var onMarkerClick=function onMarkerClick(props,marker){setActiveMarker(marker);setShowingInfoWindow(true);};var onInfoWindowClose=function onInfoWindowClose(){setActiveMarker(null);setShowingInfoWindow(false);};return/*#__PURE__*/_jsx(\"div\",{className:classNames('position-relative',className),children:/*#__PURE__*/_jsxs(Map,_objectSpread(_objectSpread({styles:googleMapStyles[mapStyle]},rest),{},{children:[/*#__PURE__*/_jsx(Marker,{onClick:onMarkerClick}),children&&/*#__PURE__*/_jsx(InfoWindow,{marker:activeMarker,onClose:onInfoWindowClose,visible:showingInfoWindow,children:/*#__PURE__*/_jsx(Fragment,{children:children})})]}))});};GoogleMap.defaultProps={zoom:17,mapStyle:'Default'};// TODO: Do you provide the apiKey in production, instruct user to use his own apiKey\nexport default GoogleApiWrapper({apiKey:'AIzaSyARdVcREeBK44lIWnv5-iPijKqvlSAVwbw'})(GoogleMap);","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/map/GoogleMap.js"],"names":["React","Fragment","useState","Map","InfoWindow","Marker","GoogleApiWrapper","classNames","googleMapStyles","GoogleMap","mapStyle","className","children","rest","activeMarker","setActiveMarker","showingInfoWindow","setShowingInfoWindow","onMarkerClick","props","marker","onInfoWindowClose","defaultProps","zoom","apiKey"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CAEA,OAASC,GAAT,CAAcC,UAAd,CAA0BC,MAA1B,CAAkCC,gBAAlC,KAA0D,mBAA1D,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAgD,IAA7CC,CAAAA,QAA6C,MAA7CA,QAA6C,CAAnCC,SAAmC,MAAnCA,SAAmC,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAXC,IAAW,kFACxBX,QAAQ,CAAC,EAAD,CADgB,wCACzDY,YADyD,eAC3CC,eAD2C,8BAEdb,QAAQ,CAAC,KAAD,CAFM,yCAEzDc,iBAFyD,eAEtCC,oBAFsC,eAIhE,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACvCL,eAAe,CAACK,MAAD,CAAf,CACAH,oBAAoB,CAAC,IAAD,CAApB,CACD,CAHD,CAKA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BN,eAAe,CAAC,IAAD,CAAf,CACAE,oBAAoB,CAAC,KAAD,CAApB,CACD,CAHD,CAKA,mBACE,YAAK,SAAS,CAAEV,UAAU,CAAC,mBAAD,CAAsBI,SAAtB,CAA1B,uBACE,MAAC,GAAD,8BAAK,MAAM,CAAEH,eAAe,CAACE,QAAD,CAA5B,EAA4CG,IAA5C,6BACE,KAAC,MAAD,EAAQ,OAAO,CAAEK,aAAjB,EADF,CAGGN,QAAQ,eACP,KAAC,UAAD,EAAY,MAAM,CAAEE,YAApB,CAAkC,OAAO,CAAEO,iBAA3C,CAA8D,OAAO,CAAEL,iBAAvE,uBACE,KAAC,QAAD,WAAWJ,QAAX,EADF,EAJJ,IADF,EADF,CAaD,CA3BD,CA6CAH,SAAS,CAACa,YAAV,CAAyB,CAAEC,IAAI,CAAE,EAAR,CAAYb,QAAQ,CAAE,SAAtB,CAAzB,CAEA;AACA,cAAeJ,CAAAA,gBAAgB,CAAC,CAAEkB,MAAM,CAAE,yCAAV,CAAD,CAAhB,CAAwEf,SAAxE,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport classNames from 'classnames';\nimport googleMapStyles from '../../helpers/googleMapStyles';\n\nconst GoogleMap = ({ mapStyle, className, children, ...rest }) => {\n  const [activeMarker, setActiveMarker] = useState({});\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false);\n\n  const onMarkerClick = (props, marker) => {\n    setActiveMarker(marker);\n    setShowingInfoWindow(true);\n  };\n\n  const onInfoWindowClose = () => {\n    setActiveMarker(null);\n    setShowingInfoWindow(false);\n  };\n\n  return (\n    <div className={classNames('position-relative', className)}>\n      <Map styles={googleMapStyles[mapStyle]} {...rest}>\n        <Marker onClick={onMarkerClick} />\n\n        {children && (\n          <InfoWindow marker={activeMarker} onClose={onInfoWindowClose} visible={showingInfoWindow}>\n            <Fragment>{children}</Fragment>\n          </InfoWindow>\n        )}\n      </Map>\n    </div>\n  );\n};\n\nGoogleMap.propTypes = {\n  mapStyle: PropTypes.oneOf([\n    'Default',\n    'Gray',\n    'Midnight',\n    'Hopper',\n    'Beard',\n    'AssassianCreed',\n    'SubtleGray',\n    'Tripitty'\n  ]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  ...Map.propTypes\n};\n\nGoogleMap.defaultProps = { zoom: 17, mapStyle: 'Default' };\n\n// TODO: Do you provide the apiKey in production, instruct user to use his own apiKey\nexport default GoogleApiWrapper({ apiKey: 'AIzaSyARdVcREeBK44lIWnv5-iPijKqvlSAVwbw' })(GoogleMap);\n"]},"metadata":{},"sourceType":"module"}