{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/navbar/NavbarVerticalMenu.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useContext, useEffect, useState } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Collapse, Nav, NavItem, NavLink as BootstrapNavLink } from 'reactstrap';\nimport AppContext from '../../context/Context';\nimport NavbarVerticalMenuItem from './NavbarVerticalMenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavbarVerticalMenu = ({\n  routes,\n  location\n}) => {\n  _s();\n\n  const [openedIndex, setOpenedIndex] = useState(null);\n  const {\n    setShowBurgerMenu\n  } = useContext(AppContext);\n  useEffect(() => {\n    let openedDropdown = null;\n    routes.forEach((route, index) => {\n      if (location.pathname.indexOf(route.to) === 0) openedDropdown = index;\n    });\n    setOpenedIndex(openedDropdown); // eslint-disable-next-line\n  }, []);\n\n  const toggleOpened = (e, index) => {\n    e.preventDefault();\n    return setOpenedIndex(openedIndex === index ? null : index);\n  };\n\n  const getHr = name => {\n    if (name === 'Widgets' || name === 'Documentation') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-vertical-divider\",\n        children: /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"navbar-vertical-hr my-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return routes.map((route, index) => {\n    if (!route.children) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [getHr(route.name), /*#__PURE__*/_jsxDEV(NavItem, {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"nav-link\",\n            ...route,\n            onClick: () => setShowBurgerMenu(false),\n            children: /*#__PURE__*/_jsxDEV(NavbarVerticalMenuItem, {\n              route: route\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [getHr(route.name), /*#__PURE__*/_jsxDEV(NavItem, {\n        children: [/*#__PURE__*/_jsxDEV(BootstrapNavLink, {\n          onClick: e => toggleOpened(e, index),\n          className: \"dropdown-indicator cursor-pointer\",\n          \"aria-expanded\": openedIndex === index,\n          children: /*#__PURE__*/_jsxDEV(NavbarVerticalMenuItem, {\n            route: route\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: openedIndex === index,\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            children: /*#__PURE__*/_jsxDEV(NavbarVerticalMenu, {\n              routes: route.children,\n              location: location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  });\n};\n\n_s(NavbarVerticalMenu, \"b6wgM4Qjv7pKNZ0MonVipka/2o4=\");\n\n_c = NavbarVerticalMenu;\nNavbarVerticalMenu.propTypes = {\n  routes: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired\n};\nexport default _c2 = withRouter(NavbarVerticalMenu);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavbarVerticalMenu\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/navbar/NavbarVerticalMenu.js"],"names":["PropTypes","React","Fragment","useContext","useEffect","useState","NavLink","withRouter","Collapse","Nav","NavItem","BootstrapNavLink","AppContext","NavbarVerticalMenuItem","NavbarVerticalMenu","routes","location","openedIndex","setOpenedIndex","setShowBurgerMenu","openedDropdown","forEach","route","index","pathname","indexOf","to","toggleOpened","e","preventDefault","getHr","name","map","children","propTypes","array","isRequired","object"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment, useContext, useEffect, useState } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Collapse, Nav, NavItem, NavLink as BootstrapNavLink } from 'reactstrap';\nimport AppContext from '../../context/Context';\nimport NavbarVerticalMenuItem from './NavbarVerticalMenuItem';\n\nconst NavbarVerticalMenu = ({ routes, location }) => {\n  const [openedIndex, setOpenedIndex] = useState(null);\n  const { setShowBurgerMenu } = useContext(AppContext);\n\n  useEffect(() => {\n    let openedDropdown = null;\n    routes.forEach((route, index) => {\n      if (location.pathname.indexOf(route.to) === 0) openedDropdown = index;\n    });\n\n    setOpenedIndex(openedDropdown);\n    // eslint-disable-next-line\n  }, []);\n\n  const toggleOpened = (e, index) => {\n    e.preventDefault();\n    return setOpenedIndex(openedIndex === index ? null : index);\n  };\n\n  const getHr = name => {\n    if (name === 'Widgets' || name === 'Documentation') {\n      return (\n        <div className=\"navbar-vertical-divider\">\n          <hr className=\"navbar-vertical-hr my-2\" />\n        </div>\n      );\n    }\n  };\n\n  return routes.map((route, index) => {\n    if (!route.children) {\n      return (\n        <Fragment key={index}>\n          {getHr(route.name)}\n          <NavItem>\n            <NavLink className=\"nav-link\" {...route} onClick={() => setShowBurgerMenu(false)}>\n              <NavbarVerticalMenuItem route={route} />\n            </NavLink>\n          </NavItem>\n        </Fragment>\n      );\n    }\n    return (\n      <Fragment key={index}>\n        {getHr(route.name)}\n        <NavItem>\n          <BootstrapNavLink\n            onClick={e => toggleOpened(e, index)}\n            className=\"dropdown-indicator cursor-pointer\"\n            aria-expanded={openedIndex === index}\n          >\n            <NavbarVerticalMenuItem route={route} />\n          </BootstrapNavLink>\n          <Collapse isOpen={openedIndex === index}>\n            <Nav>\n              <NavbarVerticalMenu routes={route.children} location={location} />\n            </Nav>\n          </Collapse>\n        </NavItem>\n      </Fragment>\n    );\n  });\n};\n\nNavbarVerticalMenu.propTypes = {\n  routes: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default withRouter(NavbarVerticalMenu);\n"]},"metadata":{},"sourceType":"module"}