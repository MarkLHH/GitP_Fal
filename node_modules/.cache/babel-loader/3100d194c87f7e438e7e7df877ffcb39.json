{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/event/EventCreateAside.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { Card, CardBody, CustomInput, FormGroup } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport EventCreateSelect from './EventCreateSelect';\nimport FormGroupSelect from '../common/FormGroupSelect';\nimport rawOrganizers from '../../data/event/organizers';\nimport rawSponsors from '../../data/event/sponsors';\nimport rawEventTypes from '../../data/event/eventTypes';\nimport rawEventTopics from '../../data/event/eventTopics';\nimport rawEventTags from '../../data/event/eventTags';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventCreateAside = () => {\n  _s();\n\n  // Get Data\n  const {\n    loading: loadingOrganizers,\n    data: organizers\n  } = useFakeFetch(rawOrganizers);\n  const {\n    loading: loadingSponsors,\n    data: sponsors\n  } = useFakeFetch(rawSponsors);\n  const {\n    loading: loadingEventTypes,\n    data: eventTypes\n  } = useFakeFetch(rawEventTypes);\n  const {\n    loading: loadingEventTopics,\n    data: eventTopics\n  } = useFakeFetch(rawEventTopics);\n  const {\n    loading: loadingEventTags,\n    data: eventTags\n  } = useFakeFetch(rawEventTags); // State\n\n  const [organizer, setOrganizer] = useState([]);\n  const [sponsor, setSponsor] = useState([]);\n  const [eventType, setEventType] = useState('');\n  const [eventTopic, setEventTopic] = useState('');\n  const [eventTag, setEventTag] = useState([]);\n  const [privacy, setPrivacy] = useState('public');\n  const [showTicket, setShowTicket] = useState(true);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3 mb-lg-0\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Other Info\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(EventCreateSelect, {\n        loading: loadingOrganizers,\n        label: \"Organizer\",\n        options: organizers,\n        placeholder: \"Select Organizer...\",\n        value: organizer,\n        onChange: value => setOrganizer(value),\n        closeMenuOnSelect: false,\n        isMulti: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventCreateSelect, {\n        loading: loadingSponsors,\n        label: \"Sponsors\",\n        options: sponsors,\n        placeholder: \"Select Sponsors...\",\n        value: sponsor,\n        onChange: value => setSponsor(value),\n        closeMenuOnSelect: false,\n        isMulti: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupSelect, {\n        loading: loadingEventTypes,\n        id: \"eventType\",\n        label: \"Event Type\",\n        options: eventTypes,\n        value: eventType,\n        onChange: ({\n          target\n        }) => setEventType(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupSelect, {\n        loading: loadingEventTopics,\n        id: \"eventTopics\",\n        label: \"Event Topics\",\n        options: eventTopics,\n        value: eventTopic,\n        onChange: ({\n          target\n        }) => setEventTopic(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventCreateSelect, {\n        loading: loadingEventTags,\n        label: \"Tags\",\n        options: eventTags,\n        value: eventTag,\n        onChange: value => setEventTag(value),\n        placeholder: \"Select Tags...\",\n        closeMenuOnSelect: false,\n        isMulti: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"border-dashed border-bottom-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Listing Privacy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        tag: CustomInput,\n        type: \"radio\",\n        id: \"exampleCustomRadio\",\n        name: \"customRadio\",\n        label: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Public page:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 18\n        }, this),\n        value: \"public\",\n        checked: privacy === 'public',\n        onChange: ({\n          target\n        }) => setPrivacy(target.value),\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text mt-0\",\n          children: \"Discoverable by anyone on Falcon, our distribution partners, and search engines.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        tag: CustomInput,\n        type: \"radio\",\n        id: \"exampleCustomRadio2\",\n        name: \"customRadio\",\n        label: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Private page:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 18\n        }, this),\n        value: \"private\",\n        checked: privacy === 'private',\n        onChange: ({\n          target\n        }) => setPrivacy(target.value),\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text mt-0\",\n          children: \"Accessible only by people you specify.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"border-dashed border-bottom-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Remaining Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"mb-0\",\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"checkbox\",\n          id: \"exampleCustomCheckbox\",\n          label: \"Show the number of remaining tickets\",\n          checked: showTicket,\n          onChange: ({\n            target\n          }) => setShowTicket(target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventCreateAside, \"zOzdJ1m4gfZyzUbcrN/maL8ZTe4=\", false, function () {\n  return [useFakeFetch, useFakeFetch, useFakeFetch, useFakeFetch, useFakeFetch];\n});\n\n_c = EventCreateAside;\nexport default EventCreateAside;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventCreateAside\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/event/EventCreateAside.js"],"names":["React","useState","useFakeFetch","Card","CardBody","CustomInput","FormGroup","FalconCardHeader","EventCreateSelect","FormGroupSelect","rawOrganizers","rawSponsors","rawEventTypes","rawEventTopics","rawEventTags","EventCreateAside","loading","loadingOrganizers","data","organizers","loadingSponsors","sponsors","loadingEventTypes","eventTypes","loadingEventTopics","eventTopics","loadingEventTags","eventTags","organizer","setOrganizer","sponsor","setSponsor","eventType","setEventType","eventTopic","setEventTopic","eventTag","setEventTag","privacy","setPrivacy","showTicket","setShowTicket","value","target","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { Card, CardBody, CustomInput, FormGroup } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport EventCreateSelect from './EventCreateSelect';\nimport FormGroupSelect from '../common/FormGroupSelect';\nimport rawOrganizers from '../../data/event/organizers';\nimport rawSponsors from '../../data/event/sponsors';\nimport rawEventTypes from '../../data/event/eventTypes';\nimport rawEventTopics from '../../data/event/eventTopics';\nimport rawEventTags from '../../data/event/eventTags';\n\nconst EventCreateAside = () => {\n  // Get Data\n  const { loading: loadingOrganizers, data: organizers } = useFakeFetch(rawOrganizers);\n  const { loading: loadingSponsors, data: sponsors } = useFakeFetch(rawSponsors);\n  const { loading: loadingEventTypes, data: eventTypes } = useFakeFetch(rawEventTypes);\n  const { loading: loadingEventTopics, data: eventTopics } = useFakeFetch(rawEventTopics);\n  const { loading: loadingEventTags, data: eventTags } = useFakeFetch(rawEventTags);\n\n  // State\n  const [organizer, setOrganizer] = useState([]);\n  const [sponsor, setSponsor] = useState([]);\n  const [eventType, setEventType] = useState('');\n  const [eventTopic, setEventTopic] = useState('');\n  const [eventTag, setEventTag] = useState([]);\n  const [privacy, setPrivacy] = useState('public');\n  const [showTicket, setShowTicket] = useState(true);\n\n  return (\n    <Card className=\"mb-3 mb-lg-0\">\n      <FalconCardHeader title=\"Other Info\" light={false} />\n      <CardBody className=\"bg-light\">\n        <EventCreateSelect\n          loading={loadingOrganizers}\n          label=\"Organizer\"\n          options={organizers}\n          placeholder=\"Select Organizer...\"\n          value={organizer}\n          onChange={value => setOrganizer(value)}\n          closeMenuOnSelect={false}\n          isMulti\n        />\n        <EventCreateSelect\n          loading={loadingSponsors}\n          label=\"Sponsors\"\n          options={sponsors}\n          placeholder=\"Select Sponsors...\"\n          value={sponsor}\n          onChange={value => setSponsor(value)}\n          closeMenuOnSelect={false}\n          isMulti\n        />\n        <FormGroupSelect\n          loading={loadingEventTypes}\n          id=\"eventType\"\n          label=\"Event Type\"\n          options={eventTypes}\n          value={eventType}\n          onChange={({ target }) => setEventType(target.value)}\n        />\n        <FormGroupSelect\n          loading={loadingEventTopics}\n          id=\"eventTopics\"\n          label=\"Event Topics\"\n          options={eventTopics}\n          value={eventTopic}\n          onChange={({ target }) => setEventTopic(target.value)}\n        />\n        <EventCreateSelect\n          loading={loadingEventTags}\n          label=\"Tags\"\n          options={eventTags}\n          value={eventTag}\n          onChange={value => setEventTag(value)}\n          placeholder=\"Select Tags...\"\n          closeMenuOnSelect={false}\n          isMulti\n        />\n\n        <hr className=\"border-dashed border-bottom-0\" />\n        <h6>Listing Privacy</h6>\n\n        <FormGroup\n          tag={CustomInput}\n          type=\"radio\"\n          id=\"exampleCustomRadio\"\n          name=\"customRadio\"\n          label={<strong>Public page:</strong>}\n          value=\"public\"\n          checked={privacy === 'public'}\n          onChange={({ target }) => setPrivacy(target.value)}\n        >\n          <small className=\"form-text mt-0\">\n            Discoverable by anyone on Falcon, our distribution partners, and search engines.\n          </small>\n        </FormGroup>\n\n        <FormGroup\n          tag={CustomInput}\n          type=\"radio\"\n          id=\"exampleCustomRadio2\"\n          name=\"customRadio\"\n          label={<strong>Private page:</strong>}\n          value=\"private\"\n          checked={privacy === 'private'}\n          onChange={({ target }) => setPrivacy(target.value)}\n        >\n          <small className=\"form-text mt-0\">Accessible only by people you specify.</small>\n        </FormGroup>\n\n        <hr className=\"border-dashed border-bottom-0\" />\n        <h6>Remaining Tickets</h6>\n        <FormGroup className=\"mb-0\">\n          <CustomInput\n            type=\"checkbox\"\n            id=\"exampleCustomCheckbox\"\n            label=\"Show the number of remaining tickets\"\n            checked={showTicket}\n            onChange={({ target }) => setShowTicket(target.checked)}\n          />\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default EventCreateAside;\n"]},"metadata":{},"sourceType":"module"}