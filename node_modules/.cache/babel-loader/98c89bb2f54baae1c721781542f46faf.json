{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/bootstrap-components/Buttons.js\";\nimport React, { Fragment } from 'react';\nimport { Button, Card, CardHeader, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport FalconEditor from '../common/FalconEditor';\nimport ButtonIcon from '../common/ButtonIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonFalconCode = `['primary', 'success', 'info','danger', 'warning'].map((color, index) => (\n  <Button color={'falcon-'+color} key={index} className=\"mr-2\" >\n    {color}\n  </Button>\n))`;\nconst buttonCode = `['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => (\n  <Button color={color} size=\"sm\" key={index} className=\"mr-2\">\n    {color}\n  </Button>\n))`;\nconst buttonOutlineCode = `['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => (\n  <Button outline color={color} key={index} className=\"mr-2\">\n    {color}\n  </Button>\n))`;\nconst buttonSizeCode = `<Fragment>\n  <Button color=\"secondary\" size=\"sm\" className=\"mr-2\">Small</Button>\n  <Button color=\"secondary\" className=\"mr-2\">Regular</Button>\n  <Button color=\"secondary\" size=\"lg\" className=\"mr-2\">Large</Button>\n</Fragment>`;\nconst IconButtonCode = `<Fragment>\n  <ButtonIcon className=\"mr-2\" color=\"falcon-default\" size=\"sm\" icon=\"plus\" transform=\"shrink-3\">\n    Small\n  </ButtonIcon>\n  <ButtonIcon className=\"mr-2\" color=\"falcon-default\" icon=\"plus\" transform=\"shrink-3\">\n    Regular\n  </ButtonIcon>\n  <ButtonIcon color=\"falcon-default\" size=\"lg\" icon=\"plus\" transform=\"shrink-3\">\n    Large\n  </ButtonIcon>\n  <hr />\n  <ButtonIcon color=\"primary\" className=\"mr-2\"  icon=\"plus\" transform=\"shrink-3\">\n    Regular\n  </ButtonIcon>\n  <ButtonIcon outline color=\"primary\"  icon=\"plus\" transform=\"shrink-3\">\n    Outline\n  </ButtonIcon>\n  <hr />\n  <ButtonIcon color=\"primary\"  icon=\"trash\" iconAlign=\"right\" transform=\"shrink-3\">\n    Delete\n  </ButtonIcon>\n</Fragment>`;\nconst capsuleButtonCode = `<Fragment>\n  <Button className=\"mr-2\" color=\"falcon-default\" className=\"rounded-capsule mr-1\">\n    Example\n  </Button>\n  <ButtonIcon className=\"rounded-capsule mr-1\" color=\"falcon-default\" icon=\"align-left\" transform=\"shrink-3\">\n    Icon Left\n  </ButtonIcon>\n  <ButtonIcon className=\"rounded-capsule mr-1\" color=\"falcon-default\" icon=\"align-right\" iconAlign=\"right\" transform=\"shrink-3\">\n    Icon Right\n  </ButtonIcon>\n  <Button outline color=\"primary\" className=\"rounded-capsule mr-1\">\n    Outline\n  </Button>\n  <hr />\n  <Button color=\"falcon-default\" className=\"rounded-capsule mr-2\" size=\"sm\" >\n    Capsule Small\n  </Button>\n  <Button color=\"falcon-default\" className=\"rounded-capsule mr-2\" >\n    Capsule Regular\n  </Button>\n  <Button color=\"falcon-default\" className=\"rounded-capsule mr-2\" size=\"lg\" >\n    Capsule large\n  </Button>\n</Fragment>`;\nconst basicExampleCode = `<Fragment>\n  <ButtonGroup>\n    <Button>Left</Button>\n    <Button>Middle</Button>\n    <Button>Right</Button>\n  </ButtonGroup>\n</Fragment>`;\nconst buttonToolbarCode = `<Fragment>\n  <ButtonGroup aria-label=\"First group\" className=\"mr-2\">\n    <Button>1</Button>\n    <Button>2</Button>\n    <Button>3</Button>\n    <Button>4</Button>\n  </ButtonGroup>\n  <ButtonGroup aria-label=\"Second group\" className=\"mr-2\">\n    <Button>5</Button>\n    <Button>6</Button>\n    <Button>7</Button>\n  </ButtonGroup>\n  <ButtonGroup aria-label=\"Third group\">\n    <Button>8</Button>\n  </ButtonGroup>\n</Fragment>`;\nconst buttonToolbarWithInputCode = `<Fragment>\n  <ButtonToolbar>\n    <ButtonGroup>\n      <Button>1</Button>\n      <Button>2</Button>\n      <Button>3</Button>\n      <Button className=\"mr-3\">4</Button>\n    </ButtonGroup>\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n      <Input />\n    </InputGroup>\n   </ButtonToolbar>\n  <ButtonToolbar className=\"justify-content-between mt-3\">\n    <ButtonGroup>\n      <Button>1</Button>\n      <Button>2</Button>\n      <Button>3</Button>\n      <Button className=\"mr-3\">4</Button>\n    </ButtonGroup>\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n      <Input />\n    </InputGroup>\n  </ButtonToolbar>\n</Fragment>`;\nconst sizingCode = `<Fragment>\n  <ButtonGroup size=\"lg\" className=\"mr-2\">\n    <Button>Left</Button>\n    <Button>Middle</Button>\n    <Button>Right</Button>\n  </ButtonGroup>\n  <ButtonGroup className=\"mr-2\">\n    <Button>Left</Button>\n    <Button>Middle</Button>\n    <Button>Right</Button>\n  </ButtonGroup>\n  <ButtonGroup size=\"sm\">\n    <Button>Left</Button>\n    <Button>Middle</Button>\n    <Button>Right</Button>\n  </ButtonGroup>\n</Fragment>\n`;\nconst buttonGroupVerticalCode = `<ButtonGroup vertical>\n  <Button>Button</Button>\n  <Button>Button</Button>\n  <Button>Button</Button>\n</ButtonGroup>`;\nconst buttonGroupVerticalVariationCode = `function buttonGroupVerticalVariationCode() {\n  const [isOpen, setIsOpen] = useState(false);\n  \n  return (\n    <ButtonGroup vertical>\n      <Button>Button</Button>\n      <Button>Button</Button>\n      <ButtonDropdown isOpen={isOpen} toggle={() => setIsOpen(!isOpen)}>\n        <DropdownToggle caret>Dropdown</DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem header>Dropdown link</DropdownItem>\n          <DropdownItem>Dropdown link</DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    </ButtonGroup>\n  );\n};`;\nconst selectRadioButtonCode = `function SelectButton() {\n  const [isSelected, setIsSelected] = useState(\"\");\n  \n  return (\n    <Fragment>\n      <ButtonGroup>\n        <Button color=\"primary\" active={isSelected === 1} onClick={() => setIsSelected(1)}>\n          One\n        </Button>\n        <Button color=\"primary\" active={isSelected === 2} onClick={() => setIsSelected(2)}>\n          Two\n        </Button>\n        <Button color=\"primary\" active={isSelected === 3} onClick={() => setIsSelected(3)}>\n          Three\n        </Button>\n      </ButtonGroup>\n      <p className=\"mt-1\">Selected : {isSelected} </p>\n    </Fragment>\n  );\n};\n`;\nconst multiSelectCheckboxExample = `function multiSelectCheckboxExample() {\n  const [checked, setChecked] = useState([1]);\n  \n  const handleChecked = id => {\n    checked.includes(id)\n      ? setChecked([...checked.filter(i => i !== id)])\n      : setChecked([...checked, id]);\n  };\n  \n  return (\n    <Fragment>\n      <ButtonGroup>\n        <Button\n          color=\"primary\"\n          onClick={() => handleChecked(1)}\n          active={checked.includes(1)}\n        >\n          One\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => handleChecked(2)}\n          active={checked.includes(2)}\n        >\n          Two\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => handleChecked(3)}\n          active={checked.includes(3)}\n        >\n          Three\n        </Button>\n      </ButtonGroup>\n      <p>Selected: {JSON.stringify(checked)}</p>\n    </Fragment>\n  );\n};`;\nconst disabledButtonCode = `<Fragment>\n  <Button color=\"primary\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Primary</Button>\n  <Button color=\"secondary\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Secondary</Button>\n  <Button color=\"warning\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Warning</Button>\n  <Button color=\"danger\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Danger</Button>\n  <Button color=\"success\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Success</Button>\n  <Button color=\"light\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Light</Button>\n  <Button color=\"dark\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Dark</Button>\n  <Button color=\"info\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Info</Button>\n</Fragment>`;\nconst blockLevelButtonCode = `<Fragment>\n  <Button color=\"primary\" size=\"lg\" block>\n    Block level button\n  </Button>\n  <Button color=\"secondary\" size=\"lg\" block>\n    Block level button\n  </Button>\n</Fragment>`;\nconst buttonFalconPropertiesCode = `Button.propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string, // default: 'secondary'\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n\n  // Pass in a Component to override default button element\n  // example: react-router Link\n  // default: 'button'\n  tag: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    ]))\n  ]),\n\n  // ref will only get you a reference to the Button component, use innerRef to get a reference to the DOM element (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n\n  // use close prop for BS4 close icon utility\n  close: PropTypes.bool,\n}`;\nconst buttonFalconDefaultPropertiesCode = `Button.defaultProps = {\n  color: 'secondary',\n  tag: 'button',\n}\n`;\nconst buttonIconPropertiesCode = `ButtonIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  iconAlign: PropTypes.oneOf(['left', 'right']), // default: 'left'\n  iconClassName: PropTypes.string,\n  transform: PropTypes.string\n};`;\n\nconst Buttons = () => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n    title: \"Buttons\",\n    description: \"Use Falcon\\u2019s custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\",\n    className: \"mb-3\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      tag: \"a\",\n      href: \"https://reactstrap.github.io/components/buttons\",\n      target: \"_blank\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"pl-0\",\n      children: [\"Buttons on reactstrap\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"chevron-right\",\n        className: \"ml-1 fs--2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Falcon Buttons\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonFalconCode,\n        language: \"jsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Properties\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonFalconPropertiesCode,\n        hidePreview: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonFalconDefaultPropertiesCode,\n        hidePreview: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Examples\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonCode,\n        language: \"jsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Outline buttons\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonOutlineCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Button sizes\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonSizeCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Icon Buttons\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: IconButtonCode,\n        scope: {\n          FontAwesomeIcon,\n          ButtonIcon\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Button Icon Properties\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonIconPropertiesCode,\n        scope: {\n          ButtonIcon\n        },\n        hidePreview: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Block level Button\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: blockLevelButtonCode,\n        language: \"jsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Disabled Button\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: disabledButtonCode,\n        language: \"jsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Button Capsule\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: capsuleButtonCode,\n        scope: {\n          FontAwesomeIcon,\n          ButtonIcon\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n    title: \"Button Group\",\n    description: \"Group a series of buttons together on a single line with the button group, and super-power them with JavaScript.\",\n    className: \"mb-3\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      tag: \"a\",\n      href: \"https://reactstrap.github.io/components/button-group\",\n      target: \"_blank\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"pl-0\",\n      children: [\"Buttons on reactstrap\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"chevron-right\",\n        className: \"ml-1 fs--2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Basic Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: [\"Wrap a series of buttons with\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 40\n        }, this), \" in\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".btn-group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 60\n        }, this), \". Add on optional JavaScript radio and checkbox style behavior with\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: basicExampleCode,\n        scope: {\n          ButtonIcon\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Button Toolbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: \"Combine sets of button groups into button toolbars for more complex components. Use utility classes as needed to space out groups, buttons, and more.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonToolbarCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Button toolbar with input group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: \"Feel free to mix input groups with button groups in your toolbars. Similar to the example above, you'll likely need some utilities though to space things properly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonToolbarWithInputCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Sizing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: \"Insteam of aplying button sizing classes to every button in a group, just add .btn-gorup-* to each .btn-group, including each one when nesting multiple groups.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: sizingCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 439,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Vertical variation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: \"Make a set of buttons appear vertically tacked rather than horizontally. Split button dropdowns ae not supported here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonGroupVerticalCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Vertical variation with dropdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: buttonGroupVerticalVariationCode,\n        language: \"jsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Radio Buttons (Stateful Buttons)\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: selectRadioButtonCode,\n        language: \"jsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \" Checkbox (Stateful Buttons)\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(FalconEditor, {\n        code: multiSelectCheckboxExample,\n        language: \"jsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 307,\n  columnNumber: 3\n}, this);\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/bootstrap-components/Buttons.js"],"names":["React","Fragment","Button","Card","CardHeader","CardBody","FontAwesomeIcon","PageHeader","FalconCardHeader","FalconEditor","ButtonIcon","buttonFalconCode","buttonCode","buttonOutlineCode","buttonSizeCode","IconButtonCode","capsuleButtonCode","basicExampleCode","buttonToolbarCode","buttonToolbarWithInputCode","sizingCode","buttonGroupVerticalCode","buttonGroupVerticalVariationCode","selectRadioButtonCode","multiSelectCheckboxExample","disabledButtonCode","blockLevelButtonCode","buttonFalconPropertiesCode","buttonFalconDefaultPropertiesCode","buttonIconPropertiesCode","Buttons"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAmD,YAAnD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,gBAAgB,GAAI;AAC1B;AACA;AACA;AACA,GAJA;AAMA,MAAMC,UAAU,GAAI;AACpB;AACA;AACA;AACA,GAJA;AAMA,MAAMC,iBAAiB,GAAI;AAC3B;AACA;AACA;AACA,GAJA;AAMA,MAAMC,cAAc,GAAI;AACxB;AACA;AACA;AACA,YAJA;AAMA,MAAMC,cAAc,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YArBA;AAuBA,MAAMC,iBAAiB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAvBA;AAyBA,MAAMC,gBAAgB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,YANA;AAQA,MAAMC,iBAAiB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAfA;AAiBA,MAAMC,0BAA0B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAzBA;AA2BA,MAAMC,UAAU,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,MAAMC,uBAAuB,GAAI;AACjC;AACA;AACA;AACA,eAJA;AAMA,MAAMC,gCAAgC,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAhBA;AAkBA,MAAMC,qBAAqB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;AAsBA,MAAMC,0BAA0B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GArCA;AAuCA,MAAMC,kBAAkB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YATA;AAWA,MAAMC,oBAAoB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,YAPA;AASA,MAAMC,0BAA0B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAjCA;AAmCA,MAAMC,iCAAiC,GAAI;AAC3C;AACA;AACA;AACA,CAJA;AAMA,MAAMC,wBAAwB,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,GANA;;AAQA,MAAMC,OAAO,GAAG,mBACd,QAAC,QAAD;AAAA,0BACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAC,mIAFd;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA,2BAKE,QAAC,MAAD;AACE,MAAA,GAAG,EAAC,GADN;AAEE,MAAA,IAAI,EAAC,iDAFP;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,KAAK,EAAC,MAJR;AAKE,MAAA,IAAI,EAAC,IALP;AAME,MA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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Button, Card, CardHeader, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport FalconEditor from '../common/FalconEditor';\nimport ButtonIcon from '../common/ButtonIcon';\n\nconst buttonFalconCode = `['primary', 'success', 'info','danger', 'warning'].map((color, index) => (\n  <Button color={'falcon-'+color} key={index} className=\"mr-2\" >\n    {color}\n  </Button>\n))`;\n\nconst buttonCode = `['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => (\n  <Button color={color} size=\"sm\" key={index} className=\"mr-2\">\n    {color}\n  </Button>\n))`;\n\nconst buttonOutlineCode = `['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => (\n  <Button outline color={color} key={index} className=\"mr-2\">\n    {color}\n  </Button>\n))`;\n\nconst buttonSizeCode = `<Fragment>\n  <Button color=\"secondary\" size=\"sm\" className=\"mr-2\">Small</Button>\n  <Button color=\"secondary\" className=\"mr-2\">Regular</Button>\n  <Button color=\"secondary\" size=\"lg\" className=\"mr-2\">Large</Button>\n</Fragment>`;\n\nconst IconButtonCode = `<Fragment>\n  <ButtonIcon className=\"mr-2\" color=\"falcon-default\" size=\"sm\" icon=\"plus\" transform=\"shrink-3\">\n    Small\n  </ButtonIcon>\n  <ButtonIcon className=\"mr-2\" color=\"falcon-default\" icon=\"plus\" transform=\"shrink-3\">\n    Regular\n  </ButtonIcon>\n  <ButtonIcon color=\"falcon-default\" size=\"lg\" icon=\"plus\" transform=\"shrink-3\">\n    Large\n  </ButtonIcon>\n  <hr />\n  <ButtonIcon color=\"primary\" className=\"mr-2\"  icon=\"plus\" transform=\"shrink-3\">\n    Regular\n  </ButtonIcon>\n  <ButtonIcon outline color=\"primary\"  icon=\"plus\" transform=\"shrink-3\">\n    Outline\n  </ButtonIcon>\n  <hr />\n  <ButtonIcon color=\"primary\"  icon=\"trash\" iconAlign=\"right\" transform=\"shrink-3\">\n    Delete\n  </ButtonIcon>\n</Fragment>`;\n\nconst capsuleButtonCode = `<Fragment>\n  <Button className=\"mr-2\" color=\"falcon-default\" className=\"rounded-capsule mr-1\">\n    Example\n  </Button>\n  <ButtonIcon className=\"rounded-capsule mr-1\" color=\"falcon-default\" icon=\"align-left\" transform=\"shrink-3\">\n    Icon Left\n  </ButtonIcon>\n  <ButtonIcon className=\"rounded-capsule mr-1\" color=\"falcon-default\" icon=\"align-right\" iconAlign=\"right\" transform=\"shrink-3\">\n    Icon Right\n  </ButtonIcon>\n  <Button outline color=\"primary\" className=\"rounded-capsule mr-1\">\n    Outline\n  </Button>\n  <hr />\n  <Button color=\"falcon-default\" className=\"rounded-capsule mr-2\" size=\"sm\" >\n    Capsule Small\n  </Button>\n  <Button color=\"falcon-default\" className=\"rounded-capsule mr-2\" >\n    Capsule Regular\n  </Button>\n  <Button color=\"falcon-default\" className=\"rounded-capsule mr-2\" size=\"lg\" >\n    Capsule large\n  </Button>\n</Fragment>`;\n\nconst basicExampleCode = `<Fragment>\n  <ButtonGroup>\n    <Button>Left</Button>\n    <Button>Middle</Button>\n    <Button>Right</Button>\n  </ButtonGroup>\n</Fragment>`;\n\nconst buttonToolbarCode = `<Fragment>\n  <ButtonGroup aria-label=\"First group\" className=\"mr-2\">\n    <Button>1</Button>\n    <Button>2</Button>\n    <Button>3</Button>\n    <Button>4</Button>\n  </ButtonGroup>\n  <ButtonGroup aria-label=\"Second group\" className=\"mr-2\">\n    <Button>5</Button>\n    <Button>6</Button>\n    <Button>7</Button>\n  </ButtonGroup>\n  <ButtonGroup aria-label=\"Third group\">\n    <Button>8</Button>\n  </ButtonGroup>\n</Fragment>`;\n\nconst buttonToolbarWithInputCode = `<Fragment>\n  <ButtonToolbar>\n    <ButtonGroup>\n      <Button>1</Button>\n      <Button>2</Button>\n      <Button>3</Button>\n      <Button className=\"mr-3\">4</Button>\n    </ButtonGroup>\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n      <Input />\n    </InputGroup>\n   </ButtonToolbar>\n  <ButtonToolbar className=\"justify-content-between mt-3\">\n    <ButtonGroup>\n      <Button>1</Button>\n      <Button>2</Button>\n      <Button>3</Button>\n      <Button className=\"mr-3\">4</Button>\n    </ButtonGroup>\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n      <Input />\n    </InputGroup>\n  </ButtonToolbar>\n</Fragment>`;\n\nconst sizingCode = `<Fragment>\n  <ButtonGroup size=\"lg\" className=\"mr-2\">\n    <Button>Left</Button>\n    <Button>Middle</Button>\n    <Button>Right</Button>\n  </ButtonGroup>\n  <ButtonGroup className=\"mr-2\">\n    <Button>Left</Button>\n    <Button>Middle</Button>\n    <Button>Right</Button>\n  </ButtonGroup>\n  <ButtonGroup size=\"sm\">\n    <Button>Left</Button>\n    <Button>Middle</Button>\n    <Button>Right</Button>\n  </ButtonGroup>\n</Fragment>\n`;\n\nconst buttonGroupVerticalCode = `<ButtonGroup vertical>\n  <Button>Button</Button>\n  <Button>Button</Button>\n  <Button>Button</Button>\n</ButtonGroup>`;\n\nconst buttonGroupVerticalVariationCode = `function buttonGroupVerticalVariationCode() {\n  const [isOpen, setIsOpen] = useState(false);\n  \n  return (\n    <ButtonGroup vertical>\n      <Button>Button</Button>\n      <Button>Button</Button>\n      <ButtonDropdown isOpen={isOpen} toggle={() => setIsOpen(!isOpen)}>\n        <DropdownToggle caret>Dropdown</DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem header>Dropdown link</DropdownItem>\n          <DropdownItem>Dropdown link</DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    </ButtonGroup>\n  );\n};`;\n\nconst selectRadioButtonCode = `function SelectButton() {\n  const [isSelected, setIsSelected] = useState(\"\");\n  \n  return (\n    <Fragment>\n      <ButtonGroup>\n        <Button color=\"primary\" active={isSelected === 1} onClick={() => setIsSelected(1)}>\n          One\n        </Button>\n        <Button color=\"primary\" active={isSelected === 2} onClick={() => setIsSelected(2)}>\n          Two\n        </Button>\n        <Button color=\"primary\" active={isSelected === 3} onClick={() => setIsSelected(3)}>\n          Three\n        </Button>\n      </ButtonGroup>\n      <p className=\"mt-1\">Selected : {isSelected} </p>\n    </Fragment>\n  );\n};\n`;\n\nconst multiSelectCheckboxExample = `function multiSelectCheckboxExample() {\n  const [checked, setChecked] = useState([1]);\n  \n  const handleChecked = id => {\n    checked.includes(id)\n      ? setChecked([...checked.filter(i => i !== id)])\n      : setChecked([...checked, id]);\n  };\n  \n  return (\n    <Fragment>\n      <ButtonGroup>\n        <Button\n          color=\"primary\"\n          onClick={() => handleChecked(1)}\n          active={checked.includes(1)}\n        >\n          One\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => handleChecked(2)}\n          active={checked.includes(2)}\n        >\n          Two\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => handleChecked(3)}\n          active={checked.includes(3)}\n        >\n          Three\n        </Button>\n      </ButtonGroup>\n      <p>Selected: {JSON.stringify(checked)}</p>\n    </Fragment>\n  );\n};`;\n\nconst disabledButtonCode = `<Fragment>\n  <Button color=\"primary\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Primary</Button>\n  <Button color=\"secondary\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Secondary</Button>\n  <Button color=\"warning\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Warning</Button>\n  <Button color=\"danger\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Danger</Button>\n  <Button color=\"success\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Success</Button>\n  <Button color=\"light\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Light</Button>\n  <Button color=\"dark\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Dark</Button>\n  <Button color=\"info\" size=\"lg\" className=\"mr-2 mb-2\" disabled>Info</Button>\n</Fragment>`;\n\nconst blockLevelButtonCode = `<Fragment>\n  <Button color=\"primary\" size=\"lg\" block>\n    Block level button\n  </Button>\n  <Button color=\"secondary\" size=\"lg\" block>\n    Block level button\n  </Button>\n</Fragment>`;\n\nconst buttonFalconPropertiesCode = `Button.propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string, // default: 'secondary'\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n\n  // Pass in a Component to override default button element\n  // example: react-router Link\n  // default: 'button'\n  tag: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    ]))\n  ]),\n\n  // ref will only get you a reference to the Button component, use innerRef to get a reference to the DOM element (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n\n  // use close prop for BS4 close icon utility\n  close: PropTypes.bool,\n}`;\n\nconst buttonFalconDefaultPropertiesCode = `Button.defaultProps = {\n  color: 'secondary',\n  tag: 'button',\n}\n`;\n\nconst buttonIconPropertiesCode = `ButtonIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  iconAlign: PropTypes.oneOf(['left', 'right']), // default: 'left'\n  iconClassName: PropTypes.string,\n  transform: PropTypes.string\n};`;\n\nconst Buttons = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Buttons\"\n      description=\"Use Falcon’s custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\"\n      className=\"mb-3\"\n    >\n      <Button\n        tag=\"a\"\n        href=\"https://reactstrap.github.io/components/buttons\"\n        target=\"_blank\"\n        color=\"link\"\n        size=\"sm\"\n        className=\"pl-0\"\n      >\n        Buttons on reactstrap\n        <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n      </Button>\n    </PageHeader>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Falcon Buttons\" light={false} />\n      <CardBody>\n        <FalconEditor code={buttonFalconCode} language=\"jsx\" />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Properties\" light={false} />\n      <CardBody>\n        <FalconEditor code={buttonFalconPropertiesCode} hidePreview />\n        <FalconEditor code={buttonFalconDefaultPropertiesCode} hidePreview />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Examples\" light={false} />\n      <CardBody>\n        <FalconEditor code={buttonCode} language=\"jsx\" />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Outline buttons\" light={false} />\n      <CardBody>\n        <FalconEditor code={buttonOutlineCode} />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Button sizes\" light={false} />\n      <CardBody>\n        <FalconEditor code={buttonSizeCode} />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Icon Buttons\" light={false} />\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={IconButtonCode} scope={{ FontAwesomeIcon, ButtonIcon }} />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Button Icon Properties\" light={false} />\n      <CardBody>\n        <FalconEditor code={buttonIconPropertiesCode} scope={{ ButtonIcon }} hidePreview />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Block level Button\" light={false} />\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={blockLevelButtonCode} language=\"jsx\" />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Disabled Button\" light={false} />\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={disabledButtonCode} language=\"jsx\" />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Button Capsule\" light={false} />\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={capsuleButtonCode} scope={{ FontAwesomeIcon, ButtonIcon }} />\n      </CardBody>\n    </Card>\n    <PageHeader\n      title=\"Button Group\"\n      description=\"Group a series of buttons together on a single line with the button group, and super-power them with JavaScript.\"\n      className=\"mb-3\"\n    >\n      <Button\n        tag=\"a\"\n        href=\"https://reactstrap.github.io/components/button-group\"\n        target=\"_blank\"\n        color=\"link\"\n        size=\"sm\"\n        className=\"pl-0\"\n      >\n        Buttons on reactstrap\n        <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n      </Button>\n    </PageHeader>\n    <Card className=\"mb-3\">\n      <CardHeader>\n        <h5>Basic Example</h5>\n        <p className=\"mb-0\">\n          Wrap a series of buttons with<code>.btn</code> in<code>.btn-group</code>. Add on optional JavaScript radio and\n          checkbox style behavior with\n        </p>\n      </CardHeader>\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={basicExampleCode} scope={{ ButtonIcon }} />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <CardHeader>\n        <h5>Button Toolbar</h5>\n        <p className=\"mb-0\">\n          Combine sets of button groups into button toolbars for more complex components. Use utility classes as needed\n          to space out groups, buttons, and more.\n        </p>\n      </CardHeader>\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={buttonToolbarCode} />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <CardHeader>\n        <h5>Button toolbar with input group</h5>\n        <p className=\"mb-0\">\n          Feel free to mix input groups with button groups in your toolbars. Similar to the example above, you'll likely\n          need some utilities though to space things properly.\n        </p>\n      </CardHeader>\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={buttonToolbarWithInputCode} />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <CardHeader>\n        <h5>Sizing</h5>\n        <p className=\"mb-0\">\n          Insteam of aplying button sizing classes to every button in a group, just add .btn-gorup-* to each .btn-group,\n          including each one when nesting multiple groups.\n        </p>\n      </CardHeader>\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={sizingCode} />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <CardHeader>\n        <h5>Vertical variation</h5>\n        <p className=\"mb-0\">\n          Make a set of buttons appear vertically tacked rather than horizontally. Split button dropdowns ae not\n          supported here.\n        </p>\n      </CardHeader>\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={buttonGroupVerticalCode} />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <CardHeader>\n        <h5>Vertical variation with dropdown</h5>\n      </CardHeader>\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={buttonGroupVerticalVariationCode} language=\"jsx\" />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Radio Buttons (Stateful Buttons)\" light={false} />\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={selectRadioButtonCode} language=\"jsx\" />\n      </CardBody>\n    </Card>\n    <Card>\n      <FalconCardHeader title=\" Checkbox (Stateful Buttons)\" light={false} />\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={multiSelectCheckboxExample} language=\"jsx\" />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default Buttons;\n"]},"metadata":{},"sourceType":"module"}