{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Redirect}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";var withRedirect=function withRedirect(OriginalComponent){var UpdatedComponent=function UpdatedComponent(props){// State\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),redirect=_useState2[0],setRedirect=_useState2[1];var _useState3=useState('/'),_useState4=_slicedToArray(_useState3,2),redirectUrl=_useState4[0],setRedirectUrl=_useState4[1];if(redirect){return/*#__PURE__*/_jsx(Redirect,{to:redirectUrl});}return/*#__PURE__*/_jsx(OriginalComponent,_objectSpread({setRedirect:setRedirect,setRedirectUrl:setRedirectUrl},props));};return UpdatedComponent;};export default withRedirect;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/hoc/withRedirect.js"],"names":["React","useState","Redirect","withRedirect","OriginalComponent","UpdatedComponent","props","redirect","setRedirect","redirectUrl","setRedirectUrl"],"mappings":"2MAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,KAAyB,kBAAzB,C,2CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,iBAAiB,CAAI,CACxC,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,KAAK,CAAI,CAChC;AADgC,cAEAL,QAAQ,CAAC,KAAD,CAFR,wCAEzBM,QAFyB,eAEfC,WAFe,8BAGMP,QAAQ,CAAC,GAAD,CAHd,yCAGzBQ,WAHyB,eAGZC,cAHY,eAKhC,GAAIH,QAAJ,CAAc,CACZ,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAEE,WAAd,EAAP,CACD,CAED,mBAAO,KAAC,iBAAD,gBAAmB,WAAW,CAAED,WAAhC,CAA6C,cAAc,CAAEE,cAA7D,EAAiFJ,KAAjF,EAAP,CACD,CAVD,CAYA,MAAOD,CAAAA,gBAAP,CACD,CAdD,CAgBA,cAAeF,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst withRedirect = OriginalComponent => {\n  const UpdatedComponent = props => {\n    // State\n    const [redirect, setRedirect] = useState(false);\n    const [redirectUrl, setRedirectUrl] = useState('/');\n\n    if (redirect) {\n      return <Redirect to={redirectUrl} />;\n    }\n\n    return <OriginalComponent setRedirect={setRedirect} setRedirectUrl={setRedirectUrl} {...props} />;\n  };\n\n  return UpdatedComponent;\n};\n\nexport default withRedirect;\n"]},"metadata":{},"sourceType":"module"}