{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{Fragment}from'react';import Dropzone from'react-dropzone';import uuid from'uuid/v1';import classNames from'classnames';import{isIterableArray}from'../../helpers/utils';import{DropdownItem,DropdownMenu,DropdownToggle,Media,UncontrolledDropdown}from'reactstrap';import Flex from'./Flex';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import cloudUpload from\"../../assets/img/icons/cloud-upload.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getSize=function getSize(size){if(size<1024){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:size}),\" Byte\"]});}else if(size<1024*1024){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:(size/1024).toFixed(2)}),\" KB\"]});}else{return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:(size/(1024*1024)).toFixed(2)}),\" MB\"]});}};var FalconDropzone=function FalconDropzone(_ref){var placeholder=_ref.placeholder,className=_ref.className,onChange=_ref.onChange,files=_ref.files,preview=_ref.preview,rest=_objectWithoutProperties(_ref,[\"placeholder\",\"className\",\"onChange\",\"files\",\"preview\"]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Dropzone,{onDrop:function onDrop(acceptedFiles){var stringFiles=[];if(!!acceptedFiles.length){acceptedFiles.map(function(file){var reader=new FileReader();reader.readAsDataURL(file);reader.onload=function(){stringFiles.push({id:uuid(),base64:reader.result,size:file.size,path:file.path,type:file.type});onChange([].concat(stringFiles));};return true;});}},children:function children(_ref2){var getRootProps=_ref2.getRootProps,getInputProps=_ref2.getInputProps;return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},getRootProps({className:classNames('p-3 border-dashed border-2x border-300 bg-light rounded-soft text-center cursor-pointer',className)})),{},{children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({},_objectSpread(_objectSpread({},getInputProps()),rest))),placeholder]}));}}),preview&&isIterableArray(files)&&/*#__PURE__*/_jsx(\"div\",{className:\"border-top mt-3\",children:files.map(function(_ref3){var id=_ref3.id,path=_ref3.path,base64=_ref3.base64,size=_ref3.size;return/*#__PURE__*/_jsxs(Media,{className:\"align-items-center py-3 border-bottom btn-reveal-trigger\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"img-fluid\",width:38,src:base64,alt:path}),/*#__PURE__*/_jsxs(Media,{body:true,tag:Flex,justify:\"between\",align:\"center\",className:\"ml-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{\"data-dz-name\":\"\",children:path}),/*#__PURE__*/_jsx(Flex,{className:\"position-relative\",align:\"center\",children:/*#__PURE__*/_jsx(\"p\",{className:\"mb-0 fs--1 text-400 line-height-1\",children:getSize(size)})})]}),/*#__PURE__*/_jsxs(UncontrolledDropdown,{className:\"text-sans-serif\",children:[/*#__PURE__*/_jsx(DropdownToggle,{color:\"link\",size:\"sm\",className:\"text-600 btn-reveal\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"ellipsis-h\"})}),/*#__PURE__*/_jsx(DropdownMenu,{className:\"border py-0\",right:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white py-2\",children:/*#__PURE__*/_jsx(DropdownItem,{className:\"text-danger\",onClick:function onClick(){return onChange(files.filter(function(file){return file.id!==id;}));},children:\"Remove File\"})})})]})]})]},id);})})]});};FalconDropzone.defaultProps={placeholder:/*#__PURE__*/_jsx(\"img\",{src:cloudUpload,alt:\"\",width:25,className:\"mr-2\"}),files:[],preview:false};export default FalconDropzone;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/FalconDropzone.js"],"names":["React","Fragment","Dropzone","uuid","classNames","isIterableArray","DropdownItem","DropdownMenu","DropdownToggle","Media","UncontrolledDropdown","Flex","FontAwesomeIcon","getSize","size","toFixed","FalconDropzone","placeholder","className","onChange","files","preview","rest","acceptedFiles","stringFiles","length","map","file","reader","FileReader","readAsDataURL","onload","push","id","base64","result","path","type","getRootProps","getInputProps","filter","defaultProps","cloudUpload"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport uuid from 'uuid/v1';\nimport classNames from 'classnames';\nimport { isIterableArray } from '../../helpers/utils';\nimport { DropdownItem, DropdownMenu, DropdownToggle, Media, UncontrolledDropdown } from 'reactstrap';\nimport Flex from './Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport cloudUpload from '../../assets/img/icons/cloud-upload.svg';\n\nconst getSize = size => {\n  if (size < 1024) {\n    return (\n      <Fragment>\n        <strong>{size}</strong> Byte\n      </Fragment>\n    );\n  } else if (size < 1024 * 1024) {\n    return (\n      <Fragment>\n        <strong>{(size / 1024).toFixed(2)}</strong> KB\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <strong>{(size / (1024 * 1024)).toFixed(2)}</strong> MB\n      </Fragment>\n    );\n  }\n};\n\nconst FalconDropzone = ({ placeholder, className, onChange, files, preview, ...rest }) => (\n  <Fragment>\n    <Dropzone\n      onDrop={acceptedFiles => {\n        const stringFiles = [];\n        if (!!acceptedFiles.length) {\n          acceptedFiles.map(file => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n              stringFiles.push({\n                id: uuid(),\n                base64: reader.result,\n                size: file.size,\n                path: file.path,\n                type: file.type\n              });\n              onChange([...stringFiles]);\n            };\n            return true;\n          });\n        }\n      }}\n    >\n      {({ getRootProps, getInputProps }) => (\n        <div\n          {...getRootProps({\n            className: classNames(\n              'p-3 border-dashed border-2x border-300 bg-light rounded-soft text-center cursor-pointer',\n              className\n            )\n          })}\n        >\n          <input {...{ ...getInputProps(), ...rest }} />\n          {placeholder}\n        </div>\n      )}\n    </Dropzone>\n    {preview && isIterableArray(files) && (\n      <div className=\"border-top mt-3\">\n        {files.map(({ id, path, base64, size }) => (\n          <Media className=\"align-items-center py-3 border-bottom btn-reveal-trigger\" key={id}>\n            <img className=\"img-fluid\" width={38} src={base64} alt={path} />\n            <Media body tag={Flex} justify=\"between\" align=\"center\" className=\"ml-3\">\n              <div>\n                <h6 data-dz-name=\"\">{path}</h6>\n                <Flex className=\"position-relative\" align=\"center\">\n                  <p className=\"mb-0 fs--1 text-400 line-height-1\">{getSize(size)}</p>\n                </Flex>\n              </div>\n              <UncontrolledDropdown className=\"text-sans-serif\">\n                <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal\">\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\n                </DropdownToggle>\n                <DropdownMenu className=\"border py-0\" right>\n                  <div className=\"bg-white py-2\">\n                    <DropdownItem\n                      className=\"text-danger\"\n                      onClick={() => onChange(files.filter(file => file.id !== id))}\n                    >\n                      Remove File\n                    </DropdownItem>\n                  </div>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Media>\n          </Media>\n        ))}\n      </div>\n    )}\n  </Fragment>\n);\n\nFalconDropzone.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  files: PropTypes.array,\n  preview: PropTypes.bool,\n  isMulti: PropTypes.bool\n};\n\nFalconDropzone.defaultProps = {\n  placeholder: <img src={cloudUpload} alt=\"\" width={25} className=\"mr-2\" />,\n  files: [],\n  preview: false\n};\n\nexport default FalconDropzone;\n"]},"metadata":{},"sourceType":"module"}