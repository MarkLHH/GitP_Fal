{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{toast}from'react-toastify';import{Button,Form,FormGroup,Input}from'reactstrap';import withRedirect from'../../hoc/withRedirect';import Label from'reactstrap/es/Label';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PasswordResetForm=function PasswordResetForm(_ref){var setRedirect=_ref.setRedirect,setRedirectUrl=_ref.setRedirectUrl,layout=_ref.layout,hasLabel=_ref.hasLabel;// State\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isDisabled=_useState6[0],setIsDisabled=_useState6[1];// Handler\nvar handleSubmit=function handleSubmit(e){e.preventDefault();toast.success('Login with your new password');setRedirect(true);};useEffect(function(){setRedirectUrl(\"/authentication/\".concat(layout,\"/login\"));},[setRedirectUrl,layout]);useEffect(function(){if(password===''||confirmPassword==='')return setIsDisabled(true);setIsDisabled(password!==confirmPassword);},[password,confirmPassword]);return/*#__PURE__*/_jsxs(Form,{className:classNames('mt-3',{'text-left':hasLabel}),onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(FormGroup,{children:[hasLabel&&/*#__PURE__*/_jsx(Label,{children:\"New Password\"}),/*#__PURE__*/_jsx(Input,{placeholder:!hasLabel?'New Password':'',value:password,onChange:function onChange(_ref2){var target=_ref2.target;return setPassword(target.value);},type:\"password\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[hasLabel&&/*#__PURE__*/_jsx(Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Input,{placeholder:!hasLabel?'Confirm Password':'',value:confirmPassword,onChange:function onChange(_ref3){var target=_ref3.target;return setConfirmPassword(target.value);},type:\"password\"})]}),/*#__PURE__*/_jsx(Button,{color:\"primary\",block:true,className:\"mt-3\",disabled:isDisabled,children:\"Set password\"})]});};PasswordResetForm.defaultProps={layout:'basic',hasLabel:false};export default withRedirect(PasswordResetForm);","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/auth/PasswordResetForm.js"],"names":["React","useState","useEffect","toast","Button","Form","FormGroup","Input","withRedirect","Label","classNames","PasswordResetForm","setRedirect","setRedirectUrl","layout","hasLabel","password","setPassword","confirmPassword","setConfirmPassword","isDisabled","setIsDisabled","handleSubmit","e","preventDefault","success","target","value","defaultProps"],"mappings":"sGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,SAAvB,CAAkCC,KAAlC,KAA+C,YAA/C,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAuD,IAApDC,CAAAA,WAAoD,MAApDA,WAAoD,CAAvCC,cAAuC,MAAvCA,cAAuC,CAAvBC,MAAuB,MAAvBA,MAAuB,CAAfC,QAAe,MAAfA,QAAe,CAC/E;AAD+E,cAE/Cd,QAAQ,CAAC,EAAD,CAFuC,wCAExEe,QAFwE,eAE9DC,WAF8D,8BAGjChB,QAAQ,CAAC,EAAD,CAHyB,yCAGxEiB,eAHwE,eAGvDC,kBAHuD,8BAI3ClB,QAAQ,CAAC,IAAD,CAJmC,yCAIxEmB,UAJwE,eAI5DC,aAJ4D,eAM/E;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxBA,CAAC,CAACC,cAAF,GACArB,KAAK,CAACsB,OAAN,CAAc,8BAAd,EACAb,WAAW,CAAC,IAAD,CAAX,CACD,CAJD,CAMAV,SAAS,CAAC,UAAM,CACdW,cAAc,2BAAoBC,MAApB,WAAd,CACD,CAFQ,CAEN,CAACD,cAAD,CAAiBC,MAAjB,CAFM,CAAT,CAIAZ,SAAS,CAAC,UAAM,CACd,GAAIc,QAAQ,GAAK,EAAb,EAAmBE,eAAe,GAAK,EAA3C,CAA+C,MAAOG,CAAAA,aAAa,CAAC,IAAD,CAApB,CAE/CA,aAAa,CAACL,QAAQ,GAAKE,eAAd,CAAb,CACD,CAJQ,CAIN,CAACF,QAAD,CAAWE,eAAX,CAJM,CAAT,CAMA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAER,UAAU,CAAC,MAAD,CAAS,CAAE,YAAaK,QAAf,CAAT,CAA3B,CAAgE,QAAQ,CAAEO,YAA1E,wBACE,MAAC,SAAD,YACGP,QAAQ,eAAI,KAAC,KAAD,2BADf,cAEE,KAAC,KAAD,EACE,WAAW,CAAE,CAACA,QAAD,CAAY,cAAZ,CAA6B,EAD5C,CAEE,KAAK,CAAEC,QAFT,CAGE,QAAQ,CAAE,4BAAGU,CAAAA,MAAH,OAAGA,MAAH,OAAgBT,CAAAA,WAAW,CAACS,MAAM,CAACC,KAAR,CAA3B,EAHZ,CAIE,IAAI,CAAC,UAJP,EAFF,GADF,cAUE,MAAC,SAAD,YACGZ,QAAQ,eAAI,KAAC,KAAD,+BADf,cAEE,KAAC,KAAD,EACE,WAAW,CAAE,CAACA,QAAD,CAAY,kBAAZ,CAAiC,EADhD,CAEE,KAAK,CAAEG,eAFT,CAGE,QAAQ,CAAE,4BAAGQ,CAAAA,MAAH,OAAGA,MAAH,OAAgBP,CAAAA,kBAAkB,CAACO,MAAM,CAACC,KAAR,CAAlC,EAHZ,CAIE,IAAI,CAAC,UAJP,EAFF,GAVF,cAmBE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,KAAK,KAA7B,CAA8B,SAAS,CAAC,MAAxC,CAA+C,QAAQ,CAAEP,UAAzD,0BAnBF,GADF,CAyBD,CAhDD,CAyDAT,iBAAiB,CAACiB,YAAlB,CAAiC,CAAEd,MAAM,CAAE,OAAV,CAAmBC,QAAQ,CAAE,KAA7B,CAAjC,CAEA,cAAeP,CAAAA,YAAY,CAACG,iBAAD,CAA3B","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport withRedirect from '../../hoc/withRedirect';\nimport Label from 'reactstrap/es/Label';\nimport classNames from 'classnames';\n\nconst PasswordResetForm = ({ setRedirect, setRedirectUrl, layout, hasLabel }) => {\n  // State\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success('Login with your new password');\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    setRedirectUrl(`/authentication/${layout}/login`);\n  }, [setRedirectUrl, layout]);\n\n  useEffect(() => {\n    if (password === '' || confirmPassword === '') return setIsDisabled(true);\n\n    setIsDisabled(password !== confirmPassword);\n  }, [password, confirmPassword]);\n\n  return (\n    <Form className={classNames('mt-3', { 'text-left': hasLabel })} onSubmit={handleSubmit}>\n      <FormGroup>\n        {hasLabel && <Label>New Password</Label>}\n        <Input\n          placeholder={!hasLabel ? 'New Password' : ''}\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          type=\"password\"\n        />\n      </FormGroup>\n      <FormGroup>\n        {hasLabel && <Label>Confirm Password</Label>}\n        <Input\n          placeholder={!hasLabel ? 'Confirm Password' : ''}\n          value={confirmPassword}\n          onChange={({ target }) => setConfirmPassword(target.value)}\n          type=\"password\"\n        />\n      </FormGroup>\n      <Button color=\"primary\" block className=\"mt-3\" disabled={isDisabled}>\n        Set password\n      </Button>\n    </Form>\n  );\n};\n\nPasswordResetForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func.isRequired,\n  layout: PropTypes.string,\n  hasLabel: PropTypes.bool\n};\n\nPasswordResetForm.defaultProps = { layout: 'basic', hasLabel: false };\n\nexport default withRedirect(PasswordResetForm);\n"]},"metadata":{},"sourceType":"module"}