{"ast":null,"code":"import React,{Fragment,useContext}from'react';import{Button,Card,CardBody,Table}from'reactstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import PageHeader from'../common/PageHeader';import FalconCardHeader from'../common/FalconCardHeader';import CodeHighlight from'../common/CodeHighlight';import AppContext from'../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Sidepanel=function Sidepanel(){var _useContext=useContext(AppContext),toggleModal=_useContext.toggleModal;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Sidepanel\",description:\"You can show lists, forms, notifications, or other custom contents into the Falcon Sidepanel.\",className:\"mb-3\",children:/*#__PURE__*/_jsxs(Button,{tag:\"a\",href:\"#!\",color:\"link\",size:\"sm\",className:\"pl-0\",onClick:function onClick(){toggleModal();},children:[\"Show Sidepanel\",/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"chevron-right\",className:\"ml-1 fs--2\"})]})}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Structure\",light:false}),/*#__PURE__*/_jsxs(CardBody,{className:\"bg-light\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Falcon Sidepanel uses Boostrap Modal features to show the panel content. \",/*#__PURE__*/_jsx(\"code\",{children:\".modal-fixed-right\"}),\" and\",/*#__PURE__*/_jsx(\"code\",{children:\".modal-dialog-vertical\"}),\" classes are used to stick the panel at the right side and animate the panel from right to left.\"]}),/*#__PURE__*/_jsx(CodeHighlight,{language:\"html\",code:\"\\n              <Modal\\n                isOpen={isOpenSidePanel}\\n                toggle={toggleModal}\\n                modalClassName=\\\"overflow-hidden modal-fixed-right modal-theme\\\"\\n                className=\\\"modal-dialog-vertical\\\"\\n              >\\n                <ModalHeader tag=\\\"div\\\" toggle={toggleModal} className=\\\"modal-header-settings\\\">\\n                  // Heder Content\\n                </ModalHeader>\\n                  <ModalBody className=\\\"px-card\\\">\\n                    //Body Content\\n                  </ModalBody>\\n              </Modal>\"})]})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Options\",light:false}),/*#__PURE__*/_jsxs(CardBody,{className:\"bg-light\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[' ',\"You can pass options via Props through \",/*#__PURE__*/_jsx(\"code\",{children:\"Sidepanel\"}),\" component. It will decide whether the panel is shown or remain hidden when the page loads.\"]}),/*#__PURE__*/_jsxs(Table,{class:\"border border-200 fs--1\",bordered:true,responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{class:\"bg-200 text-900\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{class:\"white-space-nowrap\",children:\"Option\"}),/*#__PURE__*/_jsx(\"th\",{class:\"white-space-nowrap\",children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{class:\"white-space-nowrap\",children:\"Defaults\"}),/*#__PURE__*/_jsx(\"th\",{class:\"white-space-nowrap\",children:\"Description\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{class:\"white-space-nowrap\",children:\"autoShow\"}),/*#__PURE__*/_jsxs(\"td\",{class:\"white-space-nowrap\",children:[' ',/*#__PURE__*/_jsx(\"code\",{children:\"Boolean\"})]}),/*#__PURE__*/_jsxs(\"td\",{class:\"white-space-nowrap\",children:[' ',/*#__PURE__*/_jsx(\"code\",{children:\"false\"})]}),/*#__PURE__*/_jsxs(\"td\",{class:\"white-space-nowrap\",children:[\"Set \",/*#__PURE__*/_jsx(\"code\",{children:\"true \"}),\"to make the Slidepanel show automatically after the page is loaded.\"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{class:\"white-space-nowrap\",children:\"autoShowDelay\"}),/*#__PURE__*/_jsx(\"td\",{class:\"white-space-nowrap\",children:/*#__PURE__*/_jsx(\"code\",{children:\"Number \"})}),/*#__PURE__*/_jsxs(\"td\",{class:\"white-space-nowrap\",children:[' ',/*#__PURE__*/_jsx(\"code\",{children:\"3000\"})]}),/*#__PURE__*/_jsxs(\"td\",{class:\"white-space-nowrap\",children:[\"How much time \",/*#__PURE__*/_jsx(\"i\",{children:\"(ms) \"}),\"should wait after the page is loaded before showing the Sidepanel. Works only when the autoShow is set true\"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{class:\"white-space-nowrap\",children:\"showOnce\"}),/*#__PURE__*/_jsx(\"td\",{class:\"white-space-nowrap\",children:/*#__PURE__*/_jsx(\"code\",{children:\"Boolean\"})}),/*#__PURE__*/_jsx(\"td\",{class:\"white-space-nowrap\",children:/*#__PURE__*/_jsx(\"code\",{children:\"false\"})}),/*#__PURE__*/_jsx(\"td\",{class:\"white-space-nowrap\",children:\"The Sidepanel will show only once - for the first time when a user view the website and remain hidden as per the cookie expiration date.\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{class:\"white-space-nowrap\",children:\"cookieExpireTime\"}),/*#__PURE__*/_jsxs(\"td\",{class:\"white-space-nowrap\",children:[' ',/*#__PURE__*/_jsx(\"code\",{children:\"Number \"})]}),/*#__PURE__*/_jsxs(\"td\",{class:\"white-space-nowrap\",children:[' ',/*#__PURE__*/_jsx(\"code\",{children:\"7200000\"})]}),/*#__PURE__*/_jsxs(\"td\",{class:\"white-space-nowrap\",children:[\"After how many time \",/*#__PURE__*/_jsx(\"i\",{children:\"(ms) \"}),\"the cookie will expired.\"]})]})]})]})]})]})]});};export default Sidepanel;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/bootstrap-components/Sidepanel.js"],"names":["React","Fragment","useContext","Button","Card","CardBody","Table","FontAwesomeIcon","PageHeader","FalconCardHeader","CodeHighlight","AppContext","Sidepanel","toggleModal"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport { Button, Card, CardBody, Table } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport CodeHighlight from '../common/CodeHighlight';\nimport AppContext from '../../context/Context';\n\nconst Sidepanel = () => {\n  const { toggleModal } = useContext(AppContext);\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Sidepanel\"\n        description=\"You can show lists, forms, notifications, or other custom contents into the Falcon Sidepanel.\"\n        className=\"mb-3\"\n      >\n        <Button\n          tag=\"a\"\n          href=\"#!\"\n          color=\"link\"\n          size=\"sm\"\n          className=\"pl-0\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Show Sidepanel\n          <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n        </Button>\n      </PageHeader>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title=\"Structure\" light={false} />\n        <CardBody className=\"bg-light\">\n          <p>\n            Falcon Sidepanel uses Boostrap Modal features to show the panel content. <code>.modal-fixed-right</code> and\n            <code>.modal-dialog-vertical</code> classes are used to stick the panel at the right side and animate the\n            panel from right to left.\n          </p>\n          <CodeHighlight\n            language=\"html\"\n            code={`\n              <Modal\n                isOpen={isOpenSidePanel}\n                toggle={toggleModal}\n                modalClassName=\"overflow-hidden modal-fixed-right modal-theme\"\n                className=\"modal-dialog-vertical\"\n              >\n                <ModalHeader tag=\"div\" toggle={toggleModal} className=\"modal-header-settings\">\n                  // Heder Content\n                </ModalHeader>\n                  <ModalBody className=\"px-card\">\n                    //Body Content\n                  </ModalBody>\n              </Modal>`}\n          />\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title=\"Options\" light={false} />\n        <CardBody className=\"bg-light\">\n          <p>\n            {' '}\n            You can pass options via Props through <code>Sidepanel</code> component. It will decide whether the panel is\n            shown or remain hidden when the page loads.\n          </p>\n          <Table class=\"border border-200 fs--1\" bordered responsive>\n            <thead class=\"bg-200 text-900\">\n              <tr>\n                <th class=\"white-space-nowrap\">Option</th>\n                <th class=\"white-space-nowrap\">Type</th>\n                <th class=\"white-space-nowrap\">Defaults</th>\n                <th class=\"white-space-nowrap\">Description</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td class=\"white-space-nowrap\">autoShow</td>\n                <td class=\"white-space-nowrap\">\n                  {' '}\n                  <code>Boolean</code>\n                </td>\n                <td class=\"white-space-nowrap\">\n                  {' '}\n                  <code>false</code>\n                </td>\n                <td class=\"white-space-nowrap\">\n                  Set <code>true </code>to make the Slidepanel show automatically after the page is loaded.\n                </td>\n              </tr>\n              <tr>\n                <td class=\"white-space-nowrap\">autoShowDelay</td>\n                <td class=\"white-space-nowrap\">\n                  <code>Number </code>\n                </td>\n                <td class=\"white-space-nowrap\">\n                  {' '}\n                  <code>3000</code>\n                </td>\n                <td class=\"white-space-nowrap\">\n                  How much time <i>(ms) </i>should wait after the page is loaded before showing the Sidepanel. Works\n                  only when the autoShow is set true\n                </td>\n              </tr>\n              <tr>\n                <td class=\"white-space-nowrap\">showOnce</td>\n                <td class=\"white-space-nowrap\">\n                  <code>Boolean</code>\n                </td>\n                <td class=\"white-space-nowrap\">\n                  <code>false</code>\n                </td>\n                <td class=\"white-space-nowrap\">\n                  The Sidepanel will show only once - for the first time when a user view the website and remain hidden\n                  as per the cookie expiration date.\n                </td>\n              </tr>\n              <tr>\n                <td class=\"white-space-nowrap\">cookieExpireTime</td>\n                <td class=\"white-space-nowrap\">\n                  {' '}\n                  <code>Number </code>\n                </td>\n                <td class=\"white-space-nowrap\">\n                  {' '}\n                  <code>7200000</code>\n                </td>\n                <td class=\"white-space-nowrap\">\n                  After how many time <i>(ms) </i>the cookie will expired.\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Sidepanel;\n"]},"metadata":{},"sourceType":"module"}