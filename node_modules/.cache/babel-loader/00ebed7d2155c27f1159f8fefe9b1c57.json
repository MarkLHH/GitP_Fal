{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{Card,CardBody,CustomInput}from'reactstrap';import echarts from'echarts/lib/echarts';import ReactEchartsCore from'echarts-for-react/lib/core';import{getPosition,getGrays,themeColors,rgbaColor,isIterableArray,capitalize}from'../../helpers/utils';import CardDropdown from'./CardDropdown';import FalconCardHeader from'../common/FalconCardHeader';import Flex from'../common/Flex';import AppContext from'../../context/Context';import'echarts/lib/chart/bar';import'echarts/lib/component/tooltip';import'echarts/lib/component/legend';import{totalSalesByMonth}from'../../data/dashboard/topProducts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function getFormatter(params){var _params$=params[0],name=_params$.name,value=_params$.value;return\"\".concat(Object.keys(totalSalesByMonth)[0],\" \").concat(name,\", \").concat(value);}var getOption=function getOption(month,isDark){var grays=getGrays(isDark);return{tooltip:{trigger:'axis',padding:[7,10],backgroundColor:grays.white,borderColor:grays['300'],borderWidth:1,textStyle:{color:themeColors.dark},formatter:function formatter(params){return getFormatter(params);},transitionDuration:0,position:function position(pos,params,dom,rect,size){return getPosition(pos,params,dom,rect,size);}},xAxis:{type:'category',data:[1,3,5,7,9,11,13,15,17,19,21,23,25],boundaryGap:false,axisPointer:{lineStyle:{color:grays['300'],type:'dashed'}},splitLine:{show:false},axisLine:{lineStyle:{color:rgbaColor('#000',0.01),type:'dashed'}},axisTick:{show:false},axisLabel:{color:grays['400'],formatter:function formatter(value){return\"\".concat(capitalize(month.slice(0,3)),\" \").concat(value);},margin:15}},yAxis:{type:'value',axisPointer:{show:false},splitLine:{lineStyle:{color:grays['300'],type:'dashed'}},boundaryGap:false,axisLabel:{show:true,color:grays['400'],margin:15},axisTick:{show:false},axisLine:{show:false}},series:[{type:'line',data:totalSalesByMonth[month],lineStyle:{color:themeColors.primary},itemStyle:{color:grays['100'],borderColor:themeColors.primary,borderWidth:2},symbol:'circle',symbolSize:10,smooth:false,hoverAnimation:true,areaStyle:{color:{type:'linear',x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:rgbaColor(themeColors.primary,0.2)},{offset:1,color:rgbaColor(themeColors.primary,0)}]}}}],animationDuration:90000,grid:{right:'28px',left:'40px',bottom:'15%',top:'5%'}};};var TotalSales=function TotalSales(_ref){var className=_ref.className;var _useContext=useContext(AppContext),isDark=_useContext.isDark;var _useState=useState('january'),_useState2=_slicedToArray(_useState,2),month=_useState2[0],setMonth=_useState2[1];var months=Object.keys(totalSalesByMonth);return/*#__PURE__*/_jsxs(Card,{className:className,children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Total Sales\",light:false,titleTag:\"h6\",className:\"pb-0\",children:/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(CustomInput,{type:\"select\",id:\"exampleCustomSelect\",bsSize:\"sm\",className:\"select-month mr-2\",value:month,onChange:function onChange(_ref2){var target=_ref2.target;return setMonth(target.value);},children:isIterableArray(months)&&months.map(function(month,index){return/*#__PURE__*/_jsx(\"option\",{value:month,children:capitalize(month)},index);})}),/*#__PURE__*/_jsx(CardDropdown,{})]})}),/*#__PURE__*/_jsx(CardBody,{className:\"h-100\",children:/*#__PURE__*/_jsx(ReactEchartsCore,{echarts:echarts,option:getOption(month,isDark),style:{minHeight:'18.75rem'}})})]});};export default TotalSales;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/dashboard-alt/TotalSales.js"],"names":["React","useContext","useState","Card","CardBody","CustomInput","echarts","ReactEchartsCore","getPosition","getGrays","themeColors","rgbaColor","isIterableArray","capitalize","CardDropdown","FalconCardHeader","Flex","AppContext","totalSalesByMonth","getFormatter","params","name","value","Object","keys","getOption","month","isDark","grays","tooltip","trigger","padding","backgroundColor","white","borderColor","borderWidth","textStyle","color","dark","formatter","transitionDuration","position","pos","dom","rect","size","xAxis","type","data","boundaryGap","axisPointer","lineStyle","splitLine","show","axisLine","axisTick","axisLabel","slice","margin","yAxis","series","primary","itemStyle","symbol","symbolSize","smooth","hoverAnimation","areaStyle","x","y","x2","y2","colorStops","offset","animationDuration","grid","right","left","bottom","top","TotalSales","className","setMonth","months","target","map","index","minHeight"],"mappings":"sGAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,WAAzB,KAA4C,YAA5C,CAEA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,OAASC,WAAT,CAAsBC,QAAtB,CAAgCC,WAAhC,CAA6CC,SAA7C,CAAwDC,eAAxD,CAAyEC,UAAzE,KAA2F,qBAA3F,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CAEA,MAAO,uBAAP,CACA,MAAO,+BAAP,CACA,MAAO,8BAAP,CAEA,OAASC,iBAAT,KAAkC,kCAAlC,C,wFAEA,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA8B,cACJA,MAAM,CAAC,CAAD,CADF,CACpBC,IADoB,UACpBA,IADoB,CACdC,KADc,UACdA,KADc,CAE5B,gBAAUC,MAAM,CAACC,IAAP,CAAYN,iBAAZ,EAA+B,CAA/B,CAAV,aAA+CG,IAA/C,cAAwDC,KAAxD,EACD,CAED,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACnC,GAAMC,CAAAA,KAAK,CAAGnB,QAAQ,CAACkB,MAAD,CAAtB,CACA,MAAO,CACLE,OAAO,CAAE,CACPC,OAAO,CAAE,MADF,CAEPC,OAAO,CAAE,CAAC,CAAD,CAAI,EAAJ,CAFF,CAGPC,eAAe,CAAEJ,KAAK,CAACK,KAHhB,CAIPC,WAAW,CAAEN,KAAK,CAAC,KAAD,CAJX,CAKPO,WAAW,CAAE,CALN,CAMPC,SAAS,CAAE,CAAEC,KAAK,CAAE3B,WAAW,CAAC4B,IAArB,CANJ,CAOPC,SAPO,oBAOGnB,MAPH,CAOW,CAChB,MAAOD,CAAAA,YAAY,CAACC,MAAD,CAAnB,CACD,CATM,CAUPoB,kBAAkB,CAAE,CAVb,CAWPC,QAXO,mBAWEC,GAXF,CAWOtB,MAXP,CAWeuB,GAXf,CAWoBC,IAXpB,CAW0BC,IAX1B,CAWgC,CACrC,MAAOrC,CAAAA,WAAW,CAACkC,GAAD,CAAMtB,MAAN,CAAcuB,GAAd,CAAmBC,IAAnB,CAAyBC,IAAzB,CAAlB,CACD,CAbM,CADJ,CAgBLC,KAAK,CAAE,CACLC,IAAI,CAAE,UADD,CAELC,IAAI,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,EAAhB,CAAoB,EAApB,CAAwB,EAAxB,CAA4B,EAA5B,CAAgC,EAAhC,CAAoC,EAApC,CAAwC,EAAxC,CAA4C,EAA5C,CAFD,CAGLC,WAAW,CAAE,KAHR,CAILC,WAAW,CAAE,CACXC,SAAS,CAAE,CACTd,KAAK,CAAET,KAAK,CAAC,KAAD,CADH,CAETmB,IAAI,CAAE,QAFG,CADA,CAJR,CAULK,SAAS,CAAE,CAAEC,IAAI,CAAE,KAAR,CAVN,CAWLC,QAAQ,CAAE,CACRH,SAAS,CAAE,CACTd,KAAK,CAAE1B,SAAS,CAAC,MAAD,CAAS,IAAT,CADP,CAEToC,IAAI,CAAE,QAFG,CADH,CAXL,CAiBLQ,QAAQ,CAAE,CAAEF,IAAI,CAAE,KAAR,CAjBL,CAkBLG,SAAS,CAAE,CACTnB,KAAK,CAAET,KAAK,CAAC,KAAD,CADH,CAETW,SAAS,CAAE,mBAASjB,KAAT,CAAgB,CACzB,gBAAUT,UAAU,CAACa,KAAK,CAAC+B,KAAN,CAAY,CAAZ,CAAe,CAAf,CAAD,CAApB,aAA2CnC,KAA3C,EACD,CAJQ,CAKToC,MAAM,CAAE,EALC,CAlBN,CAhBF,CA0CLC,KAAK,CAAE,CACLZ,IAAI,CAAE,OADD,CAELG,WAAW,CAAE,CAAEG,IAAI,CAAE,KAAR,CAFR,CAGLD,SAAS,CAAE,CACTD,SAAS,CAAE,CACTd,KAAK,CAAET,KAAK,CAAC,KAAD,CADH,CAETmB,IAAI,CAAE,QAFG,CADF,CAHN,CASLE,WAAW,CAAE,KATR,CAULO,SAAS,CAAE,CACTH,IAAI,CAAE,IADG,CAEThB,KAAK,CAAET,KAAK,CAAC,KAAD,CAFH,CAGT8B,MAAM,CAAE,EAHC,CAVN,CAeLH,QAAQ,CAAE,CAAEF,IAAI,CAAE,KAAR,CAfL,CAgBLC,QAAQ,CAAE,CAAED,IAAI,CAAE,KAAR,CAhBL,CA1CF,CA4DLO,MAAM,CAAE,CACN,CACEb,IAAI,CAAE,MADR,CAEEC,IAAI,CAAE9B,iBAAiB,CAACQ,KAAD,CAFzB,CAGEyB,SAAS,CAAE,CAAEd,KAAK,CAAE3B,WAAW,CAACmD,OAArB,CAHb,CAIEC,SAAS,CAAE,CACTzB,KAAK,CAAET,KAAK,CAAC,KAAD,CADH,CAETM,WAAW,CAAExB,WAAW,CAACmD,OAFhB,CAGT1B,WAAW,CAAE,CAHJ,CAJb,CASE4B,MAAM,CAAE,QATV,CAUEC,UAAU,CAAE,EAVd,CAWEC,MAAM,CAAE,KAXV,CAYEC,cAAc,CAAE,IAZlB,CAaEC,SAAS,CAAE,CACT9B,KAAK,CAAE,CACLU,IAAI,CAAE,QADD,CAELqB,CAAC,CAAE,CAFE,CAGLC,CAAC,CAAE,CAHE,CAILC,EAAE,CAAE,CAJC,CAKLC,EAAE,CAAE,CALC,CAMLC,UAAU,CAAE,CACV,CACEC,MAAM,CAAE,CADV,CAEEpC,KAAK,CAAE1B,SAAS,CAACD,WAAW,CAACmD,OAAb,CAAsB,GAAtB,CAFlB,CADU,CAKV,CACEY,MAAM,CAAE,CADV,CAEEpC,KAAK,CAAE1B,SAAS,CAACD,WAAW,CAACmD,OAAb,CAAsB,CAAtB,CAFlB,CALU,CANP,CADE,CAbb,CADM,CA5DH,CA+FLa,iBAAiB,CAAE,KA/Fd,CAgGLC,IAAI,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAiBC,IAAI,CAAE,MAAvB,CAA+BC,MAAM,CAAE,KAAvC,CAA8CC,GAAG,CAAE,IAAnD,CAhGD,CAAP,CAkGD,CApGD,CAsGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAmB,IAAhBC,CAAAA,SAAgB,MAAhBA,SAAgB,iBACjBhF,UAAU,CAACgB,UAAD,CADO,CAC5BU,MAD4B,aAC5BA,MAD4B,eAEVzB,QAAQ,CAAC,SAAD,CAFE,wCAE7BwB,KAF6B,eAEtBwD,QAFsB,eAIpC,GAAMC,CAAAA,MAAM,CAAG5D,MAAM,CAACC,IAAP,CAAYN,iBAAZ,CAAf,CAEA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAE+D,SAAjB,wBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,aAAxB,CAAsC,KAAK,CAAE,KAA7C,CAAoD,QAAQ,CAAC,IAA7D,CAAkE,SAAS,CAAC,MAA5E,uBACE,MAAC,IAAD,yBACE,KAAC,WAAD,EACE,IAAI,CAAC,QADP,CAEE,EAAE,CAAC,qBAFL,CAGE,MAAM,CAAC,IAHT,CAIE,SAAS,CAAC,mBAJZ,CAKE,KAAK,CAAEvD,KALT,CAME,QAAQ,CAAE,4BAAG0D,CAAAA,MAAH,OAAGA,MAAH,OAAgBF,CAAAA,QAAQ,CAACE,MAAM,CAAC9D,KAAR,CAAxB,EANZ,UAQGV,eAAe,CAACuE,MAAD,CAAf,EACCA,MAAM,CAACE,GAAP,CAAW,SAAC3D,KAAD,CAAQ4D,KAAR,qBACT,eAAoB,KAAK,CAAE5D,KAA3B,UACGb,UAAU,CAACa,KAAD,CADb,EAAa4D,KAAb,CADS,EAAX,CATJ,EADF,cAgBE,KAAC,YAAD,IAhBF,GADF,EADF,cAsBE,KAAC,QAAD,EAAU,SAAS,CAAC,OAApB,uBACE,KAAC,gBAAD,EAAkB,OAAO,CAAEhF,OAA3B,CAAoC,MAAM,CAAEmB,SAAS,CAACC,KAAD,CAAQC,MAAR,CAArD,CAAsE,KAAK,CAAE,CAAE4D,SAAS,CAAE,UAAb,CAA7E,EADF,EAtBF,GADF,CA4BD,CAlCD,CAwCA,cAAeP,CAAAA,UAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Card, CardBody, CustomInput } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport echarts from 'echarts/lib/echarts';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport { getPosition, getGrays, themeColors, rgbaColor, isIterableArray, capitalize } from '../../helpers/utils';\nimport CardDropdown from './CardDropdown';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Flex from '../common/Flex';\nimport AppContext from '../../context/Context';\n\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/legend';\n\nimport { totalSalesByMonth } from '../../data/dashboard/topProducts';\n\nfunction getFormatter(params) {\n  const { name, value } = params[0];\n  return `${Object.keys(totalSalesByMonth)[0]} ${name}, ${value}`;\n}\n\nconst getOption = (month, isDark) => {\n  const grays = getGrays(isDark);\n  return {\n    tooltip: {\n      trigger: 'axis',\n      padding: [7, 10],\n      backgroundColor: grays.white,\n      borderColor: grays['300'],\n      borderWidth: 1,\n      textStyle: { color: themeColors.dark },\n      formatter(params) {\n        return getFormatter(params);\n      },\n      transitionDuration: 0,\n      position(pos, params, dom, rect, size) {\n        return getPosition(pos, params, dom, rect, size);\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25],\n      boundaryGap: false,\n      axisPointer: {\n        lineStyle: {\n          color: grays['300'],\n          type: 'dashed'\n        }\n      },\n      splitLine: { show: false },\n      axisLine: {\n        lineStyle: {\n          color: rgbaColor('#000', 0.01),\n          type: 'dashed'\n        }\n      },\n      axisTick: { show: false },\n      axisLabel: {\n        color: grays['400'],\n        formatter: function(value) {\n          return `${capitalize(month.slice(0, 3))} ${value}`;\n        },\n        margin: 15\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisPointer: { show: false },\n      splitLine: {\n        lineStyle: {\n          color: grays['300'],\n          type: 'dashed'\n        }\n      },\n      boundaryGap: false,\n      axisLabel: {\n        show: true,\n        color: grays['400'],\n        margin: 15\n      },\n      axisTick: { show: false },\n      axisLine: { show: false }\n    },\n    series: [\n      {\n        type: 'line',\n        data: totalSalesByMonth[month],\n        lineStyle: { color: themeColors.primary },\n        itemStyle: {\n          color: grays['100'],\n          borderColor: themeColors.primary,\n          borderWidth: 2\n        },\n        symbol: 'circle',\n        symbolSize: 10,\n        smooth: false,\n        hoverAnimation: true,\n        areaStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [\n              {\n                offset: 0,\n                color: rgbaColor(themeColors.primary, 0.2)\n              },\n              {\n                offset: 1,\n                color: rgbaColor(themeColors.primary, 0)\n              }\n            ]\n          }\n        }\n      }\n    ],\n    animationDuration: 90000,\n    grid: { right: '28px', left: '40px', bottom: '15%', top: '5%' }\n  };\n};\n\nconst TotalSales = ({ className }) => {\n  const { isDark } = useContext(AppContext);\n  const [month, setMonth] = useState('january');\n\n  const months = Object.keys(totalSalesByMonth);\n\n  return (\n    <Card className={className}>\n      <FalconCardHeader title=\"Total Sales\" light={false} titleTag=\"h6\" className=\"pb-0\">\n        <Flex>\n          <CustomInput\n            type=\"select\"\n            id=\"exampleCustomSelect\"\n            bsSize=\"sm\"\n            className=\"select-month mr-2\"\n            value={month}\n            onChange={({ target }) => setMonth(target.value)}\n          >\n            {isIterableArray(months) &&\n              months.map((month, index) => (\n                <option key={index} value={month}>\n                  {capitalize(month)}\n                </option>\n              ))}\n          </CustomInput>\n          <CardDropdown />\n        </Flex>\n      </FalconCardHeader>\n\n      <CardBody className=\"h-100\">\n        <ReactEchartsCore echarts={echarts} option={getOption(month, isDark)} style={{ minHeight: '18.75rem' }} />\n      </CardBody>\n    </Card>\n  );\n};\n\nTotalSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalSales;\n"]},"metadata":{},"sourceType":"module"}