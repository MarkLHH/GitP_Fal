{"ast":null,"code":"import React,{useEffect,useRef}from'react';import'plyr/dist/plyr.css';import Plyr from'plyr';import{jsx as _jsx}from\"react/jsx-runtime\";var FalconPlyr=function FalconPlyr(_ref){var type=_ref.type,videoId=_ref.videoId;var plyrRef=useRef();useEffect(function(){new Plyr(plyrRef.current);},[]);switch(type){case'youtube':return/*#__PURE__*/_jsx(\"div\",{className:\"position-relative\",children:/*#__PURE__*/_jsx(\"div\",{className:\"plyr__video-embed\",ref:plyrRef,children:/*#__PURE__*/_jsx(\"iframe\",{src:\"https://www.youtube.com/embed/\".concat(videoId,\"?origin=https://plyr.io&amp;iv_load_policy=3&amp;modestbranding=1&amp;playsinline=1&amp;showinfo=0&amp;rel=0&amp;enablejsapi=1\"),allowFullScreen:true,allow:\"autoplay\",title:videoId})})});case'vimeo':return/*#__PURE__*/_jsx(\"div\",{className:\"plyr__video-embed\",ref:plyrRef,children:/*#__PURE__*/_jsx(\"iframe\",{src:\"https://player.vimeo.com/video/\".concat(videoId,\"?loop=false&amp;byline=false&amp;portrait=false&amp;title=false&amp;speed=true&amp;transparent=0&amp;gesture=media\"),allowFullScreen:true,allow:\"autoplay\",title:videoId})});default:return null;}};export default FalconPlyr;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/FalconPlyr.js"],"names":["React","useEffect","useRef","Plyr","FalconPlyr","type","videoId","plyrRef","current"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CAEA,MAAO,oBAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,C,2CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAuB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CACxC,GAAMC,CAAAA,OAAO,CAAGL,MAAM,EAAtB,CAEAD,SAAS,CAAC,UAAM,CACd,GAAIE,CAAAA,IAAJ,CAASI,OAAO,CAACC,OAAjB,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,OAAQH,IAAR,EACE,IAAK,SAAL,CACE,mBACE,YAAK,SAAS,CAAC,mBAAf,uBACE,YAAK,SAAS,CAAC,mBAAf,CAAmC,GAAG,CAAEE,OAAxC,uBACE,eACE,GAAG,yCAAmCD,OAAnC,kIADL,CAEE,eAAe,KAFjB,CAGE,KAAK,CAAC,UAHR,CAIE,KAAK,CAAEA,OAJT,EADF,EADF,EADF,CAYF,IAAK,OAAL,CACE,mBACE,YAAK,SAAS,CAAC,mBAAf,CAAmC,GAAG,CAAEC,OAAxC,uBACE,eACE,GAAG,0CAAoCD,OAApC,sHADL,CAEE,eAAe,KAFjB,CAGE,KAAK,CAAC,UAHR,CAIE,KAAK,CAAEA,OAJT,EADF,EADF,CAUF,QACE,MAAO,KAAP,CA1BJ,CA4BD,CAnCD,CA0CA,cAAeF,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport 'plyr/dist/plyr.css';\nimport Plyr from 'plyr';\n\nconst FalconPlyr = ({ type, videoId }) => {\n  const plyrRef = useRef();\n\n  useEffect(() => {\n    new Plyr(plyrRef.current);\n  }, []);\n\n  switch (type) {\n    case 'youtube':\n      return (\n        <div className=\"position-relative\">\n          <div className=\"plyr__video-embed\" ref={plyrRef}>\n            <iframe\n              src={`https://www.youtube.com/embed/${videoId}?origin=https://plyr.io&amp;iv_load_policy=3&amp;modestbranding=1&amp;playsinline=1&amp;showinfo=0&amp;rel=0&amp;enablejsapi=1`}\n              allowFullScreen\n              allow=\"autoplay\"\n              title={videoId}\n            />\n          </div>\n        </div>\n      );\n    case 'vimeo':\n      return (\n        <div className=\"plyr__video-embed\" ref={plyrRef}>\n          <iframe\n            src={`https://player.vimeo.com/video/${videoId}?loop=false&amp;byline=false&amp;portrait=false&amp;title=false&amp;speed=true&amp;transparent=0&amp;gesture=media`}\n            allowFullScreen\n            allow=\"autoplay\"\n            title={videoId}\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nFalconPlyr.propTypes = {\n  videoId: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['youtube', 'vimeo']).isRequired\n};\n\nexport default FalconPlyr;\n"]},"metadata":{},"sourceType":"module"}