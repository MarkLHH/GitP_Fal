{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from'react';import{Button,UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem,Input,Tooltip}from'reactstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{copyToClipBoard}from'../../helpers/utils';import Flex from'../common/Flex';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InviteToBoard=function InviteToBoard(){var _useState=useState('Copy link to invite'),_useState2=_slicedToArray(_useState,2),tooltipText=_useState2[0],setTooltipText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),tooltipOpen=_useState4[0],setTooltipOpen=_useState4[1];var tooltipRef=useRef(null);var copyTextRef=useRef(null);var toggle=function toggle(){return setTooltipOpen(!tooltipOpen);};var handleClickTooltip=function handleClickTooltip(){copyToClipBoard(copyTextRef);setTooltipText('Copied to clipboard');setTooltipOpen(true);};return/*#__PURE__*/_jsxs(UncontrolledDropdown,{size:\"sm\",children:[/*#__PURE__*/_jsxs(DropdownToggle,{color:\"falcon-default\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"plus\",className:\"mr-1\"}),\" Invite\"]}),/*#__PURE__*/_jsxs(DropdownMenu,{className:\"pt-2 pb-0 text-nowrap\",right:true,children:[/*#__PURE__*/_jsx(DropdownItem,{header:true,className:\"text-center\",children:\"Invite To Board\"}),/*#__PURE__*/_jsx(DropdownItem,{divider:true,className:\"mb-0\"}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded fs--2 mb-3\",children:[/*#__PURE__*/_jsxs(Flex,{className:\"border-bottom bg-200 flex-between-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-2\",children:\"Anyone with the link can join\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border-left\",children:/*#__PURE__*/_jsxs(Button,{id:\"copyTextTooltip\",color:\"link\",className:\"text-decoration-none hover-300 rounded-0 fs--2\",size:\"sm\",onClick:handleClickTooltip,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:['far','copy'],className:\"mr-2\"}),\"Copy link\",/*#__PURE__*/_jsx(Tooltip,{innerRef:tooltipRef,placement:\"top\",target:\"copyTextTooltip\",isOpen:tooltipOpen,toggle:toggle,children:tooltipText})]})})]}),/*#__PURE__*/_jsx(Input,{className:\"bg-white border-0 fs--2 px-1\",id:\"copyText\",innerRef:copyTextRef,readOnly:true,value:\"https://prium.github.io/falcon/kanban/QhNCShh8TdxKx0kYN1oWzzKJDjOYUXhm9IJ035laUVdWMYsUN5\"})]}),/*#__PURE__*/_jsx(Input,{bsSize:\"sm\",placeholder:\"Enter name or email\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",size:\"sm\",block:true,type:\"button\",className:\"mt-2\",children:\"Send Invitation\"})]})})]})]});};export default InviteToBoard;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/kanban/InviteToBoard.js"],"names":["React","useRef","useState","Button","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Input","Tooltip","FontAwesomeIcon","copyToClipBoard","Flex","InviteToBoard","tooltipText","setTooltipText","tooltipOpen","setTooltipOpen","tooltipRef","copyTextRef","toggle","handleClickTooltip","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { Button, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Tooltip } from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { copyToClipBoard } from '../../helpers/utils';\r\nimport Flex from '../common/Flex';\r\n\r\nconst InviteToBoard = () => {\r\n  const [tooltipText, setTooltipText] = useState('Copy link to invite');\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const tooltipRef = useRef(null);\r\n  const copyTextRef = useRef(null);\r\n\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  const handleClickTooltip = () => {\r\n    copyToClipBoard(copyTextRef);\r\n    setTooltipText('Copied to clipboard');\r\n    setTooltipOpen(true);\r\n  };\r\n\r\n  return (\r\n    <UncontrolledDropdown size=\"sm\">\r\n      <DropdownToggle color=\"falcon-default\">\r\n        <FontAwesomeIcon icon=\"plus\" className=\"mr-1\" /> Invite\r\n      </DropdownToggle>\r\n      <DropdownMenu className=\"pt-2 pb-0 text-nowrap\" right>\r\n        <DropdownItem header className=\"text-center\">\r\n          Invite To Board\r\n        </DropdownItem>\r\n        <DropdownItem divider className=\"mb-0\" />\r\n        <div className=\"p-3\">\r\n          <form\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <div className=\"border rounded fs--2 mb-3\">\r\n              <Flex className=\"border-bottom bg-200 flex-between-center\">\r\n                <div className=\"px-2\">Anyone with the link can join</div>\r\n                <div className=\"border-left\">\r\n                  <Button\r\n                    id=\"copyTextTooltip\"\r\n                    color=\"link\"\r\n                    className=\"text-decoration-none hover-300 rounded-0 fs--2\"\r\n                    size=\"sm\"\r\n                    onClick={handleClickTooltip}\r\n                  >\r\n                    <FontAwesomeIcon icon={['far', 'copy']} className=\"mr-2\" />\r\n                    Copy link\r\n                    <Tooltip\r\n                      innerRef={tooltipRef}\r\n                      placement=\"top\"\r\n                      target=\"copyTextTooltip\"\r\n                      isOpen={tooltipOpen}\r\n                      toggle={toggle}\r\n                    >\r\n                      {tooltipText}\r\n                    </Tooltip>\r\n                  </Button>\r\n                </div>\r\n              </Flex>\r\n              <Input\r\n                className=\"bg-white border-0 fs--2 px-1\"\r\n                id=\"copyText\"\r\n                innerRef={copyTextRef}\r\n                readOnly\r\n                value=\"https://prium.github.io/falcon/kanban/QhNCShh8TdxKx0kYN1oWzzKJDjOYUXhm9IJ035laUVdWMYsUN5\"\r\n              />\r\n            </div>\r\n            <Input bsSize=\"sm\" placeholder=\"Enter name or email\" />\r\n\r\n            <Button color=\"primary\" size=\"sm\" block type=\"button\" className=\"mt-2\">\r\n              Send Invitation\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  );\r\n};\r\n\r\nexport default InviteToBoard;\r\n"]},"metadata":{},"sourceType":"module"}