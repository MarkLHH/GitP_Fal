{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{TabContent,TabPane}from'reactstrap';import ChatContentHeader from'./ChatContentHeader';import MessageTextArea from'./MessageTextArea';import ChatContentBody from'./ChatContentBody';import{ChatContext}from'../../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatContent=function ChatContent(){var _useContext=useContext(ChatContext),threads=_useContext.threads,activeThreadId=_useContext.activeThreadId;var thread=threads.find(function(_ref){var id=_ref.id;return id===activeThreadId;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpenThreadInfo=_useState2[0],setIsOpenThreadInfo=_useState2[1];return/*#__PURE__*/_jsxs(TabContent,{className:\"card-chat-content fs--1 position-relative\",children:[/*#__PURE__*/_jsxs(TabPane,{className:\"card-chat-pane active\",children:[/*#__PURE__*/_jsx(ChatContentHeader,{thread:thread,setIsOpenThreadInfo:setIsOpenThreadInfo}),/*#__PURE__*/_jsx(ChatContentBody,{thread:thread,isOpenThreadInfo:isOpenThreadInfo})]}),/*#__PURE__*/_jsx(MessageTextArea,{thread:thread})]});};export default ChatContent;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/chat/content/ChatContent.js"],"names":["React","useState","useContext","TabContent","TabPane","ChatContentHeader","MessageTextArea","ChatContentBody","ChatContext","ChatContent","threads","activeThreadId","thread","find","id","isOpenThreadInfo","setIsOpenThreadInfo"],"mappings":"sGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,UAAT,CAAqBC,OAArB,KAAoC,YAApC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAASC,WAAT,KAA4B,0BAA5B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,iBACYP,UAAU,CAACM,WAAD,CADtB,CAChBE,OADgB,aAChBA,OADgB,CACPC,cADO,aACPA,cADO,CAExB,GAAMC,CAAAA,MAAM,CAAGF,OAAO,CAACG,IAAR,CAAa,kBAAGC,CAAAA,EAAH,MAAGA,EAAH,OAAYA,CAAAA,EAAE,GAAKH,cAAnB,EAAb,CAAf,CAFwB,cAGwBV,QAAQ,CAAC,KAAD,CAHhC,wCAGjBc,gBAHiB,eAGCC,mBAHD,eAKxB,mBACE,MAAC,UAAD,EAAY,SAAS,CAAC,2CAAtB,wBACE,MAAC,OAAD,EAAS,SAAS,CAAC,uBAAnB,wBACE,KAAC,iBAAD,EAAmB,MAAM,CAAEJ,MAA3B,CAAmC,mBAAmB,CAAEI,mBAAxD,EADF,cAEE,KAAC,eAAD,EAAiB,MAAM,CAAEJ,MAAzB,CAAiC,gBAAgB,CAAEG,gBAAnD,EAFF,GADF,cAME,KAAC,eAAD,EAAiB,MAAM,CAAEH,MAAzB,EANF,GADF,CAUD,CAfD,CAiBA,cAAeH,CAAAA,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TabContent, TabPane } from 'reactstrap';\nimport ChatContentHeader from './ChatContentHeader';\nimport MessageTextArea from './MessageTextArea';\nimport ChatContentBody from './ChatContentBody';\nimport { ChatContext } from '../../../context/Context';\n\nconst ChatContent = () => {\n  const { threads, activeThreadId } = useContext(ChatContext);\n  const thread = threads.find(({ id }) => id === activeThreadId);\n  const [isOpenThreadInfo, setIsOpenThreadInfo] = useState(false);\n\n  return (\n    <TabContent className=\"card-chat-content fs--1 position-relative\">\n      <TabPane className=\"card-chat-pane active\">\n        <ChatContentHeader thread={thread} setIsOpenThreadInfo={setIsOpenThreadInfo} />\n        <ChatContentBody thread={thread} isOpenThreadInfo={isOpenThreadInfo} />\n      </TabPane>\n\n      <MessageTextArea thread={thread} />\n    </TabContent>\n  );\n};\n\nexport default ChatContent;\n"]},"metadata":{},"sourceType":"module"}