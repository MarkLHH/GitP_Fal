{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useReducer}from'react';import{ChatContext}from'../../context/Context';import{arrayReducer}from'../../reducers/arrayReducer';import{isIterableArray}from'../../helpers/utils';import users from'./../../data/people/people';import rawThreads from'./../../data/chat/threads';import rawMessages from'./../../data/chat/messages';import groups from'./../../data/chat/groups';import{jsx as _jsx}from\"react/jsx-runtime\";var ChatProvider=function ChatProvider(_ref){var children=_ref.children;var _useReducer=useReducer(arrayReducer,rawMessages),_useReducer2=_slicedToArray(_useReducer,2),messages=_useReducer2[0],messagesDispatch=_useReducer2[1];var _useReducer3=useReducer(arrayReducer,rawThreads),_useReducer4=_slicedToArray(_useReducer3,2),threads=_useReducer4[0],threadsDispatch=_useReducer4[1];var _useState=useState(32),_useState2=_slicedToArray(_useState,2),textAreaInitialHeight=_useState2[0],setTextAreaInitialHeight=_useState2[1];var _useState3=useState(threads[0].id),_useState4=_slicedToArray(_useState3,2),activeThreadId=_useState4[0],setActiveThreadId=_useState4[1];var getUser=function getUser(thread){var user={};if(isIterableArray(thread.userId)){var _groups$find=groups.find(function(_ref2){var id=_ref2.id;return id===thread.userId[0];}),name=_groups$find.name,members=_groups$find.members;user={name:name,avatarSrc:members.map(function(member){return users.find(function(_ref3){var id=_ref3.id;return id===member.userId;}).avatarSrc;})};}else{user=users.find(function(_ref4){var id=_ref4.id;return id===thread.userId;});}return user;};var value={users:users,groups:groups,threads:threads,getUser:getUser,messages:messages,activeThreadId:activeThreadId,setActiveThreadId:setActiveThreadId,threadsDispatch:threadsDispatch,messagesDispatch:messagesDispatch,textAreaInitialHeight:textAreaInitialHeight,setTextAreaInitialHeight:setTextAreaInitialHeight};return/*#__PURE__*/_jsx(ChatContext.Provider,{value:value,children:children});};export default ChatProvider;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/chat/ChatProvider.js"],"names":["React","useState","useReducer","ChatContext","arrayReducer","isIterableArray","users","rawThreads","rawMessages","groups","ChatProvider","children","messages","messagesDispatch","threads","threadsDispatch","textAreaInitialHeight","setTextAreaInitialHeight","id","activeThreadId","setActiveThreadId","getUser","thread","user","userId","find","name","members","avatarSrc","map","member","value"],"mappings":"sGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CAEA,OAASC,WAAT,KAA4B,uBAA5B,CACA,OAASC,YAAT,KAA6B,6BAA7B,CACA,OAASC,eAAT,KAAgC,qBAAhC,CAEA,MAAOC,CAAAA,KAAP,KAAkB,4BAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,C,2CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,iBACAT,UAAU,CAACE,YAAD,CAAeI,WAAf,CADV,4CAC9BI,QAD8B,iBACpBC,gBADoB,kCAEFX,UAAU,CAACE,YAAD,CAAeG,UAAf,CAFR,6CAE9BO,OAF8B,iBAErBC,eAFqB,+BAGqBd,QAAQ,CAAC,EAAD,CAH7B,wCAG9Be,qBAH8B,eAGPC,wBAHO,8BAIOhB,QAAQ,CAACa,OAAO,CAAC,CAAD,CAAP,CAAWI,EAAZ,CAJf,yCAI9BC,cAJ8B,eAIdC,iBAJc,eAMrC,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,MAAM,CAAI,CACxB,GAAIC,CAAAA,IAAI,CAAG,EAAX,CAEA,GAAIlB,eAAe,CAACiB,MAAM,CAACE,MAAR,CAAnB,CAAoC,kBACRf,MAAM,CAACgB,IAAP,CAAY,mBAAGP,CAAAA,EAAH,OAAGA,EAAH,OAAYA,CAAAA,EAAE,GAAKI,MAAM,CAACE,MAAP,CAAc,CAAd,CAAnB,EAAZ,CADQ,CAC1BE,IAD0B,cAC1BA,IAD0B,CACpBC,OADoB,cACpBA,OADoB,CAElCJ,IAAI,CAAG,CACLG,IAAI,CAAJA,IADK,CAELE,SAAS,CAAED,OAAO,CAACE,GAAR,CAAY,SAAAC,MAAM,QAAIxB,CAAAA,KAAK,CAACmB,IAAN,CAAW,mBAAGP,CAAAA,EAAH,OAAGA,EAAH,OAAYA,CAAAA,EAAE,GAAKY,MAAM,CAACN,MAA1B,EAAX,EAA6CI,SAAjD,EAAlB,CAFN,CAAP,CAID,CAND,IAMO,CACLL,IAAI,CAAGjB,KAAK,CAACmB,IAAN,CAAW,mBAAGP,CAAAA,EAAH,OAAGA,EAAH,OAAYA,CAAAA,EAAE,GAAKI,MAAM,CAACE,MAA1B,EAAX,CAAP,CACD,CAED,MAAOD,CAAAA,IAAP,CACD,CAdD,CAgBA,GAAMQ,CAAAA,KAAK,CAAG,CACZzB,KAAK,CAALA,KADY,CAEZG,MAAM,CAANA,MAFY,CAGZK,OAAO,CAAPA,OAHY,CAIZO,OAAO,CAAPA,OAJY,CAKZT,QAAQ,CAARA,QALY,CAMZO,cAAc,CAAdA,cANY,CAOZC,iBAAiB,CAAjBA,iBAPY,CAQZL,eAAe,CAAfA,eARY,CASZF,gBAAgB,CAAhBA,gBATY,CAUZG,qBAAqB,CAArBA,qBAVY,CAWZC,wBAAwB,CAAxBA,wBAXY,CAAd,CAcA,mBAAO,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEc,KAA7B,UAAqCpB,QAArC,EAAP,CACD,CArCD,CAyCA,cAAeD,CAAAA,YAAf","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChatContext } from '../../context/Context';\nimport { arrayReducer } from '../../reducers/arrayReducer';\nimport { isIterableArray } from '../../helpers/utils';\n\nimport users from './../../data/people/people';\nimport rawThreads from './../../data/chat/threads';\nimport rawMessages from './../../data/chat/messages';\nimport groups from './../../data/chat/groups';\n\nconst ChatProvider = ({ children }) => {\n  const [messages, messagesDispatch] = useReducer(arrayReducer, rawMessages);\n  const [threads, threadsDispatch] = useReducer(arrayReducer, rawThreads);\n  const [textAreaInitialHeight, setTextAreaInitialHeight] = useState(32);\n  const [activeThreadId, setActiveThreadId] = useState(threads[0].id);\n\n  const getUser = thread => {\n    let user = {};\n\n    if (isIterableArray(thread.userId)) {\n      const { name, members } = groups.find(({ id }) => id === thread.userId[0]);\n      user = {\n        name,\n        avatarSrc: members.map(member => users.find(({ id }) => id === member.userId).avatarSrc)\n      };\n    } else {\n      user = users.find(({ id }) => id === thread.userId);\n    }\n\n    return user;\n  };\n\n  const value = {\n    users,\n    groups,\n    threads,\n    getUser,\n    messages,\n    activeThreadId,\n    setActiveThreadId,\n    threadsDispatch,\n    messagesDispatch,\n    textAreaInitialHeight,\n    setTextAreaInitialHeight\n  };\n\n  return <ChatContext.Provider value={value}>{children}</ChatContext.Provider>;\n};\n\nChatProvider.propTypes = { children: PropTypes.node.isRequired };\n\nexport default ChatProvider;\n"]},"metadata":{},"sourceType":"module"}