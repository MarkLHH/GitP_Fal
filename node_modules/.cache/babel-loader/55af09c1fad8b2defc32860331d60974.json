{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/pricing/PricingCardAlt.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Flex from '../common/Flex';\nimport { isIterableArray } from '../../helpers/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PricingRowAlt = ({\n  isDisable,\n  isLast,\n  children\n}) => /*#__PURE__*/_jsxDEV(\"li\", {\n  className: classNames('py-2', {\n    'border-bottom': !isLast,\n    'text-300': isDisable\n  }),\n  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: \"check\",\n    transform: \"shrink-2\",\n    className: classNames({\n      'text-primary': !isDisable\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), ' ', children]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c = PricingRowAlt;\nPricingRowAlt.propTypes = {\n  isDisable: PropTypes.bool,\n  isLast: PropTypes.bool,\n  children: PropTypes.node\n};\n\nconst PricingCardAlt = ({\n  type,\n  price,\n  image,\n  features,\n  button,\n  isYearly\n}) => {\n  const plan = isYearly ? 'year' : 'month';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border rounded-soft overflow-hidden mb-3 mb-md-0\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      justify: \"between\",\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-weight-light fs-5 mb-0 text-primary\",\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-weight-light mt-0 text-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"sup\", {\n            className: \"fs-1\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fs-3\",\n            children: price[plan]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fs--2 mt-1\",\n            children: [\"/ \", plan]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pr-3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          width: \"70\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled\",\n        children: isIterableArray(features) && features.map((feature, index) => /*#__PURE__*/_jsxDEV(PricingRowAlt, {\n          isDisable: feature.isDisable,\n          isLast: features.length === index + 1,\n          children: feature.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: button.color,\n        block: true,\n        children: button.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = PricingCardAlt;\nPricingCardAlt.propTypes = {\n  type: PropTypes.string.isRequired,\n  price: PropTypes.object.isRequired,\n  isYearly: PropTypes.bool.isRequired,\n  image: PropTypes.string.isRequired,\n  features: PropTypes.array.isRequired,\n  button: PropTypes.object.isRequired\n};\nexport default PricingCardAlt;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PricingRowAlt\");\n$RefreshReg$(_c2, \"PricingCardAlt\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/pricing/PricingCardAlt.js"],"names":["React","PropTypes","Button","classNames","FontAwesomeIcon","Flex","isIterableArray","PricingRowAlt","isDisable","isLast","children","propTypes","bool","node","PricingCardAlt","type","price","image","features","button","isYearly","plan","map","feature","index","length","title","color","text","string","isRequired","object","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAD,kBACpB;AAAI,EAAA,SAAS,EAAEP,UAAU,CAAC,MAAD,EAAS;AAAE,qBAAiB,CAACM,MAApB;AAA4B,gBAAYD;AAAxC,GAAT,CAAzB;AAAA,0BACE,QAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,OAAtB;AAA8B,IAAA,SAAS,EAAC,UAAxC;AAAmD,IAAA,SAAS,EAAEL,UAAU,CAAC;AAAE,sBAAgB,CAACK;AAAnB,KAAD;AAAxE;AAAA;AAAA;AAAA;AAAA,UADF,EAC+G,GAD/G,EAEGE,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,a;AAONA,aAAa,CAACI,SAAd,GAA0B;AACxBH,EAAAA,SAAS,EAAEP,SAAS,CAACW,IADG;AAExBH,EAAAA,MAAM,EAAER,SAAS,CAACW,IAFM;AAGxBF,EAAAA,QAAQ,EAAET,SAAS,CAACY;AAHI,CAA1B;;AAMA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA,MAAhC;AAAwCC,EAAAA;AAAxC,CAAD,KAAwD;AAC7E,QAAMC,IAAI,GAAGD,QAAQ,GAAG,MAAH,GAAY,OAAjC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAC,SAA7B;AAAuC,MAAA,SAAS,EAAC,KAAjD;AAAA,8BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,0CAAd;AAAA,oBAA0DL;AAA1D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,qCAAd;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,sBAAwBC,KAAK,CAACK,IAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,6BAAgCA,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEJ,KAAV;AAAiB,UAAA,KAAK,EAAC,IAAvB;AAA4B,UAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACGX,eAAe,CAACY,QAAD,CAAf,IACCA,QAAQ,CAACI,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACX,QAAC,aAAD;AAAe,UAAA,SAAS,EAAED,OAAO,CAACf,SAAlC;AAAyD,UAAA,MAAM,EAAEU,QAAQ,CAACO,MAAT,KAAoBD,KAAK,GAAG,CAA7F;AAAA,oBACGD,OAAO,CAACG;AADX,WAAkDF,KAAlD;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEL,MAAM,CAACQ,KAAtB;AAA6B,QAAA,KAAK,MAAlC;AAAA,kBACGR,MAAM,CAACS;AADV;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAjCD;;MAAMd,c;AAmCNA,cAAc,CAACH,SAAf,GAA2B;AACzBI,EAAAA,IAAI,EAAEd,SAAS,CAAC4B,MAAV,CAAiBC,UADE;AAEzBd,EAAAA,KAAK,EAAEf,SAAS,CAAC8B,MAAV,CAAiBD,UAFC;AAGzBV,EAAAA,QAAQ,EAAEnB,SAAS,CAACW,IAAV,CAAekB,UAHA;AAIzBb,EAAAA,KAAK,EAAEhB,SAAS,CAAC4B,MAAV,CAAiBC,UAJC;AAKzBZ,EAAAA,QAAQ,EAAEjB,SAAS,CAAC+B,KAAV,CAAgBF,UALD;AAMzBX,EAAAA,MAAM,EAAElB,SAAS,CAAC8B,MAAV,CAAiBD;AANA,CAA3B;AASA,eAAehB,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Flex from '../common/Flex';\nimport { isIterableArray } from '../../helpers/utils';\n\nconst PricingRowAlt = ({ isDisable, isLast, children }) => (\n  <li className={classNames('py-2', { 'border-bottom': !isLast, 'text-300': isDisable })}>\n    <FontAwesomeIcon icon=\"check\" transform=\"shrink-2\" className={classNames({ 'text-primary': !isDisable })} />{' '}\n    {children}\n  </li>\n);\n\nPricingRowAlt.propTypes = {\n  isDisable: PropTypes.bool,\n  isLast: PropTypes.bool,\n  children: PropTypes.node\n};\n\nconst PricingCardAlt = ({ type, price, image, features, button, isYearly }) => {\n  const plan = isYearly ? 'year' : 'month';\n\n  return (\n    <div className=\"border rounded-soft overflow-hidden mb-3 mb-md-0\">\n      <Flex align=\"center\" justify=\"between\" className=\"p-4\">\n        <div>\n          <h3 className=\"font-weight-light fs-5 mb-0 text-primary\">{type}</h3>\n          <h2 className=\"font-weight-light mt-0 text-primary\">\n            <sup className=\"fs-1\">$</sup>\n            <span className=\"fs-3\">{price[plan]}</span>\n            <span className=\"fs--2 mt-1\">/ {plan}</span>\n          </h2>\n        </div>\n        <div className=\"pr-3\">\n          <img src={image} width=\"70\" alt=\"\" />\n        </div>\n      </Flex>\n      <div className=\"p-4 bg-light\">\n        <ul className=\"list-unstyled\">\n          {isIterableArray(features) &&\n            features.map((feature, index) => (\n              <PricingRowAlt isDisable={feature.isDisable} key={index} isLast={features.length === index + 1}>\n                {feature.title}\n              </PricingRowAlt>\n            ))}\n        </ul>\n        <Button color={button.color} block>\n          {button.text}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nPricingCardAlt.propTypes = {\n  type: PropTypes.string.isRequired,\n  price: PropTypes.object.isRequired,\n  isYearly: PropTypes.bool.isRequired,\n  image: PropTypes.string.isRequired,\n  features: PropTypes.array.isRequired,\n  button: PropTypes.object.isRequired\n};\n\nexport default PricingCardAlt;\n"]},"metadata":{},"sourceType":"module"}