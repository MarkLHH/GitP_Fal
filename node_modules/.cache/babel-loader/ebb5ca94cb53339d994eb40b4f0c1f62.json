{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/chat/content/ChatContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { TabContent, TabPane } from 'reactstrap';\nimport ChatContentHeader from './ChatContentHeader';\nimport MessageTextArea from './MessageTextArea';\nimport ChatContentBody from './ChatContentBody';\nimport { ChatContext } from '../../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatContent = () => {\n  _s();\n\n  const {\n    threads,\n    activeThreadId\n  } = useContext(ChatContext);\n  const thread = threads.find(({\n    id\n  }) => id === activeThreadId);\n  const [isOpenThreadInfo, setIsOpenThreadInfo] = useState(false);\n  return /*#__PURE__*/_jsxDEV(TabContent, {\n    className: \"card-chat-content fs--1 position-relative\",\n    children: [/*#__PURE__*/_jsxDEV(TabPane, {\n      className: \"card-chat-pane active\",\n      children: [/*#__PURE__*/_jsxDEV(ChatContentHeader, {\n        thread: thread,\n        setIsOpenThreadInfo: setIsOpenThreadInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatContentBody, {\n        thread: thread,\n        isOpenThreadInfo: isOpenThreadInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageTextArea, {\n      thread: thread\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatContent, \"qbLJUVu4j3WHRkZ+Fs49/0aZllA=\");\n\n_c = ChatContent;\nexport default ChatContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContent\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/chat/content/ChatContent.js"],"names":["React","useState","useContext","TabContent","TabPane","ChatContentHeader","MessageTextArea","ChatContentBody","ChatContext","ChatContent","threads","activeThreadId","thread","find","id","isOpenThreadInfo","setIsOpenThreadInfo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,YAApC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA8BT,UAAU,CAACM,WAAD,CAA9C;AACA,QAAMI,MAAM,GAAGF,OAAO,CAACG,IAAR,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKH,cAAhC,CAAf;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,KAAD,CAAxD;AAEA,sBACE,QAAC,UAAD;AAAY,IAAA,SAAS,EAAC,2CAAtB;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,uBAAnB;AAAA,8BACE,QAAC,iBAAD;AAAmB,QAAA,MAAM,EAAEW,MAA3B;AAAmC,QAAA,mBAAmB,EAAEI;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,MAAM,EAAEJ,MAAzB;AAAiC,QAAA,gBAAgB,EAAEG;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,eAAD;AAAiB,MAAA,MAAM,EAAEH;AAAzB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAfD;;GAAMH,W;;KAAAA,W;AAiBN,eAAeA,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TabContent, TabPane } from 'reactstrap';\nimport ChatContentHeader from './ChatContentHeader';\nimport MessageTextArea from './MessageTextArea';\nimport ChatContentBody from './ChatContentBody';\nimport { ChatContext } from '../../../context/Context';\n\nconst ChatContent = () => {\n  const { threads, activeThreadId } = useContext(ChatContext);\n  const thread = threads.find(({ id }) => id === activeThreadId);\n  const [isOpenThreadInfo, setIsOpenThreadInfo] = useState(false);\n\n  return (\n    <TabContent className=\"card-chat-content fs--1 position-relative\">\n      <TabPane className=\"card-chat-pane active\">\n        <ChatContentHeader thread={thread} setIsOpenThreadInfo={setIsOpenThreadInfo} />\n        <ChatContentBody thread={thread} isOpenThreadInfo={isOpenThreadInfo} />\n      </TabPane>\n\n      <MessageTextArea thread={thread} />\n    </TabContent>\n  );\n};\n\nexport default ChatContent;\n"]},"metadata":{},"sourceType":"module"}