{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useContext}from'react';import{Media}from'reactstrap';import LastMessage from'./LastMessage';import Avatar from'../../common/Avatar';import Flex from'../../common/Flex';import ChatSidebarDropdownAction from'./ChatSidebarDropdownAction';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{ChatContext}from'../../../context/Context';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatThread=function ChatThread(_ref){var thread=_ref.thread;var _useContext=useContext(ChatContext),threadsDispatch=_useContext.threadsDispatch,messages=_useContext.messages,activeThreadId=_useContext.activeThreadId,setActiveThreadId=_useContext.setActiveThreadId,getUser=_useContext.getUser;var message=messages.find(function(_ref2){var id=_ref2.id;return id===thread.messagesId;});var lastMessage=message===null||message===void 0?void 0:message.content[message.content.length-1];var user=getUser(thread);return/*#__PURE__*/_jsxs(Media,{className:classNames(\"chat-contact hover-actions-trigger w-100 \",{'unread-message':!thread.read,'read-message':thread.read,active:thread.id===activeThreadId}),onClick:function onClick(){setActiveThreadId(thread.id);threadsDispatch({type:'EDIT',id:thread.id,payload:_objectSpread(_objectSpread({},thread),{},{read:true})});document.getElementsByClassName('chat-sidebar')[0].style.left='-100%';},children:[/*#__PURE__*/_jsx(Avatar,{className:user.status,src:user.avatarSrc,size:\"xl\"}),/*#__PURE__*/_jsxs(Media,{body:true,className:\"chat-contact-body ml-2 d-md-none d-lg-block\",children:[/*#__PURE__*/_jsxs(Flex,{justify:\"between\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"mb-0 chat-contact-title\",children:user.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"message-time fs--2\",children:[\" \",!!lastMessage&&lastMessage.time.day,\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"min-w-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-contact-content pr-3\",dangerouslySetInnerHTML:{__html:LastMessage(lastMessage,thread)}}),/*#__PURE__*/_jsx(ChatSidebarDropdownAction,{}),/*#__PURE__*/_jsx(\"div\",{className:\"position-absolute b-0 r-0 hover-hide\",children:!!(lastMessage===null||lastMessage===void 0?void 0:lastMessage.status)&&/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:classNames({check:lastMessage.status==='seen'||lastMessage.status==='sent','check-double':lastMessage.status==='delivered'}),transform:\"shrink-5 down-4\",className:classNames({'text-success':lastMessage.status==='seen','text-400':lastMessage.status==='delivered'||lastMessage.status==='sent'})})})]})]})]});};export default ChatThread;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/chat/sidebar/ChatThread.js"],"names":["React","useContext","Media","LastMessage","Avatar","Flex","ChatSidebarDropdownAction","FontAwesomeIcon","ChatContext","classNames","ChatThread","thread","threadsDispatch","messages","activeThreadId","setActiveThreadId","getUser","message","find","id","messagesId","lastMessage","content","length","user","read","active","type","payload","document","getElementsByClassName","style","left","status","avatarSrc","name","time","day","__html","check"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Media } from 'reactstrap';\nimport LastMessage from './LastMessage';\nimport Avatar from '../../common/Avatar';\nimport Flex from '../../common/Flex';\nimport ChatSidebarDropdownAction from './ChatSidebarDropdownAction';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ChatContext } from '../../../context/Context';\nimport classNames from 'classnames';\n\nconst ChatThread = ({ thread }) => {\n  const { threadsDispatch, messages, activeThreadId, setActiveThreadId, getUser } = useContext(ChatContext);\n  const message = messages.find(({ id }) => id === thread.messagesId);\n  const lastMessage = message?.content[message.content.length - 1];\n  const user = getUser(thread);\n\n  return (\n    <Media\n      className={classNames(`chat-contact hover-actions-trigger w-100 `, {\n        'unread-message': !thread.read,\n        'read-message': thread.read,\n        active: thread.id === activeThreadId\n      })}\n      onClick={() => {\n        setActiveThreadId(thread.id);\n        threadsDispatch({ type: 'EDIT', id: thread.id, payload: { ...thread, read: true } });\n\n        document.getElementsByClassName('chat-sidebar')[0].style.left = '-100%';\n      }}\n    >\n      <Avatar className={user.status} src={user.avatarSrc} size=\"xl\" />\n      <Media body className=\"chat-contact-body ml-2 d-md-none d-lg-block\">\n        <Flex justify=\"between\">\n          <h6 className=\"mb-0 chat-contact-title\">{user.name}</h6>\n          <span className=\"message-time fs--2\"> {!!lastMessage && lastMessage.time.day} </span>\n        </Flex>\n        <div className=\"min-w-0\">\n          <div\n            className=\"chat-contact-content pr-3\"\n            dangerouslySetInnerHTML={{\n              __html: LastMessage(lastMessage, thread)\n            }}\n          />\n          <ChatSidebarDropdownAction />\n          <div className=\"position-absolute b-0 r-0 hover-hide\">\n            {!!lastMessage?.status && (\n              <FontAwesomeIcon\n                icon={classNames({\n                  check: lastMessage.status === 'seen' || lastMessage.status === 'sent',\n                  'check-double': lastMessage.status === 'delivered'\n                })}\n                transform=\"shrink-5 down-4\"\n                className={classNames({\n                  'text-success': lastMessage.status === 'seen',\n                  'text-400': lastMessage.status === 'delivered' || lastMessage.status === 'sent'\n                })}\n              />\n            )}\n          </div>\n        </div>\n      </Media>\n    </Media>\n  );\n};\n\nChatThread.propTypes = {\n  thread: PropTypes.object.isRequired\n};\n\nexport default ChatThread;\n"]},"metadata":{},"sourceType":"module"}