{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{CustomInput,FormGroup,Label}from'reactstrap';import Loader from'./Loader';import{isIterableArray}from'../../helpers/utils';import createMarkup from'../../helpers/createMarkup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormGroupSelect=function FormGroupSelect(_ref){var loading=_ref.loading,id=_ref.id,label=_ref.label,options=_ref.options,value=_ref.value,onChange=_ref.onChange,rest=_objectWithoutProperties(_ref,[\"loading\",\"id\",\"label\",\"options\",\"value\",\"onChange\"]);return/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:id,children:label}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsx(CustomInput,_objectSpread(_objectSpread({type:\"select\",id:id,value:value,onChange:onChange},rest),{},{children:isIterableArray(options)&&options.map(function(_ref2,index){var value=_ref2.value,label=_ref2.label;return/*#__PURE__*/_jsx(\"option\",{value:value,dangerouslySetInnerHTML:createMarkup(label)},index);})}))]});};export default FormGroupSelect;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/FormGroupSelect.js"],"names":["React","CustomInput","FormGroup","Label","Loader","isIterableArray","createMarkup","FormGroupSelect","loading","id","label","options","value","onChange","rest","map","index"],"mappings":"+NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,KAAjC,KAA8C,YAA9C,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,eAAT,KAAgC,qBAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAA+D,IAA5DC,CAAAA,OAA4D,MAA5DA,OAA4D,CAAnDC,EAAmD,MAAnDA,EAAmD,CAA/CC,KAA+C,MAA/CA,KAA+C,CAAxCC,OAAwC,MAAxCA,OAAwC,CAA/BC,KAA+B,MAA/BA,KAA+B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAXC,IAAW,sFACrF,mBACE,MAAC,SAAD,yBACE,KAAC,KAAD,EAAO,GAAG,CAAEL,EAAZ,UAAiBC,KAAjB,EADF,CAEGF,OAAO,cACN,KAAC,MAAD,IADM,cAGN,KAAC,WAAD,8BAAa,IAAI,CAAC,QAAlB,CAA2B,EAAE,CAAEC,EAA/B,CAAmC,KAAK,CAAEG,KAA1C,CAAiD,QAAQ,CAAEC,QAA3D,EAAyEC,IAAzE,eACGT,eAAe,CAACM,OAAD,CAAf,EACCA,OAAO,CAACI,GAAR,CAAY,eAAmBC,KAAnB,KAAGJ,CAAAA,KAAH,OAAGA,KAAH,CAAUF,KAAV,OAAUA,KAAV,oBACV,eAAQ,KAAK,CAAEE,KAAf,CAAkC,uBAAuB,CAAEN,YAAY,CAACI,KAAD,CAAvE,EAA2BM,KAA3B,CADU,EAAZ,CAFJ,GALJ,GADF,CAeD,CAhBD,CA2BA,cAAeT,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CustomInput, FormGroup, Label } from 'reactstrap';\nimport Loader from './Loader';\nimport { isIterableArray } from '../../helpers/utils';\nimport createMarkup from '../../helpers/createMarkup';\n\nconst FormGroupSelect = ({ loading, id, label, options, value, onChange, ...rest }) => {\n  return (\n    <FormGroup>\n      <Label for={id}>{label}</Label>\n      {loading ? (\n        <Loader />\n      ) : (\n        <CustomInput type=\"select\" id={id} value={value} onChange={onChange} {...rest}>\n          {isIterableArray(options) &&\n            options.map(({ value, label }, index) => (\n              <option value={value} key={index} dangerouslySetInnerHTML={createMarkup(label)} />\n            ))}\n        </CustomInput>\n      )}\n    </FormGroup>\n  );\n};\n\nFormGroupSelect.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default FormGroupSelect;\n"]},"metadata":{},"sourceType":"module"}