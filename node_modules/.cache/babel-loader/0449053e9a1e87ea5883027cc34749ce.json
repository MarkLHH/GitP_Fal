{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{getGrays,getPosition,isIterableArray,numberFormatter}from'../../helpers/utils';import MarketShareItem from'./MarketShareItem';import{Card,CardBody,Col,Row}from'reactstrap';import echarts from'echarts/lib/echarts';import ReactEchartsCore from'echarts-for-react/lib/core';import'echarts/lib/chart/pie';import{useContext}from'react';import AppContext from'../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getOption=function getOption(data,isDark){var grays=getGrays(isDark);return{color:data.map(function(d){return d.color;}),tooltip:{trigger:'item',padding:[7,10],backgroundColor:grays.white,textStyle:{color:grays.black},transitionDuration:0,borderColor:grays['300'],borderWidth:1,formatter:function formatter(params){return\"<strong>\".concat(params.data.name,\":</strong> \").concat(params.percent,\"%\");}},position:function position(pos,params,dom,rect,size){return getPosition(pos,params,dom,rect,size);},legend:{show:false},series:[{type:'pie',radius:['100%','87%'],avoidLabelOverlap:false,hoverAnimation:false,itemStyle:{borderWidth:2,borderColor:isDark?'#0E1C2F':'#fff'},labelLine:{normal:{show:false}},data:data}]};};var MarketShare=function MarketShare(_ref){var data=_ref.data;var _useContext=useContext(AppContext),isDark=_useContext.isDark;var totalShare=data.map(function(d){return d.value;}).reduce(function(total,currentValue){return total+currentValue;},0);return/*#__PURE__*/_jsx(Card,{className:\"h-md-100\",children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Row,{noGutters:true,className:\"h-100 justify-content-between\",children:[/*#__PURE__*/_jsxs(Col,{xs:5,sm:6,className:\"col-xxl pr-2\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"mt-1\",children:\"Market Share\"}),/*#__PURE__*/_jsx(\"div\",{className:\"fs--2 mt-3\",children:isIterableArray(data)&&data.map(function(_ref2){var id=_ref2.id,rest=_objectWithoutProperties(_ref2,[\"id\"]);return/*#__PURE__*/_createElement(MarketShareItem,_objectSpread(_objectSpread({},rest),{},{totalShare:totalShare,key:id}));})})]}),/*#__PURE__*/_jsx(Col,{xs:\"auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(ReactEchartsCore,{echarts:echarts,option:getOption(data,isDark),style:{width:'6.625rem',height:'6.625rem'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute-centered font-weight-medium text-dark fs-2\",children:numberFormatter(totalShare,0)})]})})]})})});};export default MarketShare;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/dashboard-alt/MarketShare.js"],"names":["React","getGrays","getPosition","isIterableArray","numberFormatter","MarketShareItem","Card","CardBody","Col","Row","echarts","ReactEchartsCore","useContext","AppContext","getOption","data","isDark","grays","color","map","d","tooltip","trigger","padding","backgroundColor","white","textStyle","black","transitionDuration","borderColor","borderWidth","formatter","params","name","percent","position","pos","dom","rect","size","legend","show","series","type","radius","avoidLabelOverlap","hoverAnimation","itemStyle","labelLine","normal","MarketShare","totalShare","value","reduce","total","currentValue","id","rest","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getGrays, getPosition, isIterableArray, numberFormatter } from '../../helpers/utils';\nimport MarketShareItem from './MarketShareItem';\nimport { Card, CardBody, Col, Row } from 'reactstrap';\nimport echarts from 'echarts/lib/echarts';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport 'echarts/lib/chart/pie';\nimport { useContext } from 'react';\nimport AppContext from '../../context/Context';\n\nconst getOption = (data, isDark) => {\n  const grays = getGrays(isDark);\n  return {\n    color: data.map(d => d.color),\n    tooltip: {\n      trigger: 'item',\n      padding: [7, 10],\n      backgroundColor: grays.white,\n      textStyle: { color: grays.black },\n      transitionDuration: 0,\n      borderColor: grays['300'],\n      borderWidth: 1,\n      formatter: function(params) {\n        return `<strong>${params.data.name}:</strong> ${params.percent}%`;\n      }\n    },\n    position(pos, params, dom, rect, size) {\n      return getPosition(pos, params, dom, rect, size);\n    },\n    legend: { show: false },\n    series: [\n      {\n        type: 'pie',\n        radius: ['100%', '87%'],\n        avoidLabelOverlap: false,\n        hoverAnimation: false,\n        itemStyle: {\n          borderWidth: 2,\n          borderColor: isDark ? '#0E1C2F' : '#fff'\n        },\n        labelLine: { normal: { show: false } },\n        data: data\n      }\n    ]\n  };\n};\n\nconst MarketShare = ({ data }) => {\n  const { isDark } = useContext(AppContext);\n  const totalShare = data.map(d => d.value).reduce((total, currentValue) => total + currentValue, 0);\n  return (\n    <Card className=\"h-md-100\">\n      <CardBody>\n        <Row noGutters className=\"h-100 justify-content-between\">\n          <Col xs={5} sm={6} className=\"col-xxl pr-2\">\n            <h6 className=\"mt-1\">Market Share</h6>\n            <div className=\"fs--2 mt-3\">\n              {isIterableArray(data) &&\n                data.map(({ id, ...rest }) => <MarketShareItem {...rest} totalShare={totalShare} key={id} />)}\n            </div>\n          </Col>\n          <Col xs=\"auto\">\n            <div className=\"position-relative\">\n              <ReactEchartsCore\n                echarts={echarts}\n                option={getOption(data, isDark)}\n                style={{ width: '6.625rem', height: '6.625rem' }}\n              />\n              <div className=\"absolute-centered font-weight-medium text-dark fs-2\">\n                {numberFormatter(totalShare, 0)}\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nMarketShare.propTypes = { data: PropTypes.array.isRequired };\n\nexport default MarketShare;\n"]},"metadata":{},"sourceType":"module"}