{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/common/FalconDropzone.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport uuid from 'uuid/v1';\nimport classNames from 'classnames';\nimport { isIterableArray } from '../../helpers/utils';\nimport { DropdownItem, DropdownMenu, DropdownToggle, Media, UncontrolledDropdown } from 'reactstrap';\nimport Flex from './Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cloudUpload from \"../../assets/img/icons/cloud-upload.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getSize = size => {\n  if (size < 1024) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), \" Byte\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  } else if (size < 1024 * 1024) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: (size / 1024).toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), \" KB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: (size / (1024 * 1024)).toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \" MB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst FalconDropzone = ({\n  placeholder,\n  className,\n  onChange,\n  files,\n  preview,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n    onDrop: acceptedFiles => {\n      const stringFiles = [];\n\n      if (!!acceptedFiles.length) {\n        acceptedFiles.map(file => {\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n\n          reader.onload = () => {\n            stringFiles.push({\n              id: uuid(),\n              base64: reader.result,\n              size: file.size,\n              path: file.path,\n              type: file.type\n            });\n            onChange([...stringFiles]);\n          };\n\n          return true;\n        });\n      }\n    },\n    children: ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: classNames('p-3 border-dashed border-2x border-300 bg-light rounded-soft text-center cursor-pointer', className)\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps(),\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this), preview && isIterableArray(files) && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-top mt-3\",\n    children: files.map(({\n      id,\n      path,\n      base64,\n      size\n    }) => /*#__PURE__*/_jsxDEV(Media, {\n      className: \"align-items-center py-3 border-bottom btn-reveal-trigger\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img-fluid\",\n        width: 38,\n        src: base64,\n        alt: path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Media, {\n        body: true,\n        tag: Flex,\n        justify: \"between\",\n        align: \"center\",\n        className: \"ml-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            \"data-dz-name\": \"\",\n            children: path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            className: \"position-relative\",\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0 fs--1 text-400 line-height-1\",\n              children: getSize(size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n          className: \"text-sans-serif\",\n          children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n            color: \"link\",\n            size: \"sm\",\n            className: \"text-600 btn-reveal\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"ellipsis-h\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            className: \"border py-0\",\n            right: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white py-2\",\n              children: /*#__PURE__*/_jsxDEV(DropdownItem, {\n                className: \"text-danger\",\n                onClick: () => onChange(files.filter(file => file.id !== id)),\n                children: \"Remove File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this);\n\n_c = FalconDropzone;\nFalconDropzone.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  files: PropTypes.array,\n  preview: PropTypes.bool,\n  isMulti: PropTypes.bool\n};\nFalconDropzone.defaultProps = {\n  placeholder: /*#__PURE__*/_jsxDEV(\"img\", {\n    src: cloudUpload,\n    alt: \"\",\n    width: 25,\n    className: \"mr-2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 16\n  }, this),\n  files: [],\n  preview: false\n};\nexport default FalconDropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"FalconDropzone\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/FalconDropzone.js"],"names":["React","Fragment","PropTypes","Dropzone","uuid","classNames","isIterableArray","DropdownItem","DropdownMenu","DropdownToggle","Media","UncontrolledDropdown","Flex","FontAwesomeIcon","getSize","size","toFixed","FalconDropzone","placeholder","className","onChange","files","preview","rest","acceptedFiles","stringFiles","length","map","file","reader","FileReader","readAsDataURL","onload","push","id","base64","result","path","type","getRootProps","getInputProps","filter","propTypes","func","isRequired","oneOfType","string","node","array","bool","isMulti","defaultProps","cloudUpload"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport uuid from 'uuid/v1';\nimport classNames from 'classnames';\nimport { isIterableArray } from '../../helpers/utils';\nimport { DropdownItem, DropdownMenu, DropdownToggle, Media, UncontrolledDropdown } from 'reactstrap';\nimport Flex from './Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport cloudUpload from '../../assets/img/icons/cloud-upload.svg';\n\nconst getSize = size => {\n  if (size < 1024) {\n    return (\n      <Fragment>\n        <strong>{size}</strong> Byte\n      </Fragment>\n    );\n  } else if (size < 1024 * 1024) {\n    return (\n      <Fragment>\n        <strong>{(size / 1024).toFixed(2)}</strong> KB\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <strong>{(size / (1024 * 1024)).toFixed(2)}</strong> MB\n      </Fragment>\n    );\n  }\n};\n\nconst FalconDropzone = ({ placeholder, className, onChange, files, preview, ...rest }) => (\n  <Fragment>\n    <Dropzone\n      onDrop={acceptedFiles => {\n        const stringFiles = [];\n        if (!!acceptedFiles.length) {\n          acceptedFiles.map(file => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n              stringFiles.push({\n                id: uuid(),\n                base64: reader.result,\n                size: file.size,\n                path: file.path,\n                type: file.type\n              });\n              onChange([...stringFiles]);\n            };\n            return true;\n          });\n        }\n      }}\n    >\n      {({ getRootProps, getInputProps }) => (\n        <div\n          {...getRootProps({\n            className: classNames(\n              'p-3 border-dashed border-2x border-300 bg-light rounded-soft text-center cursor-pointer',\n              className\n            )\n          })}\n        >\n          <input {...{ ...getInputProps(), ...rest }} />\n          {placeholder}\n        </div>\n      )}\n    </Dropzone>\n    {preview && isIterableArray(files) && (\n      <div className=\"border-top mt-3\">\n        {files.map(({ id, path, base64, size }) => (\n          <Media className=\"align-items-center py-3 border-bottom btn-reveal-trigger\" key={id}>\n            <img className=\"img-fluid\" width={38} src={base64} alt={path} />\n            <Media body tag={Flex} justify=\"between\" align=\"center\" className=\"ml-3\">\n              <div>\n                <h6 data-dz-name=\"\">{path}</h6>\n                <Flex className=\"position-relative\" align=\"center\">\n                  <p className=\"mb-0 fs--1 text-400 line-height-1\">{getSize(size)}</p>\n                </Flex>\n              </div>\n              <UncontrolledDropdown className=\"text-sans-serif\">\n                <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal\">\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\n                </DropdownToggle>\n                <DropdownMenu className=\"border py-0\" right>\n                  <div className=\"bg-white py-2\">\n                    <DropdownItem\n                      className=\"text-danger\"\n                      onClick={() => onChange(files.filter(file => file.id !== id))}\n                    >\n                      Remove File\n                    </DropdownItem>\n                  </div>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Media>\n          </Media>\n        ))}\n      </div>\n    )}\n  </Fragment>\n);\n\nFalconDropzone.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  files: PropTypes.array,\n  preview: PropTypes.bool,\n  isMulti: PropTypes.bool\n};\n\nFalconDropzone.defaultProps = {\n  placeholder: <img src={cloudUpload} alt=\"\" width={25} className=\"mr-2\" />,\n  files: [],\n  preview: false\n};\n\nexport default FalconDropzone;\n"]},"metadata":{},"sourceType":"module"}