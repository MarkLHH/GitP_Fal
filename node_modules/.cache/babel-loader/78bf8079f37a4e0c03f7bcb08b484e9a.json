{"ast":null,"code":"import React,{Fragment}from'react';import{Button,Card,CardBody}from'reactstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import PageHeader from'../common/PageHeader';import FalconCardHeader from'../common/FalconCardHeader';import FalconEditor from'../common/FalconEditor';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var horizontalNavCode=\"<Nav>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Link</NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Link</NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Another Link</NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink disabled href=\\\"#\\\">\\n      Disabled\\n    </NavLink>\\n  </NavItem>\\n</Nav>\";var verticalNavCode=\"<Nav vertical>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Link</NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Link</NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Another Link</NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink disabled href=\\\"#\\\">\\n      Disabled\\n    </NavLink>\\n  </NavItem>\\n</Nav>\";var pillsNavCode=\"<Nav pills>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\" active>\\n      Active\\n    </NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Link</NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Link</NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink disabled href=\\\"#\\\">\\n      Disabled\\n    </NavLink>\\n  </NavItem>\\n</Nav>\";var fillNavCode=\"<Nav pills fill>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\" active>\\n      Active\\n    </NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Longer nav Link</NavLink>\\n  </NavItem>\\n  <NavItem>\\n    <NavLink href=\\\"#\\\">Link</NavLink>\\n  </NavItem>\\n</Nav>\";var navProperties=\"Nav.propTypes = {\\n  tabs: PropTypes.bool,\\n  pills: PropTypes.bool,\\n  card: PropTypes.bool,\\n  justified: PropTypes.bool,\\n  fill: PropTypes.bool,\\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\\n  horizontal: PropTypes.string,\\n  navbar: PropTypes.bool,\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\\n  // pass in custom element to use\\n}\";var navItemProperties=\"NavItem.propTypes = {\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  active: PropTypes.bool,\\n  // pass in custom element to use\\n}\";var navLinkProperties=\"NavLink.propTypes = {\\n  disabled: PropTypes.bool,\\n  active: PropTypes.bool,\\n  // pass in custom element to use\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  // ref will only get you a reference to the NavLink component, use innerRef to get a reference to the DOM element (for things like focus management).\\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\\n}\";var Navs=function Navs(){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Navs\",description:\"Documentation and examples of how to use Bootstrap\\u2019s included navigation components.\",className:\"mb-3\",children:/*#__PURE__*/_jsxs(Button,{tag:\"a\",href:\"https://reactstrap.github.io/components/buttons\",target:\"_blank\",color:\"link\",size:\"sm\",className:\"pl-0\",children:[\"Navs on reactstrap\",/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"chevron-right\",className:\"ml-1 fs--2\"})]})}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Horizontal\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:horizontalNavCode})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Nav Properties\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:navProperties,hidePreview:true})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"NavItem Properties\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:navItemProperties,hidePreview:true})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"NavLink Properties\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:navLinkProperties,hidePreview:true})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Vertical\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:verticalNavCode})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Pills\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:pillsNavCode})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Fill and Justify\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:fillNavCode})})]})]});};export default Navs;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/bootstrap-components/Navs.js"],"names":["React","Fragment","Button","Card","CardBody","FontAwesomeIcon","PageHeader","FalconCardHeader","FalconEditor","horizontalNavCode","verticalNavCode","pillsNavCode","fillNavCode","navProperties","navItemProperties","navLinkProperties","Navs"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Button, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport FalconEditor from '../common/FalconEditor';\n\nconst horizontalNavCode = `<Nav>\n  <NavItem>\n    <NavLink href=\"#\">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href=\"#\">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href=\"#\">Another Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink disabled href=\"#\">\n      Disabled\n    </NavLink>\n  </NavItem>\n</Nav>`;\nconst verticalNavCode = `<Nav vertical>\n  <NavItem>\n    <NavLink href=\"#\">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href=\"#\">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href=\"#\">Another Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink disabled href=\"#\">\n      Disabled\n    </NavLink>\n  </NavItem>\n</Nav>`;\nconst pillsNavCode = `<Nav pills>\n  <NavItem>\n    <NavLink href=\"#\" active>\n      Active\n    </NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href=\"#\">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href=\"#\">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink disabled href=\"#\">\n      Disabled\n    </NavLink>\n  </NavItem>\n</Nav>`;\n\nconst fillNavCode = `<Nav pills fill>\n  <NavItem>\n    <NavLink href=\"#\" active>\n      Active\n    </NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href=\"#\">Longer nav Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href=\"#\">Link</NavLink>\n  </NavItem>\n</Nav>`;\n\nconst navProperties = `Nav.propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  card: PropTypes.bool,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  navbar: PropTypes.bool,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  // pass in custom element to use\n}`;\nconst navItemProperties = `NavItem.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  active: PropTypes.bool,\n  // pass in custom element to use\n}`;\nconst navLinkProperties = `NavLink.propTypes = {\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  // pass in custom element to use\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // ref will only get you a reference to the NavLink component, use innerRef to get a reference to the DOM element (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n}`;\n\nconst Navs = () => {\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Navs\"\n        description=\"Documentation and examples of how to use Bootstrap’s included navigation components.\"\n        className=\"mb-3\"\n      >\n        <Button\n          tag=\"a\"\n          href=\"https://reactstrap.github.io/components/buttons\"\n          target=\"_blank\"\n          color=\"link\"\n          size=\"sm\"\n          className=\"pl-0\"\n        >\n          Navs on reactstrap\n          <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n        </Button>\n      </PageHeader>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title=\"Horizontal\" light={false} />\n        <CardBody className=\"bg-light\">\n          <FalconEditor code={horizontalNavCode} />\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title=\"Nav Properties\" light={false} />\n        <CardBody className=\"bg-light\">\n          <FalconEditor code={navProperties} hidePreview />\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title=\"NavItem Properties\" light={false} />\n        <CardBody className=\"bg-light\">\n          <FalconEditor code={navItemProperties} hidePreview />\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title=\"NavLink Properties\" light={false} />\n        <CardBody className=\"bg-light\">\n          <FalconEditor code={navLinkProperties} hidePreview />\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title=\"Vertical\" light={false} />\n        <CardBody className=\"bg-light\">\n          <FalconEditor code={verticalNavCode} />\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title=\"Pills\" light={false} />\n        <CardBody className=\"bg-light\">\n          <FalconEditor code={pillsNavCode} />\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title=\"Fill and Justify\" light={false} />\n        <CardBody className=\"bg-light\">\n          <FalconEditor code={fillNavCode} />\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Navs;\n"]},"metadata":{},"sourceType":"module"}