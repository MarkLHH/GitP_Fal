{"ast":null,"code":"import React,{Fragment}from'react';import{Card,CardBody,CardHeader}from'reactstrap';import{isIterableArray}from'../../helpers/utils';import changeLogs from'./changeLogs';import createMarkup from'../../helpers/createMarkup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Logs=function Logs(_ref){var title=_ref.title,publish=_ref.publish,logs=_ref.logs,children=_ref.children,currentIndex=_ref.index;return/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(CardHeader,{children:[/*#__PURE__*/_jsx(\"h5\",{children:title}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:publish})]}),/*#__PURE__*/_jsxs(CardBody,{className:\"bg-light\",children:[children,isIterableArray(Object.keys(logs))&&Object.keys(logs).map(function(value,index){return value==='Migration'?/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"fs-0\",children:[value,\":\",' ',/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsxs(\"code\",{children:[\"v\",changeLogs[currentIndex+1].title.split(' - ')[0]]})}),' ',\"to\",' ',/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsxs(\"code\",{children:[\"v\",title.split(' - ')[0]]})})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"pl-3\",children:Object.entries(logs[value]).map(function(entry,i){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h6\",{children:entry[0]}),/*#__PURE__*/_jsx(\"ul\",{children:isIterableArray(entry[1])&&entry[1].map(function(mv,mi){return/*#__PURE__*/_jsx(\"li\",{dangerouslySetInnerHTML:{__html:mv}},entry[0]+i+mi);})})]},i);})})]},index):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"fs-0\",children:value}),/*#__PURE__*/_jsx(\"ul\",{className:\"pl-3\",children:logs[value].map(function(v,i){return/*#__PURE__*/_jsx(\"li\",{dangerouslySetInnerHTML:createMarkup(v)},i);})})]},index);})]})]});};Logs.defaultProps={logs:{}};export default Logs;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/changelog/Logs.js"],"names":["React","Fragment","Card","CardBody","CardHeader","isIterableArray","changeLogs","createMarkup","Logs","title","publish","logs","children","currentIndex","index","Object","keys","map","value","split","entries","entry","i","mv","mi","__html","v","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,UAAzB,KAA2C,YAA3C,CACA,OAASC,eAAT,KAAgC,qBAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,UAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,OAAV,MAAUA,OAAV,CAAmBC,IAAnB,MAAmBA,IAAnB,CAAyBC,QAAzB,MAAyBA,QAAzB,CAA0CC,YAA1C,MAAmCC,KAAnC,oBACX,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,wBACE,MAAC,UAAD,yBACE,oBAAKL,KAAL,EADF,cAEE,UAAG,SAAS,CAAC,MAAb,UAAqBC,OAArB,EAFF,GADF,cAKE,MAAC,QAAD,EAAU,SAAS,CAAC,UAApB,WACGE,QADH,CAEGP,eAAe,CAACU,MAAM,CAACC,IAAP,CAAYL,IAAZ,CAAD,CAAf,EACCI,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,GAAlB,CAAsB,SAACC,KAAD,CAAQJ,KAAR,CAAkB,CACtC,MAAOI,CAAAA,KAAK,GAAK,WAAV,cACL,MAAC,QAAD,yBACE,YAAI,SAAS,CAAC,MAAd,WACGA,KADH,KACW,GADX,cAEE,qCACE,4BAAQZ,UAAU,CAACO,YAAY,CAAG,CAAhB,CAAV,CAA6BJ,KAA7B,CAAmCU,KAAnC,CAAyC,KAAzC,EAAgD,CAAhD,CAAR,GADF,EAFF,CAIY,GAJZ,MAKK,GALL,cAME,qCACE,4BAAQV,KAAK,CAACU,KAAN,CAAY,KAAZ,EAAmB,CAAnB,CAAR,GADF,EANF,GADF,cAWE,WAAI,SAAS,CAAC,MAAd,UACGJ,MAAM,CAACK,OAAP,CAAeT,IAAI,CAACO,KAAD,CAAnB,EAA4BD,GAA5B,CAAgC,SAACI,KAAD,CAAQC,CAAR,qBAC/B,mCACE,oBAAKD,KAAK,CAAC,CAAD,CAAV,EADF,cAEE,oBACGhB,eAAe,CAACgB,KAAK,CAAC,CAAD,CAAN,CAAf,EACCA,KAAK,CAAC,CAAD,CAAL,CAASJ,GAAT,CAAa,SAACM,EAAD,CAAKC,EAAL,qBACX,WAAI,uBAAuB,CAAE,CAAEC,MAAM,CAAEF,EAAV,CAA7B,EAAkDF,KAAK,CAAC,CAAD,CAAL,CAAWC,CAAX,CAAeE,EAAjE,CADW,EAAb,CAFJ,EAFF,GAASF,CAAT,CAD+B,EAAhC,CADH,EAXF,GAAeR,KAAf,CADK,cA2BL,MAAC,QAAD,yBACE,WAAI,SAAS,CAAC,MAAd,UAAsBI,KAAtB,EADF,cAEE,WAAI,SAAS,CAAC,MAAd,UACGP,IAAI,CAACO,KAAD,CAAJ,CAAYD,GAAZ,CAAgB,SAACS,CAAD,CAAIJ,CAAJ,qBACf,WAAY,uBAAuB,CAAEf,YAAY,CAACmB,CAAD,CAAjD,EAASJ,CAAT,CADe,EAAhB,CADH,EAFF,GAAeR,KAAf,CA3BF,CAoCD,CArCD,CAHJ,GALF,GADW,EAAb,CA0DAN,IAAI,CAACmB,YAAL,CAAoB,CAAEhB,IAAI,CAAE,EAAR,CAApB,CAEA,cAAeH,CAAAA,IAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport { isIterableArray } from '../../helpers/utils';\nimport changeLogs from './changeLogs';\nimport createMarkup from '../../helpers/createMarkup';\n\nconst Logs = ({ title, publish, logs, children, index: currentIndex }) => (\n  <Card className=\"mb-3\">\n    <CardHeader>\n      <h5>{title}</h5>\n      <p className=\"mb-0\">{publish}</p>\n    </CardHeader>\n    <CardBody className=\"bg-light\">\n      {children}\n      {isIterableArray(Object.keys(logs)) &&\n        Object.keys(logs).map((value, index) => {\n          return value === 'Migration' ? (\n            <Fragment key={index}>\n              <h5 className=\"fs-0\">\n                {value}:{' '}\n                <strong>\n                  <code>v{changeLogs[currentIndex + 1].title.split(' - ')[0]}</code>\n                </strong>{' '}\n                to{' '}\n                <strong>\n                  <code>v{title.split(' - ')[0]}</code>\n                </strong>\n              </h5>\n              <ul className=\"pl-3\">\n                {Object.entries(logs[value]).map((entry, i) => (\n                  <li key={i}>\n                    <h6>{entry[0]}</h6>\n                    <ul>\n                      {isIterableArray(entry[1]) &&\n                        entry[1].map((mv, mi) => (\n                          <li dangerouslySetInnerHTML={{ __html: mv }} key={entry[0] + i + mi} />\n                        ))}\n                    </ul>\n                  </li>\n                ))}\n              </ul>\n            </Fragment>\n          ) : (\n            <Fragment key={index}>\n              <h5 className=\"fs-0\">{value}</h5>\n              <ul className=\"pl-3\">\n                {logs[value].map((v, i) => (\n                  <li key={i} dangerouslySetInnerHTML={createMarkup(v)} />\n                ))}\n              </ul>\n            </Fragment>\n          );\n        })}\n    </CardBody>\n  </Card>\n);\n\nLogs.propTypes = {\n  title: PropTypes.string.isRequired,\n  publish: PropTypes.string.isRequired,\n  logs: PropTypes.object.isRequired,\n  children: PropTypes.node\n};\n\nLogs.defaultProps = { logs: {} };\n\nexport default Logs;\n"]},"metadata":{},"sourceType":"module"}