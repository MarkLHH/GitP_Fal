{"ast":null,"code":"import React,{Fragment}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StarCount=function StarCount(_ref){var stars=_ref.stars,_ref$base=_ref.base,base=_ref$base===void 0?[1,2,3,4,5]:_ref$base;return/*#__PURE__*/_jsx(Fragment,{children:base.map(function(index){return/*#__PURE__*/_jsxs(Fragment,{children:[index<=stars&&/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"star\",className:\"text-warning\"}),stars.toString().split('.')[1]==='5'&&stars.toString().split('.')[0]===(index-1).toString()?/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"star-half-alt\",className:\"text-warning\"}):index>stars&&/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"star\",className:\"text-300\"})]},index);})});};export default StarCount;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/e-commerce/product/StarCount.js"],"names":["React","Fragment","FontAwesomeIcon","StarCount","stars","base","map","index","toString","split"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,eAAT,KAAgC,gCAAhC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAuC,IAApCC,CAAAA,KAAoC,MAApCA,KAAoC,gBAA7BC,IAA6B,CAA7BA,IAA6B,oBAAtB,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAsB,WACvD,mBACE,KAAC,QAAD,WACGA,IAAI,CAACC,GAAL,CAAS,SAAAC,KAAK,qBACb,MAAC,QAAD,YACGA,KAAK,EAAIH,KAAT,eAAkB,KAAC,eAAD,EAAiB,IAAI,CAAC,MAAtB,CAA6B,SAAS,CAAC,cAAvC,EADrB,CAEGA,KAAK,CAACI,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,IAAmC,GAAnC,EAA0CL,KAAK,CAACI,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,IAAmC,CAACF,KAAK,CAAG,CAAT,EAAYC,QAAZ,EAA7E,cACC,KAAC,eAAD,EAAiB,IAAI,CAAC,eAAtB,CAAsC,SAAS,CAAC,cAAhD,EADD,CAGCD,KAAK,CAAGH,KAAR,eAAiB,KAAC,eAAD,EAAiB,IAAI,CAAC,MAAtB,CAA6B,SAAS,CAAC,UAAvC,EALrB,GAAeG,KAAf,CADa,EAAd,CADH,EADF,CAcD,CAfD,CAmBA,cAAeJ,CAAAA,SAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst StarCount = ({ stars, base = [1, 2, 3, 4, 5] }) => {\n  return (\n    <Fragment>\n      {base.map(index => (\n        <Fragment key={index}>\n          {index <= stars && <FontAwesomeIcon icon=\"star\" className=\"text-warning\" />}\n          {stars.toString().split('.')[1] === '5' && stars.toString().split('.')[0] === (index - 1).toString() ? (\n            <FontAwesomeIcon icon=\"star-half-alt\" className=\"text-warning\" />\n          ) : (\n            index > stars && <FontAwesomeIcon icon=\"star\" className=\"text-300\" />\n          )}\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n};\n\nStarCount.propTypes = { stars: PropTypes.number.isRequired };\n\nexport default StarCount;\n"]},"metadata":{},"sourceType":"module"}