{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/common/Background.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Background = ({\n  image,\n  overlay,\n  position,\n  video,\n  className,\n  style\n}) => {\n  const bgStyle = {\n    backgroundImage: `url(${image})`,\n    ...style\n  };\n\n  if (typeof position === 'string') {\n    bgStyle.backgroundPosition = position;\n  } else if (typeof position === 'object') {\n    position.x && (bgStyle.backgroundPositionX = position.x);\n    position.y && (bgStyle.backgroundPositionY = position.y);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames('bg-holder', {\n      overlay: overlay,\n      [`overlay-${overlay}`]: typeof overlay === 'string'\n    }, className),\n    style: bgStyle,\n    children: video && /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"bg-video\",\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      playsInline: true,\n      children: video.map((src, index) => /*#__PURE__*/_jsxDEV(\"source\", {\n        src: src,\n        type: `video/${src.split('.').pop()}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Background;\nBackground.propTypes = {\n  image: PropTypes.string.isRequired,\n  overlay: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  position: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    x: PropTypes.string,\n    y: PropTypes.string\n  })]),\n  video: PropTypes.array,\n  className: PropTypes.string,\n  style: PropTypes.object\n};\nexport default Background;\n\nvar _c;\n\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/Background.js"],"names":["React","PropTypes","classNames","Background","image","overlay","position","video","className","style","bgStyle","backgroundImage","backgroundPosition","x","backgroundPositionX","y","backgroundPositionY","map","src","index","split","pop","propTypes","string","isRequired","oneOfType","bool","shape","array","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,KAA5B;AAAmCC,EAAAA,SAAnC;AAA8CC,EAAAA;AAA9C,CAAD,KAA2D;AAC5E,QAAMC,OAAO,GAAG;AAAEC,IAAAA,eAAe,EAAG,OAAMP,KAAM,GAAhC;AAAoC,OAAGK;AAAvC,GAAhB;;AACA,MAAI,OAAOH,QAAP,KAAoB,QAAxB,EAAkC;AAChCI,IAAAA,OAAO,CAACE,kBAAR,GAA6BN,QAA7B;AACD,GAFD,MAEO,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AACvCA,IAAAA,QAAQ,CAACO,CAAT,KAAeH,OAAO,CAACI,mBAAR,GAA8BR,QAAQ,CAACO,CAAtD;AACAP,IAAAA,QAAQ,CAACS,CAAT,KAAeL,OAAO,CAACM,mBAAR,GAA8BV,QAAQ,CAACS,CAAtD;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EAAEb,UAAU,CACnB,WADmB,EAEnB;AAAEG,MAAAA,OAAO,EAAEA,OAAX;AAAoB,OAAE,WAAUA,OAAQ,EAApB,GAAwB,OAAOA,OAAP,KAAmB;AAA/D,KAFmB,EAGnBG,SAHmB,CADvB;AAME,IAAA,KAAK,EAAEE,OANT;AAAA,cAQGH,KAAK,iBACJ;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,QAAQ,MAApC;AAAqC,MAAA,IAAI,MAAzC;AAA0C,MAAA,KAAK,MAA/C;AAAgD,MAAA,WAAW,MAA3D;AAAA,gBACGA,KAAK,CAACU,GAAN,CAAU,CAACC,GAAD,EAAMC,KAAN,kBACT;AAAoB,QAAA,GAAG,EAAED,GAAzB;AAA8B,QAAA,IAAI,EAAG,SAAQA,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeC,GAAf,EAAqB;AAAlE,SAAaF,KAAb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3BD;;KAAMhB,U;AA6BNA,UAAU,CAACmB,SAAX,GAAuB;AACrBlB,EAAAA,KAAK,EAAEH,SAAS,CAACsB,MAAV,CAAiBC,UADH;AAErBnB,EAAAA,OAAO,EAAEJ,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACyB,IAAX,EAAiBzB,SAAS,CAACsB,MAA3B,CAApB,CAFY;AAGrBjB,EAAAA,QAAQ,EAAEL,SAAS,CAACwB,SAAV,CAAoB,CAC5BxB,SAAS,CAACsB,MADkB,EAE5BtB,SAAS,CAAC0B,KAAV,CAAgB;AACdd,IAAAA,CAAC,EAAEZ,SAAS,CAACsB,MADC;AAEdR,IAAAA,CAAC,EAAEd,SAAS,CAACsB;AAFC,GAAhB,CAF4B,CAApB,CAHW;AAUrBhB,EAAAA,KAAK,EAAEN,SAAS,CAAC2B,KAVI;AAWrBpB,EAAAA,SAAS,EAAEP,SAAS,CAACsB,MAXA;AAYrBd,EAAAA,KAAK,EAAER,SAAS,CAAC4B;AAZI,CAAvB;AAeA,eAAe1B,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Background = ({ image, overlay, position, video, className, style }) => {\n  const bgStyle = { backgroundImage: `url(${image})`, ...style };\n  if (typeof position === 'string') {\n    bgStyle.backgroundPosition = position;\n  } else if (typeof position === 'object') {\n    position.x && (bgStyle.backgroundPositionX = position.x);\n    position.y && (bgStyle.backgroundPositionY = position.y);\n  }\n\n  return (\n    <div\n      className={classNames(\n        'bg-holder',\n        { overlay: overlay, [`overlay-${overlay}`]: typeof overlay === 'string' },\n        className\n      )}\n      style={bgStyle}\n    >\n      {video && (\n        <video className=\"bg-video\" autoPlay loop muted playsInline>\n          {video.map((src, index) => (\n            <source key={index} src={src} type={`video/${src.split('.').pop()}`} />\n          ))}\n        </video>\n      )}\n    </div>\n  );\n};\n\nBackground.propTypes = {\n  image: PropTypes.string.isRequired,\n  overlay: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  position: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      x: PropTypes.string,\n      y: PropTypes.string\n    })\n  ]),\n  video: PropTypes.array,\n  className: PropTypes.string,\n  style: PropTypes.object\n};\n\nexport default Background;\n"]},"metadata":{},"sourceType":"module"}