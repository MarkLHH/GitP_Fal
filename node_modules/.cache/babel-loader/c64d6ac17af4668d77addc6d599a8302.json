{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/chat/content/Message.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Media, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Avatar from '../../common/Avatar';\nimport FalconLightBox from '../../common/FalconLightBox';\nimport LightBoxGallery from '../../common/LightBoxGallery';\nimport Flex from '../../common/Flex';\nimport ChatMessageOptions from './ChatMessageOptions';\nimport { isIterableArray } from '../../../helpers/utils';\nimport { ChatContext } from '../../../context/Context';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Message = ({\n  message,\n  senderUserId,\n  status,\n  time,\n  isGroup\n}) => {\n  _s();\n\n  const {\n    users\n  } = useContext(ChatContext);\n  const user = users.find(({\n    id\n  }) => id === senderUserId);\n  const name = user === null || user === void 0 ? void 0 : user.name.split(' ')[0];\n  const isLeft = senderUserId !== 3;\n  return /*#__PURE__*/_jsxDEV(Media, {\n    className: classNames('p-3', {\n      'd-block': !isLeft\n    }),\n    children: [isLeft && /*#__PURE__*/_jsxDEV(Avatar, {\n      size: \"l\",\n      className: \"mr-2\",\n      src: user.avatarSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Media, {\n      body: true,\n      className: classNames({\n        'd-flex  justify-content-end': !isLeft\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames('w-xxl-75', {\n          'w-100': !isLeft\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          align: \"center\",\n          className: classNames('hover-actions-trigger', {\n            'justify-content-end': !isLeft\n          }),\n          children: [!isLeft && /*#__PURE__*/_jsxDEV(ChatMessageOptions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), isIterableArray(message === null || message === void 0 ? void 0 : message.attachment) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message chat-gallery\",\n            children: [message.text && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0\",\n              dangerouslySetInnerHTML: {\n                __html: message.text ? message.text : message\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(LightBoxGallery, {\n              images: message.attachment,\n              children: openImgIndex => /*#__PURE__*/_jsxDEV(Row, {\n                noGutters: true,\n                className: \"mx-n1\",\n                children: message.attachment.map((img, index) => {\n                  return /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 6,\n                    md: 4,\n                    className: \"px-1\",\n                    style: {\n                      minWidth: 50\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"img-fluid rounded mb-2 cursor-pointer\",\n                      src: img,\n                      alt: \"\",\n                      onClick: () => openImgIndex(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 29\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classNames('p-2 rounded-soft chat-message', {\n                'bg-200': isLeft,\n                'bg-primary text-white': !isLeft\n              }),\n              children: [(message || message.text) && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                dangerouslySetInnerHTML: {\n                  __html: message.text ? message.text : message\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), message.attachment && /*#__PURE__*/_jsxDEV(FalconLightBox, {\n                imgSrc: message.attachment,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: message.attachment,\n                  className: \"img-fluid rounded\",\n                  width: 150,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), isLeft && /*#__PURE__*/_jsxDEV(ChatMessageOptions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames('text-400 fs--2 mt-1', {\n            'text-right': !isLeft\n          }),\n          children: [isLeft && isGroup && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-weight-semi-bold mr-2\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 35\n          }, this), time.hour, !isLeft && !!message && !!status && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: classNames({\n              check: status === 'seen' || status === 'sent',\n              'check-double': status === 'delivered'\n            }),\n            transform: \"shrink-5 down-4\",\n            className: classNames('ml-2', {\n              'text-success': status === 'seen'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"0b/r/C3tEhy5o+4gtUCyuuG24YM=\");\n\n_c = Message;\nMessage.propTypes = {\n  message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  senderUserId: PropTypes.number.isRequired,\n  status: PropTypes.string,\n  time: PropTypes.object.isRequired,\n  isGroup: PropTypes.bool.isRequired\n};\nMessage.defaultProps = {\n  status: ''\n};\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/chat/content/Message.js"],"names":["React","useContext","PropTypes","Media","Row","Col","FontAwesomeIcon","Avatar","FalconLightBox","LightBoxGallery","Flex","ChatMessageOptions","isIterableArray","ChatContext","classNames","Message","message","senderUserId","status","time","isGroup","users","user","find","id","name","split","isLeft","avatarSrc","attachment","text","__html","openImgIndex","map","img","index","minWidth","hour","check","propTypes","oneOfType","string","object","number","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Media, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Avatar from '../../common/Avatar';\nimport FalconLightBox from '../../common/FalconLightBox';\nimport LightBoxGallery from '../../common/LightBoxGallery';\nimport Flex from '../../common/Flex';\nimport ChatMessageOptions from './ChatMessageOptions';\nimport { isIterableArray } from '../../../helpers/utils';\nimport { ChatContext } from '../../../context/Context';\nimport classNames from 'classnames';\n\nconst Message = ({ message, senderUserId, status, time, isGroup }) => {\n  const { users } = useContext(ChatContext);\n  const user = users.find(({ id }) => id === senderUserId);\n  const name = user?.name.split(' ')[0];\n  const isLeft = senderUserId !== 3;\n\n  return (\n    <Media className={classNames('p-3', { 'd-block': !isLeft })}>\n      {isLeft && <Avatar size=\"l\" className=\"mr-2\" src={user.avatarSrc} />}\n      <Media body className={classNames({ 'd-flex  justify-content-end': !isLeft })}>\n        <div\n          className={classNames('w-xxl-75', {\n            'w-100': !isLeft\n          })}\n        >\n          <Flex\n            align=\"center\"\n            className={classNames('hover-actions-trigger', {\n              'justify-content-end': !isLeft\n            })}\n          >\n            {!isLeft && <ChatMessageOptions />}\n            {isIterableArray(message?.attachment) ? (\n              <div className=\"chat-message chat-gallery\">\n                {message.text && (\n                  <p className=\"mb-0\" dangerouslySetInnerHTML={{ __html: message.text ? message.text : message }} />\n                )}\n                <LightBoxGallery images={message.attachment}>\n                  {openImgIndex => (\n                    <Row noGutters className=\"mx-n1\">\n                      {message.attachment.map((img, index) => {\n                        return (\n                          <Col xs={6} md={4} className=\"px-1\" style={{ minWidth: 50 }} key={index}>\n                            <img\n                              className=\"img-fluid rounded mb-2 cursor-pointer\"\n                              src={img}\n                              alt=\"\"\n                              onClick={() => openImgIndex(index)}\n                            />\n                          </Col>\n                        );\n                      })}\n                    </Row>\n                  )}\n                </LightBoxGallery>\n              </div>\n            ) : (\n              <>\n                <div\n                  className={classNames('p-2 rounded-soft chat-message', {\n                    'bg-200': isLeft,\n                    'bg-primary text-white': !isLeft\n                  })}\n                >\n                  {(message || message.text) && (\n                    <p className=\"mb-0\" dangerouslySetInnerHTML={{ __html: message.text ? message.text : message }} />\n                  )}\n                  {message.attachment && (\n                    <FalconLightBox imgSrc={message.attachment}>\n                      <img src={message.attachment} className=\"img-fluid rounded\" width={150} alt=\"\" />\n                    </FalconLightBox>\n                  )}\n                </div>\n              </>\n            )}\n            {isLeft && <ChatMessageOptions />}\n          </Flex>\n          <div\n            className={classNames('text-400 fs--2 mt-1', {\n              'text-right': !isLeft\n            })}\n          >\n            {isLeft && isGroup && <span className=\"font-weight-semi-bold mr-2\">{name}</span>}\n            {time.hour}\n            {!isLeft && !!message && !!status && (\n              <FontAwesomeIcon\n                icon={classNames({\n                  check: status === 'seen' || status === 'sent',\n                  'check-double': status === 'delivered'\n                })}\n                transform=\"shrink-5 down-4\"\n                className={classNames('ml-2', {\n                  'text-success': status === 'seen'\n                })}\n              />\n            )}\n          </div>\n        </div>\n      </Media>\n    </Media>\n  );\n};\nMessage.propTypes = {\n  message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  senderUserId: PropTypes.number.isRequired,\n  status: PropTypes.string,\n  time: PropTypes.object.isRequired,\n  isGroup: PropTypes.bool.isRequired\n};\n\nMessage.defaultProps = { status: '' };\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}