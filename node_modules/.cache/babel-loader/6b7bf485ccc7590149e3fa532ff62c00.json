{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/layouts/ContentWithAsideLayout.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentWithAsideLayout = ({\n  banner,\n  aside,\n  footer,\n  isStickyAside,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [banner, /*#__PURE__*/_jsxDEV(Row, {\n      noGutters: true,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: \"8\",\n        className: classNames('pr-lg-2', {\n          'mb-3': !isStickyAside\n        }),\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"4\",\n        className: classNames('pl-lg-2', {\n          'mb-3': !isStickyAside\n        }),\n        children: isStickyAside ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sticky-top sticky-sidebar\",\n          children: aside\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 28\n        }, this) : aside\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), footer]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContentWithAsideLayout;\nContentWithAsideLayout.propTypes = {\n  aside: PropTypes.element.isRequired,\n  banner: PropTypes.element,\n  footer: PropTypes.element,\n  isStickyAside: PropTypes.bool,\n  children: PropTypes.node\n};\nContentWithAsideLayout.defaultProps = {\n  isStickyAside: true\n};\nexport default ContentWithAsideLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentWithAsideLayout\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/layouts/ContentWithAsideLayout.js"],"names":["React","Fragment","PropTypes","classNames","Row","Col","ContentWithAsideLayout","banner","aside","footer","isStickyAside","children","propTypes","element","isRequired","bool","node","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;;;AAEA,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA,aAAzB;AAAwCC,EAAAA;AAAxC,CAAD,KAAwD;AACrF,sBACE,QAAC,QAAD;AAAA,eACGJ,MADH,eAEE,QAAC,GAAD;AAAK,MAAA,SAAS,MAAd;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,SAAS,EAAEJ,UAAU,CAAC,SAAD,EAAY;AAAE,kBAAQ,CAACO;AAAX,SAAZ,CAAjC;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,SAAS,EAAER,UAAU,CAAC,SAAD,EAAY;AAAE,kBAAQ,CAACO;AAAX,SAAZ,CAAjC;AAAA,kBACGA,aAAa,gBAAG;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,oBAA4CF;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAAH,GAA8DA;AAD9E;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAUGC,MAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMH,sB;AAiBNA,sBAAsB,CAACM,SAAvB,GAAmC;AACjCJ,EAAAA,KAAK,EAAEN,SAAS,CAACW,OAAV,CAAkBC,UADQ;AAEjCP,EAAAA,MAAM,EAAEL,SAAS,CAACW,OAFe;AAGjCJ,EAAAA,MAAM,EAAEP,SAAS,CAACW,OAHe;AAIjCH,EAAAA,aAAa,EAAER,SAAS,CAACa,IAJQ;AAKjCJ,EAAAA,QAAQ,EAAET,SAAS,CAACc;AALa,CAAnC;AAQAV,sBAAsB,CAACW,YAAvB,GAAsC;AAAEP,EAAAA,aAAa,EAAE;AAAjB,CAAtC;AAEA,eAAeJ,sBAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Row, Col } from 'reactstrap';\n\nconst ContentWithAsideLayout = ({ banner, aside, footer, isStickyAside, children }) => {\n  return (\n    <Fragment>\n      {banner}\n      <Row noGutters>\n        <Col lg=\"8\" className={classNames('pr-lg-2', { 'mb-3': !isStickyAside })}>\n          {children}\n        </Col>\n        <Col lg=\"4\" className={classNames('pl-lg-2', { 'mb-3': !isStickyAside })}>\n          {isStickyAside ? <div className=\"sticky-top sticky-sidebar\">{aside}</div> : aside}\n        </Col>\n      </Row>\n      {footer}\n    </Fragment>\n  );\n};\n\nContentWithAsideLayout.propTypes = {\n  aside: PropTypes.element.isRequired,\n  banner: PropTypes.element,\n  footer: PropTypes.element,\n  isStickyAside: PropTypes.bool,\n  children: PropTypes.node\n};\n\nContentWithAsideLayout.defaultProps = { isStickyAside: true };\n\nexport default ContentWithAsideLayout;\n"]},"metadata":{},"sourceType":"module"}