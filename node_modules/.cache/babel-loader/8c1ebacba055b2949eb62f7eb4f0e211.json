{"ast":null,"code":"import React from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Card,CardBody}from'reactstrap';import{Link}from'react-router-dom';import Background from'../common/Background';import corner1 from'../../assets/img/illustrations/corner-1.png';import corner2 from'../../assets/img/illustrations/corner-2.png';import corner3 from'../../assets/img/illustrations/corner-3.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getImage=function getImage(color){switch(color){case'warning':return corner1;case'info':return corner2;case'success':return corner3;default:return corner1;}};var getContentClassNames=function getContentClassNames(color){var contentClassNames='display-4 fs-4 mb-2 font-weight-normal text-sans-serif';if(color==='success')return contentClassNames;return\"\".concat(contentClassNames,\" text-\").concat(color);};var CardSummary=function CardSummary(_ref){var title=_ref.title,rate=_ref.rate,linkText=_ref.linkText,to=_ref.to,color=_ref.color,children=_ref.children;return/*#__PURE__*/_jsxs(Card,{className:\"mb-3 overflow-hidden\",style:{minWidth:'12rem'},children:[/*#__PURE__*/_jsx(Background,{image:getImage(color),className:\"bg-card\"}),/*#__PURE__*/_jsxs(CardBody,{className:\"position-relative\",children:[/*#__PURE__*/_jsxs(\"h6\",{children:[title,/*#__PURE__*/_jsx(\"span\",{className:\"badge badge-soft-\".concat(color,\" rounded-capsule ml-2\"),children:rate})]}),/*#__PURE__*/_jsx(\"div\",{className:getContentClassNames(color),children:children}),/*#__PURE__*/_jsxs(Link,{className:\"font-weight-semi-bold fs--1 text-nowrap\",to:to,children:[linkText,/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"angle-right\",transform:\"down-1.5\",className:\"ml-1\"})]})]})]});};CardSummary.defaultProps={linkText:'See all',to:'#!',color:'primary'};export default CardSummary;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/dashboard/CardSummary.js"],"names":["React","FontAwesomeIcon","Card","CardBody","Link","Background","corner1","corner2","corner3","getImage","color","getContentClassNames","contentClassNames","CardSummary","title","rate","linkText","to","children","minWidth","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,IAAT,CAAeC,QAAf,KAA+B,YAA/B,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6CAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6CAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6CAApB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CACxB,OAAQA,KAAR,EACE,IAAK,SAAL,CACE,MAAOJ,CAAAA,OAAP,CACF,IAAK,MAAL,CACE,MAAOC,CAAAA,OAAP,CACF,IAAK,SAAL,CACE,MAAOC,CAAAA,OAAP,CACF,QACE,MAAOF,CAAAA,OAAP,CARJ,CAUD,CAXD,CAaA,GAAMK,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAAD,KAAK,CAAI,CACpC,GAAME,CAAAA,iBAAiB,CAAG,wDAA1B,CACA,GAAIF,KAAK,GAAK,SAAd,CAAyB,MAAOE,CAAAA,iBAAP,CACzB,gBAAUA,iBAAV,kBAAoCF,KAApC,EACD,CAJD,CAMA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAoD,IAAjDC,CAAAA,KAAiD,MAAjDA,KAAiD,CAA1CC,IAA0C,MAA1CA,IAA0C,CAApCC,QAAoC,MAApCA,QAAoC,CAA1BC,EAA0B,MAA1BA,EAA0B,CAAtBP,KAAsB,MAAtBA,KAAsB,CAAfQ,QAAe,MAAfA,QAAe,CACtE,mBACE,MAAC,IAAD,EAAM,SAAS,CAAC,sBAAhB,CAAuC,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAZ,CAA9C,wBACE,KAAC,UAAD,EAAY,KAAK,CAAEV,QAAQ,CAACC,KAAD,CAA3B,CAAoC,SAAS,CAAC,SAA9C,EADF,cAEE,MAAC,QAAD,EAAU,SAAS,CAAC,mBAApB,wBACE,sBACGI,KADH,cAEE,aAAM,SAAS,4BAAsBJ,KAAtB,yBAAf,UAAoEK,IAApE,EAFF,GADF,cAKE,YAAK,SAAS,CAAEJ,oBAAoB,CAACD,KAAD,CAApC,UAA8CQ,QAA9C,EALF,cAME,MAAC,IAAD,EAAM,SAAS,CAAC,yCAAhB,CAA0D,EAAE,CAAED,EAA9D,WACGD,QADH,cAEE,KAAC,eAAD,EAAiB,IAAI,CAAC,aAAtB,CAAoC,SAAS,CAAC,UAA9C,CAAyD,SAAS,CAAC,MAAnE,EAFF,GANF,GAFF,GADF,CAgBD,CAjBD,CA4BAH,WAAW,CAACO,YAAZ,CAA2B,CACzBJ,QAAQ,CAAE,SADe,CAEzBC,EAAE,CAAE,IAFqB,CAGzBP,KAAK,CAAE,SAHkB,CAA3B,CAMA,cAAeG,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Card, CardBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Background from '../common/Background';\nimport corner1 from '../../assets/img/illustrations/corner-1.png';\nimport corner2 from '../../assets/img/illustrations/corner-2.png';\nimport corner3 from '../../assets/img/illustrations/corner-3.png';\n\nconst getImage = color => {\n  switch (color) {\n    case 'warning':\n      return corner1;\n    case 'info':\n      return corner2;\n    case 'success':\n      return corner3;\n    default:\n      return corner1;\n  }\n};\n\nconst getContentClassNames = color => {\n  const contentClassNames = 'display-4 fs-4 mb-2 font-weight-normal text-sans-serif';\n  if (color === 'success') return contentClassNames;\n  return `${contentClassNames} text-${color}`;\n};\n\nconst CardSummary = ({ title, rate, linkText, to, color, children }) => {\n  return (\n    <Card className=\"mb-3 overflow-hidden\" style={{ minWidth: '12rem' }}>\n      <Background image={getImage(color)} className=\"bg-card\" />\n      <CardBody className=\"position-relative\">\n        <h6>\n          {title}\n          <span className={`badge badge-soft-${color} rounded-capsule ml-2`}>{rate}</span>\n        </h6>\n        <div className={getContentClassNames(color)}>{children}</div>\n        <Link className=\"font-weight-semi-bold fs--1 text-nowrap\" to={to}>\n          {linkText}\n          <FontAwesomeIcon icon=\"angle-right\" transform=\"down-1.5\" className=\"ml-1\" />\n        </Link>\n      </CardBody>\n    </Card>\n  );\n};\n\nCardSummary.propTypes = {\n  title: PropTypes.string.isRequired,\n  rate: PropTypes.string.isRequired,\n  linkText: PropTypes.string,\n  to: PropTypes.string,\n  color: PropTypes.string,\n  children: PropTypes.node\n};\n\nCardSummary.defaultProps = {\n  linkText: 'See all',\n  to: '#!',\n  color: 'primary'\n};\n\nexport default CardSummary;\n"]},"metadata":{},"sourceType":"module"}