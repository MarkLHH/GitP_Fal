{"ast":null,"code":"import React,{useContext}from'react';import{ButtonGroup}from'reactstrap';import InboxActionButton from'./InboxActionButton';import{EmailContext}from'../../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmailRowHoverActions=function EmailRowHoverActions(_ref){var id=_ref.id,read=_ref.read,snooze=_ref.snooze;var _useContext=useContext(EmailContext),handleAction=_useContext.handleAction;return/*#__PURE__*/_jsxs(ButtonGroup,{size:\"sm\",className:\"hover-actions r-0 mr-3\",children:[/*#__PURE__*/_jsx(InboxActionButton,{color:\"light\",id:\"archive\".concat(id),icon:\"archive\",onClick:function onClick(){return handleAction('archive',[id]);},children:\"Archive\"}),/*#__PURE__*/_jsx(InboxActionButton,{color:\"light\",id:\"delete\".concat(id),icon:\"trash-alt\",onClick:function onClick(){return handleAction('delete',[id]);},children:\"Delete\"}),/*#__PURE__*/_jsxs(InboxActionButton,{color:\"light\",id:\"read\".concat(id),icon:read?'envelope':'envelope-open',onClick:function onClick(){return handleAction('read',[id]);},children:[\"Mark as \",read?'unread':'read']}),/*#__PURE__*/_jsx(InboxActionButton,{color:\"light\",id:\"snooze\".concat(id),icon:snooze?['far','clock']:'clock',onClick:function onClick(){return handleAction('snooze',[id]);},children:snooze?'Snoozed':'Snooze'})]});};export default EmailRowHoverActions;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/email/inbox/InboxRowHoverActions.js"],"names":["React","useContext","ButtonGroup","InboxActionButton","EmailContext","EmailRowHoverActions","id","read","snooze","handleAction"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CAEA,OAASC,WAAT,KAA4B,YAA5B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,OAASC,YAAT,KAA6B,0BAA7B,C,wFAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAA0B,IAAvBC,CAAAA,EAAuB,MAAvBA,EAAuB,CAAnBC,IAAmB,MAAnBA,IAAmB,CAAbC,MAAa,MAAbA,MAAa,iBAC5BP,UAAU,CAACG,YAAD,CADkB,CAC7CK,YAD6C,aAC7CA,YAD6C,CAGrD,mBACE,MAAC,WAAD,EAAa,IAAI,CAAC,IAAlB,CAAuB,SAAS,CAAC,wBAAjC,wBACE,KAAC,iBAAD,EAAmB,KAAK,CAAC,OAAzB,CAAiC,EAAE,kBAAYH,EAAZ,CAAnC,CAAqD,IAAI,CAAC,SAA1D,CAAoE,OAAO,CAAE,yBAAMG,CAAAA,YAAY,CAAC,SAAD,CAAY,CAACH,EAAD,CAAZ,CAAlB,EAA7E,qBADF,cAIE,KAAC,iBAAD,EAAmB,KAAK,CAAC,OAAzB,CAAiC,EAAE,iBAAWA,EAAX,CAAnC,CAAoD,IAAI,CAAC,WAAzD,CAAqE,OAAO,CAAE,yBAAMG,CAAAA,YAAY,CAAC,QAAD,CAAW,CAACH,EAAD,CAAX,CAAlB,EAA9E,oBAJF,cAOE,MAAC,iBAAD,EACE,KAAK,CAAC,OADR,CAEE,EAAE,eAASA,EAAT,CAFJ,CAGE,IAAI,CAAEC,IAAI,CAAG,UAAH,CAAgB,eAH5B,CAIE,OAAO,CAAE,yBAAME,CAAAA,YAAY,CAAC,MAAD,CAAS,CAACH,EAAD,CAAT,CAAlB,EAJX,sBAMWC,IAAI,CAAG,QAAH,CAAc,MAN7B,GAPF,cAeE,KAAC,iBAAD,EACE,KAAK,CAAC,OADR,CAEE,EAAE,iBAAWD,EAAX,CAFJ,CAGE,IAAI,CAAEE,MAAM,CAAG,CAAC,KAAD,CAAQ,OAAR,CAAH,CAAsB,OAHpC,CAIE,OAAO,CAAE,yBAAMC,CAAAA,YAAY,CAAC,QAAD,CAAW,CAACH,EAAD,CAAX,CAAlB,EAJX,UAMGE,MAAM,CAAG,SAAH,CAAe,QANxB,EAfF,GADF,CA0BD,CA7BD,CAoCA,cAAeH,CAAAA,oBAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonGroup } from 'reactstrap';\nimport InboxActionButton from './InboxActionButton';\nimport { EmailContext } from '../../../context/Context';\n\nconst EmailRowHoverActions = ({ id, read, snooze }) => {\n  const { handleAction } = useContext(EmailContext);\n\n  return (\n    <ButtonGroup size=\"sm\" className=\"hover-actions r-0 mr-3\">\n      <InboxActionButton color=\"light\" id={`archive${id}`} icon=\"archive\" onClick={() => handleAction('archive', [id])}>\n        Archive\n      </InboxActionButton>\n      <InboxActionButton color=\"light\" id={`delete${id}`} icon=\"trash-alt\" onClick={() => handleAction('delete', [id])}>\n        Delete\n      </InboxActionButton>\n      <InboxActionButton\n        color=\"light\"\n        id={`read${id}`}\n        icon={read ? 'envelope' : 'envelope-open'}\n        onClick={() => handleAction('read', [id])}\n      >\n        Mark as {read ? 'unread' : 'read'}\n      </InboxActionButton>\n      <InboxActionButton\n        color=\"light\"\n        id={`snooze${id}`}\n        icon={snooze ? ['far', 'clock'] : 'clock'}\n        onClick={() => handleAction('snooze', [id])}\n      >\n        {snooze ? 'Snoozed' : 'Snooze'}\n      </InboxActionButton>\n    </ButtonGroup>\n  );\n};\n\nEmailRowHoverActions.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  read: PropTypes.bool.isRequired\n};\n\nexport default EmailRowHoverActions;\n"]},"metadata":{},"sourceType":"module"}