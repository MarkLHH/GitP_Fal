{"ast":null,"code":"import React,{Fragment}from'react';import{Card,CardBody,Col,Row}from'reactstrap';import Chart from'../chart/Chart';import PageHeader from'../common/PageHeader';import FalconCardHeader from'../common/FalconCardHeader';import FalconEditor from'../common/FalconEditor';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var lineCode=\"function ChartLineExample() {\\n  const randomScalingFactor = () => Math.round(Math.random() * 100);\\n  \\n  const config = {\\n    type: 'line',\\n    data: {\\n        datasets: [{\\n            data: [\\n                randomScalingFactor(),\\n                randomScalingFactor(),\\n                randomScalingFactor(),\\n                randomScalingFactor(),\\n                randomScalingFactor(),\\n            ],\\n            backgroundColor: [\\n                'rgba(255, 99, 132, 0.2)',\\n                'rgba(54, 162, 235, 0.2)',\\n                'rgba(255, 206, 86, 0.2)',\\n                'rgba(75, 192, 192, 0.2)',\\n                'rgba(153, 102, 255, 0.2)',\\n                'rgba(255, 159, 64, 0.2)'\\n            ],\\n            label: 'Dataset 1'\\n        }],\\n        labels: [\\n            'Red',\\n            'Orange',\\n            'Yellow',\\n            'Green',\\n            'Blue'\\n        ]\\n    },\\n    options: {\\n        responsive: true\\n    }\\n};\\n  \\n  return <Chart config={config} />;\\n}\";var barCode=\"function ChartBarExample() {\\n  const config = {\\n    type: 'bar',\\n    data: {\\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\\n        datasets: [{\\n            label: '# of Votes',\\n            data: [12, 19, 3, 5, 2, 3],\\n            backgroundColor: [\\n                'rgba(255, 99, 132, 0.2)',\\n                'rgba(54, 162, 235, 0.2)',\\n                'rgba(255, 206, 86, 0.2)',\\n                'rgba(75, 192, 192, 0.2)',\\n                'rgba(153, 102, 255, 0.2)',\\n                'rgba(255, 159, 64, 0.2)'\\n            ],\\n            borderColor: [\\n                'rgba(255, 99, 132, 1)',\\n                'rgba(54, 162, 235, 1)',\\n                'rgba(255, 206, 86, 1)',\\n                'rgba(75, 192, 192, 1)',\\n                'rgba(153, 102, 255, 1)',\\n                'rgba(255, 159, 64, 1)'\\n            ],\\n            borderWidth: 1\\n        }]\\n    },\\n    options: {\\n        scales: {\\n            yAxes: [{\\n                ticks: {\\n                    beginAtZero: true\\n                }\\n            }]\\n        }\\n    }\\n  };\\n  \\n  return <Chart config={config} />;\\n}\";var pieCode=\"function ChartPieExample() {\\n  const config = {\\n    type: 'pie',\\n    data: {\\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\\n        datasets: [{\\n            label: '# of Votes',\\n            data: [12, 19, 3, 5, 2, 3],\\n            backgroundColor: [\\n                'rgba(255, 99, 132, 0.2)',\\n                'rgba(54, 162, 235, 0.2)',\\n                'rgba(255, 206, 86, 0.2)',\\n                'rgba(75, 192, 192, 0.2)',\\n                'rgba(153, 102, 255, 0.2)',\\n                'rgba(255, 159, 64, 0.2)'\\n            ],\\n            borderColor: [\\n                'rgba(255, 99, 132, 1)',\\n                'rgba(54, 162, 235, 1)',\\n                'rgba(255, 206, 86, 1)',\\n                'rgba(75, 192, 192, 1)',\\n                'rgba(153, 102, 255, 1)',\\n                'rgba(255, 159, 64, 1)'\\n            ],\\n            borderWidth: 1\\n        }]\\n    },\\n    options: {\\n        scales: {\\n            yAxes: [{\\n                ticks: {\\n                    beginAtZero: true\\n                }\\n            }]\\n        }\\n    }\\n  };\\n  \\n  return <Chart config={config} />;\\n}\";var doughnutCode=\"function ChartDoughnutExample() {\\n  const config = {\\n    type: 'doughnut',\\n    data: {\\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\\n        datasets: [{\\n            label: '# of Votes',\\n            data: [12, 19, 3, 5, 2, 3],\\n            backgroundColor: [\\n                'rgba(255, 99, 132, 0.2)',\\n                'rgba(54, 162, 235, 0.2)',\\n                'rgba(255, 206, 86, 0.2)',\\n                'rgba(75, 192, 192, 0.2)',\\n                'rgba(153, 102, 255, 0.2)',\\n                'rgba(255, 159, 64, 0.2)'\\n            ],\\n            borderColor: [\\n                'rgba(255, 99, 132, 1)',\\n                'rgba(54, 162, 235, 1)',\\n                'rgba(255, 206, 86, 1)',\\n                'rgba(75, 192, 192, 1)',\\n                'rgba(153, 102, 255, 1)',\\n                'rgba(255, 159, 64, 1)'\\n            ],\\n            borderWidth: 1\\n        }]\\n    },\\n    options: {\\n        scales: {\\n            yAxes: [{\\n                ticks: {\\n                    beginAtZero: true\\n                }\\n            }]\\n        }\\n    }\\n  };\\n  \\n  return <Chart config={config} />;\\n}\";var ChartExample=function ChartExample(){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Chart js\",className:\"mb-3\"}),/*#__PURE__*/_jsxs(Row,{noGutters:true,children:[/*#__PURE__*/_jsx(Col,{lg:true,className:\"mb-4 mb-lg-0 pr-lg-2\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Pie Chart\"}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(FalconEditor,{code:pieCode,scope:{Chart:Chart},language:\"jsx\"})})]})}),/*#__PURE__*/_jsx(Col,{lg:true,className:\"pl-lg-2\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Doughnut Chart\"}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(FalconEditor,{code:doughnutCode,scope:{Chart:Chart},language:\"jsx\"})})]})})]}),/*#__PURE__*/_jsxs(Row,{noGutters:true,className:\"mt-3\",children:[/*#__PURE__*/_jsx(Col,{lg:true,className:\"mb-4 mb-lg-0 pr-lg-2\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Bar Chart\"}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(FalconEditor,{code:barCode,scope:{Chart:Chart},language:\"jsx\"})})]})}),/*#__PURE__*/_jsx(Col,{lg:true,className:\"pl-lg-2\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Line Chart\"}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(FalconEditor,{code:lineCode,scope:{Chart:Chart},language:\"jsx\"})})]})})]})]});};export default ChartExample;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/plugins/Chart.js"],"names":["React","Fragment","Card","CardBody","Col","Row","Chart","PageHeader","FalconCardHeader","FalconEditor","lineCode","barCode","pieCode","doughnutCode","ChartExample"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,GAAzB,CAA8BC,GAA9B,KAAyC,YAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,C,wFAEA,GAAMC,CAAAA,QAAQ,y/BAAd,CAwCA,GAAMC,CAAAA,OAAO,8mCAAb,CAyCA,GAAMC,CAAAA,OAAO,8mCAAb,CAyCA,GAAMC,CAAAA,YAAY,wnCAAlB,CAyCA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,sBACnB,MAAC,QAAD,yBACE,KAAC,UAAD,EAAY,KAAK,CAAC,UAAlB,CAA6B,SAAS,CAAC,MAAvC,EADF,cAGE,MAAC,GAAD,EAAK,SAAS,KAAd,wBACE,KAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,SAAS,CAAC,sBAAlB,uBACE,MAAC,IAAD,yBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,WAAxB,EADF,cAEE,KAAC,QAAD,wBACE,KAAC,YAAD,EAAc,IAAI,CAAEF,OAApB,CAA6B,KAAK,CAAE,CAAEN,KAAK,CAALA,KAAF,CAApC,CAA+C,QAAQ,CAAC,KAAxD,EADF,EAFF,GADF,EADF,cASE,KAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,SAAS,CAAC,SAAlB,uBACE,MAAC,IAAD,yBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,gBAAxB,EADF,cAEE,KAAC,QAAD,wBACE,KAAC,YAAD,EAAc,IAAI,CAAEO,YAApB,CAAkC,KAAK,CAAE,CAAEP,KAAK,CAALA,KAAF,CAAzC,CAAoD,QAAQ,CAAC,KAA7D,EADF,EAFF,GADF,EATF,GAHF,cAsBE,MAAC,GAAD,EAAK,SAAS,KAAd,CAAe,SAAS,CAAC,MAAzB,wBACE,KAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,SAAS,CAAC,sBAAlB,uBACE,MAAC,IAAD,yBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,WAAxB,EADF,cAEE,KAAC,QAAD,wBACE,KAAC,YAAD,EAAc,IAAI,CAAEK,OAApB,CAA6B,KAAK,CAAE,CAAEL,KAAK,CAALA,KAAF,CAApC,CAA+C,QAAQ,CAAC,KAAxD,EADF,EAFF,GADF,EADF,cASE,KAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,SAAS,CAAC,SAAlB,uBACE,MAAC,IAAD,yBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,YAAxB,EADF,cAEE,KAAC,QAAD,wBACE,KAAC,YAAD,EAAc,IAAI,CAAEI,QAApB,CAA8B,KAAK,CAAE,CAAEJ,KAAK,CAALA,KAAF,CAArC,CAAgD,QAAQ,CAAC,KAAzD,EADF,EAFF,GADF,EATF,GAtBF,GADmB,EAArB,CA4CA,cAAeQ,CAAAA,YAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Card, CardBody, Col, Row } from 'reactstrap';\nimport Chart from '../chart/Chart';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport FalconEditor from '../common/FalconEditor';\n\nconst lineCode = `function ChartLineExample() {\n  const randomScalingFactor = () => Math.round(Math.random() * 100);\n  \n  const config = {\n    type: 'line',\n    data: {\n        datasets: [{\n            data: [\n                randomScalingFactor(),\n                randomScalingFactor(),\n                randomScalingFactor(),\n                randomScalingFactor(),\n                randomScalingFactor(),\n            ],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ],\n            label: 'Dataset 1'\n        }],\n        labels: [\n            'Red',\n            'Orange',\n            'Yellow',\n            'Green',\n            'Blue'\n        ]\n    },\n    options: {\n        responsive: true\n    }\n};\n  \n  return <Chart config={config} />;\n}`;\n\nconst barCode = `function ChartBarExample() {\n  const config = {\n    type: 'bar',\n    data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n  };\n  \n  return <Chart config={config} />;\n}`;\n\nconst pieCode = `function ChartPieExample() {\n  const config = {\n    type: 'pie',\n    data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n  };\n  \n  return <Chart config={config} />;\n}`;\n\nconst doughnutCode = `function ChartDoughnutExample() {\n  const config = {\n    type: 'doughnut',\n    data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n  };\n  \n  return <Chart config={config} />;\n}`;\n\nconst ChartExample = () => (\n  <Fragment>\n    <PageHeader title=\"Chart js\" className=\"mb-3\" />\n\n    <Row noGutters>\n      <Col lg className=\"mb-4 mb-lg-0 pr-lg-2\">\n        <Card>\n          <FalconCardHeader title=\"Pie Chart\" />\n          <CardBody>\n            <FalconEditor code={pieCode} scope={{ Chart }} language=\"jsx\" />\n          </CardBody>\n        </Card>\n      </Col>\n      <Col lg className=\"pl-lg-2\">\n        <Card>\n          <FalconCardHeader title=\"Doughnut Chart\" />\n          <CardBody>\n            <FalconEditor code={doughnutCode} scope={{ Chart }} language=\"jsx\" />\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n\n    <Row noGutters className=\"mt-3\">\n      <Col lg className=\"mb-4 mb-lg-0 pr-lg-2\">\n        <Card>\n          <FalconCardHeader title=\"Bar Chart\" />\n          <CardBody>\n            <FalconEditor code={barCode} scope={{ Chart }} language=\"jsx\" />\n          </CardBody>\n        </Card>\n      </Col>\n      <Col lg className=\"pl-lg-2\">\n        <Card>\n          <FalconCardHeader title=\"Line Chart\" />\n          <CardBody>\n            <FalconEditor code={lineCode} scope={{ Chart }} language=\"jsx\" />\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  </Fragment>\n);\n\nexport default ChartExample;\n"]},"metadata":{},"sourceType":"module"}