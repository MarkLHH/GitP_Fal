{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/chat/sidebar/ChatSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Nav } from 'reactstrap';\nimport Scrollbar from 'react-scrollbars-custom';\nimport ChatThread from './ChatThread';\nimport ChatContactsSearch from './ChatContactsSearch';\nimport AppContext, { ChatContext } from '../../../context/Context';\nimport { isIterableArray } from '../../../helpers/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatSidebar = () => {\n  _s();\n\n  const {\n    isRTL\n  } = useContext(AppContext);\n  const {\n    threads\n  } = useContext(ChatContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-sidebar rounded-left\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts-list bg-white\",\n      children: /*#__PURE__*/_jsxDEV(Scrollbar, {\n        style: {\n          height: '100%',\n          minWidth: '75px'\n        },\n        rtl: isRTL,\n        noScrollX: true,\n        trackYProps: {\n          renderer(props) {\n            const {\n              elementRef,\n              ...restProps\n            } = props;\n            return /*#__PURE__*/_jsxDEV(\"span\", { ...restProps,\n              ref: elementRef,\n              className: \"TrackY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 22\n            }, this);\n          }\n\n        },\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"border-0\",\n          children: isIterableArray(threads) && threads.map(thread => /*#__PURE__*/_jsxDEV(ChatThread, {\n            thread: thread\n          }, thread.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 64\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContactsSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatSidebar, \"mM9IYrnRbs8diE+k97UOTWnsLDs=\");\n\n_c = ChatSidebar;\nexport default ChatSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatSidebar\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/chat/sidebar/ChatSidebar.js"],"names":["React","useContext","Nav","Scrollbar","ChatThread","ChatContactsSearch","AppContext","ChatContext","isIterableArray","ChatSidebar","isRTL","threads","height","minWidth","renderer","props","elementRef","restProps","map","thread","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,UAAP,IAAqBC,WAArB,QAAwC,0BAAxC;AACA,SAASC,eAAT,QAAgC,wBAAhC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAYT,UAAU,CAACK,UAAD,CAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAcV,UAAU,CAACM,WAAD,CAA9B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AACLK,UAAAA,MAAM,EAAE,MADH;AAELC,UAAAA,QAAQ,EAAE;AAFL,SADT;AAKE,QAAA,GAAG,EAAEH,KALP;AAME,QAAA,SAAS,MANX;AAOE,QAAA,WAAW,EAAE;AACXI,UAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,kBAAM;AAAEC,cAAAA,UAAF;AAAc,iBAAGC;AAAjB,gBAA+BF,KAArC;AACA,gCAAO,qBAAUE,SAAV;AAAqB,cAAA,GAAG,EAAED,UAA1B;AAAsC,cAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAJU,SAPf;AAAA,+BAcE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBACGR,eAAe,CAACG,OAAD,CAAf,IAA4BA,OAAO,CAACO,GAAR,CAAYC,MAAM,iBAAI,QAAC,UAAD;AAAY,YAAA,MAAM,EAAEA;AAApB,aAAiCA,MAAM,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,kBAAtB;AAD/B;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA7BD;;GAAMX,W;;KAAAA,W;AA+BN,eAAeA,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Nav } from 'reactstrap';\nimport Scrollbar from 'react-scrollbars-custom';\nimport ChatThread from './ChatThread';\nimport ChatContactsSearch from './ChatContactsSearch';\nimport AppContext, { ChatContext } from '../../../context/Context';\nimport { isIterableArray } from '../../../helpers/utils';\n\nconst ChatSidebar = () => {\n  const { isRTL } = useContext(AppContext);\n  const { threads } = useContext(ChatContext);\n\n  return (\n    <div className=\"chat-sidebar rounded-left\">\n      <div className=\"contacts-list bg-white\">\n        <Scrollbar\n          style={{\n            height: '100%',\n            minWidth: '75px'\n          }}\n          rtl={isRTL}\n          noScrollX\n          trackYProps={{\n            renderer(props) {\n              const { elementRef, ...restProps } = props;\n              return <span {...restProps} ref={elementRef} className=\"TrackY\" />;\n            }\n          }}\n        >\n          <Nav className=\"border-0\">\n            {isIterableArray(threads) && threads.map(thread => <ChatThread thread={thread} key={thread.id} />)}\n          </Nav>\n        </Scrollbar>\n      </div>\n      <ChatContactsSearch />\n    </div>\n  );\n};\n\nexport default ChatSidebar;\n"]},"metadata":{},"sourceType":"module"}