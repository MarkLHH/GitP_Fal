{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/Settings/SettingsChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, CardBody, Form } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport FormGroupInput from '../common/FormGroupInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SettingsChangePassword = () => {\n  _s();\n\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  useEffect(() => {\n    if (oldPassword === '' || newPassword === '' || confirmPassword === '') return setIsDisabled(true);\n    setIsDisabled(newPassword !== confirmPassword);\n  }, [oldPassword, newPassword, confirmPassword]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Change Password\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroupInput, {\n          id: \"old-password\",\n          label: \"Old Password\",\n          value: oldPassword,\n          onChange: ({\n            target\n          }) => setOldPassword(target.value),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroupInput, {\n          id: \"new-password\",\n          label: \"New Password\",\n          value: newPassword,\n          onChange: ({\n            target\n          }) => setNewPassword(target.value),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroupInput, {\n          id: \"confirm-password\",\n          label: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: ({\n            target\n          }) => setConfirmPassword(target.value),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          block: true,\n          disabled: isDisabled,\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsChangePassword, \"q4ZLzCLSJcHNXh/ENs/CZvqmsAo=\");\n\n_c = SettingsChangePassword;\nexport default SettingsChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsChangePassword\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/Settings/SettingsChangePassword.js"],"names":["React","useEffect","useState","Button","Card","CardBody","Form","FalconCardHeader","FormGroupInput","SettingsChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isDisabled","setIsDisabled","handleSubmit","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,IAAjC,QAA6C,YAA7C;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AACnC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,WAAW,KAAK,EAAhB,IAAsBE,WAAW,KAAK,EAAtC,IAA4CE,eAAe,KAAK,EAApE,EAAwE,OAAOG,aAAa,CAAC,IAAD,CAApB;AAExEA,IAAAA,aAAa,CAACL,WAAW,KAAKE,eAAjB,CAAb;AACD,GAJQ,EAIN,CAACJ,WAAD,EAAcE,WAAd,EAA2BE,eAA3B,CAJM,CAAT;;AAMA,QAAMI,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC,iBAAxB;AAA0C,MAAA,KAAK,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,UAApB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,YAAhB;AAAA,gCACE,QAAC,cAAD;AACE,UAAA,EAAE,EAAC,cADL;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,KAAK,EAAER,WAHT;AAIE,UAAA,QAAQ,EAAE,CAAC;AAAEW,YAAAA;AAAF,WAAD,KAAgBV,cAAc,CAACU,MAAM,CAACC,KAAR,CAJ1C;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,cAAD;AACE,UAAA,EAAE,EAAC,cADL;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,KAAK,EAAEV,WAHT;AAIE,UAAA,QAAQ,EAAE,CAAC;AAAES,YAAAA;AAAF,WAAD,KAAgBR,cAAc,CAACQ,MAAM,CAACC,KAAR,CAJ1C;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE,QAAC,cAAD;AACE,UAAA,EAAE,EAAC,kBADL;AAEE,UAAA,KAAK,EAAC,kBAFR;AAGE,UAAA,KAAK,EAAER,eAHT;AAIE,UAAA,QAAQ,EAAE,CAAC;AAAEO,YAAAA;AAAF,WAAD,KAAgBN,kBAAkB,CAACM,MAAM,CAACC,KAAR,CAJ9C;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBAfF,eAsBE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,QAAQ,EAAEN,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAjDD;;GAAMP,sB;;KAAAA,sB;AAmDN,eAAeA,sBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Card, CardBody, Form } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport FormGroupInput from '../common/FormGroupInput';\n\nconst SettingsChangePassword = () => {\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  useEffect(() => {\n    if (oldPassword === '' || newPassword === '' || confirmPassword === '') return setIsDisabled(true);\n\n    setIsDisabled(newPassword !== confirmPassword);\n  }, [oldPassword, newPassword, confirmPassword]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Change Password\" light={false} />\n      <CardBody className=\"bg-light\">\n        <Form onSubmit={handleSubmit}>\n          <FormGroupInput\n            id=\"old-password\"\n            label=\"Old Password\"\n            value={oldPassword}\n            onChange={({ target }) => setOldPassword(target.value)}\n            type=\"password\"\n          />\n          <FormGroupInput\n            id=\"new-password\"\n            label=\"New Password\"\n            value={newPassword}\n            onChange={({ target }) => setNewPassword(target.value)}\n            type=\"password\"\n          />\n          <FormGroupInput\n            id=\"confirm-password\"\n            label=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={({ target }) => setConfirmPassword(target.value)}\n            type=\"password\"\n          />\n          <Button color=\"primary\" block disabled={isDisabled}>\n            Update Password\n          </Button>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SettingsChangePassword;\n"]},"metadata":{},"sourceType":"module"}