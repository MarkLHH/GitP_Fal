{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from'react';import PropTypes from'prop-types';import{Col,CardHeader,Row}from'reactstrap';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Title=function Title(_ref){var TitleTag=_ref.titleTag,className=_ref.className,breakPoint=_ref.breakPoint,children=_ref.children;return/*#__PURE__*/_jsx(TitleTag,{className:classNames(_defineProperty({'mb-0':!breakPoint},\"mb-\".concat(breakPoint,\"-0\"),!!breakPoint),className),children:children});};Title.propsType={breakPoint:PropTypes.oneOf(['xs','sm','md','lg','xl','xxl']),titleTag:PropTypes.oneOfType([PropTypes.string,PropTypes.func]),className:PropTypes.string,children:PropTypes.node};Title.defaultProps={titleTag:'h5'};var FalconCardHeader=function FalconCardHeader(_ref2){var title=_ref2.title,light=_ref2.light,titleTag=_ref2.titleTag,titleClass=_ref2.titleClass,className=_ref2.className,breakPoint=_ref2.breakPoint,children=_ref2.children;return/*#__PURE__*/_jsx(CardHeader,{className:classNames({'bg-light':light},className),children:children?/*#__PURE__*/_jsxs(Row,{className:\"align-items-center\",children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Title,{breakPoint:breakPoint,titleTag:titleTag,className:titleClass,children:title})}),/*#__PURE__*/_jsx(Col,_objectSpread(_objectSpread({},_defineProperty({},breakPoint?breakPoint:'xs','auto')),{},{className:\"text\".concat(breakPoint?\"-\".concat(breakPoint):'',\"-right\"),children:children}))]}):/*#__PURE__*/_jsx(Title,{breakPoint:breakPoint,titleTag:titleTag,className:titleClass,children:title})});};FalconCardHeader.defaultProps={light:true};export default FalconCardHeader;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/FalconCardHeader.js"],"names":["React","PropTypes","Col","CardHeader","Row","classNames","Title","TitleTag","titleTag","className","breakPoint","children","propsType","oneOf","oneOfType","string","func","node","defaultProps","FalconCardHeader","title","light","titleClass"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,GAAT,CAAcC,UAAd,CAA0BC,GAA1B,KAAqC,YAArC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,UAAaC,CAAAA,QAAb,MAAGC,QAAH,CAAuBC,SAAvB,MAAuBA,SAAvB,CAAkCC,UAAlC,MAAkCA,UAAlC,CAA8CC,QAA9C,MAA8CA,QAA9C,oBACZ,KAAC,QAAD,EACE,SAAS,CAAEN,UAAU,kBAEjB,OAAQ,CAACK,UAFQ,eAGVA,UAHU,OAGO,CAAC,CAACA,UAHT,EAKnBD,SALmB,CADvB,UASGE,QATH,EADY,EAAd,CAcAL,KAAK,CAACM,SAAN,CAAkB,CAChBF,UAAU,CAAET,SAAS,CAACY,KAAV,CAAgB,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,KAA/B,CAAhB,CADI,CAEhBL,QAAQ,CAAEP,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACc,MAAX,CAAmBd,SAAS,CAACe,IAA7B,CAApB,CAFM,CAGhBP,SAAS,CAAER,SAAS,CAACc,MAHL,CAIhBJ,QAAQ,CAAEV,SAAS,CAACgB,IAJJ,CAAlB,CAOAX,KAAK,CAACY,YAAN,CAAqB,CAAEV,QAAQ,CAAE,IAAZ,CAArB,CAEA,GAAMW,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,WAAGC,CAAAA,KAAH,OAAGA,KAAH,CAAUC,KAAV,OAAUA,KAAV,CAAiBb,QAAjB,OAAiBA,QAAjB,CAA2Bc,UAA3B,OAA2BA,UAA3B,CAAuCb,SAAvC,OAAuCA,SAAvC,CAAkDC,UAAlD,OAAkDA,UAAlD,CAA8DC,QAA9D,OAA8DA,QAA9D,oBACvB,KAAC,UAAD,EAAY,SAAS,CAAEN,UAAU,CAAC,CAAE,WAAYgB,KAAd,CAAD,CAAwBZ,SAAxB,CAAjC,UACGE,QAAQ,cACP,MAAC,GAAD,EAAK,SAAS,CAAC,oBAAf,wBACE,KAAC,GAAD,wBACE,KAAC,KAAD,EAAO,UAAU,CAAED,UAAnB,CAA+B,QAAQ,CAAEF,QAAzC,CAAmD,SAAS,CAAEc,UAA9D,UACGF,KADH,EADF,EADF,cAME,KAAC,GAAD,mDACSV,UAAU,CAAGA,UAAH,CAAgB,IADnC,CAC0C,MAD1C,OAEE,SAAS,eAASA,UAAU,YAAOA,UAAP,EAAsB,EAAzC,UAFX,UAIGC,QAJH,GANF,GADO,cAeP,KAAC,KAAD,EAAO,UAAU,CAAED,UAAnB,CAA+B,QAAQ,CAAEF,QAAzC,CAAmD,SAAS,CAAEc,UAA9D,UACGF,KADH,EAhBJ,EADuB,EAAzB,CAkCAD,gBAAgB,CAACD,YAAjB,CAAgC,CAAEG,KAAK,CAAE,IAAT,CAAhC,CAEA,cAAeF,CAAAA,gBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, CardHeader, Row } from 'reactstrap';\nimport classNames from 'classnames';\n\nconst Title = ({ titleTag: TitleTag, className, breakPoint, children }) => (\n  <TitleTag\n    className={classNames(\n      {\n        'mb-0': !breakPoint,\n        [`mb-${breakPoint}-0`]: !!breakPoint\n      },\n      className\n    )}\n  >\n    {children}\n  </TitleTag>\n);\n\nTitle.propsType = {\n  breakPoint: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', 'xxl']),\n  titleTag: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n\nTitle.defaultProps = { titleTag: 'h5' };\n\nconst FalconCardHeader = ({ title, light, titleTag, titleClass, className, breakPoint, children }) => (\n  <CardHeader className={classNames({ 'bg-light': light }, className)}>\n    {children ? (\n      <Row className=\"align-items-center\">\n        <Col>\n          <Title breakPoint={breakPoint} titleTag={titleTag} className={titleClass}>\n            {title}\n          </Title>\n        </Col>\n        <Col\n          {...{ [breakPoint ? breakPoint : 'xs']: 'auto' }}\n          className={`text${breakPoint ? `-${breakPoint}` : ''}-right`}\n        >\n          {children}\n        </Col>\n      </Row>\n    ) : (\n      <Title breakPoint={breakPoint} titleTag={titleTag} className={titleClass}>\n        {title}\n      </Title>\n    )}\n  </CardHeader>\n);\n\nFalconCardHeader.propTypes = {\n  title: PropTypes.node.isRequired,\n  light: PropTypes.bool,\n  breakPoint: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', 'xxl']),\n  titleTag: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  titleClass: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n\nFalconCardHeader.defaultProps = { light: true };\n\nexport default FalconCardHeader;\n"]},"metadata":{},"sourceType":"module"}