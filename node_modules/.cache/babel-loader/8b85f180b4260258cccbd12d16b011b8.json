{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/common/Avatar.js\";\nimport React from 'react';\nimport PropTypes, { array, string } from 'prop-types';\nimport { isIterableArray } from '../../helpers/utils';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Flex from './Flex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Avatar = ({\n  size,\n  rounded,\n  src,\n  name,\n  emoji,\n  className,\n  mediaClass,\n  isExact,\n  icon\n}) => {\n  const classNames = ['avatar', `avatar-${size}`, className].join(' ');\n  const mediaClasses = [rounded ? `rounded-${rounded}` : 'rounded', mediaClass].join(' ');\n\n  const getAvatar = () => {\n    if (src) {\n      if (isIterableArray(src)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${mediaClasses} overflow-hidden h-100 d-flex`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-50 border-right\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: src[0],\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-50 d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: src[1],\n              alt: \"\",\n              className: \"h-50 border-bottom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: src[2],\n              alt: \"\",\n              className: \"h-50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: mediaClasses,\n          src: src,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n      }\n    }\n\n    if (name) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `avatar-name ${mediaClasses}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isExact ? name : name.match(/\\b\\w/g).join('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (icon) {\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        className: `avatar-name ${mediaClasses} flex-center`,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `avatar-emoji ${mediaClasses}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"Emoji\",\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames,\n    children: getAvatar()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Avatar;\nAvatar.propTypes = {\n  size: PropTypes.oneOf(['s', 'm', 'l', 'xl', '2xl', '3xl', '4xl', '5xl']),\n  rounded: PropTypes.string,\n  src: PropTypes.oneOfType([array, string]),\n  name: PropTypes.string,\n  emoji: PropTypes.string,\n  className: PropTypes.string,\n  mediaClass: PropTypes.string,\n  isExact: PropTypes.bool\n};\nAvatar.defaultProps = {\n  size: 'xl',\n  rounded: 'circle',\n  emoji: 'ðŸ˜Š',\n  isExact: false\n};\nexport default Avatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/Avatar.js"],"names":["React","PropTypes","array","string","isIterableArray","FontAwesomeIcon","Flex","Avatar","size","rounded","src","name","emoji","className","mediaClass","isExact","icon","classNames","join","mediaClasses","getAvatar","match","propTypes","oneOf","oneOfType","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes, { array, string } from 'prop-types';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Flex from './Flex';\r\n\r\nconst Avatar = ({ size, rounded, src, name, emoji, className, mediaClass, isExact, icon }) => {\r\n  const classNames = ['avatar', `avatar-${size}`, className].join(' ');\r\n  const mediaClasses = [rounded ? `rounded-${rounded}` : 'rounded', mediaClass].join(' ');\r\n\r\n  const getAvatar = () => {\r\n    if (src) {\r\n      if (isIterableArray(src)) {\r\n        return (\r\n          <div className={`${mediaClasses} overflow-hidden h-100 d-flex`}>\r\n            <div className=\"w-50 border-right\">\r\n              <img src={src[0]} alt=\"\" />\r\n            </div>\r\n            <div className=\"w-50 d-flex flex-column\">\r\n              <img src={src[1]} alt=\"\" className=\"h-50 border-bottom\" />\r\n              <img src={src[2]} alt=\"\" className=\"h-50\" />\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <img className={mediaClasses} src={src} alt=\"\" />;\r\n      }\r\n    }\r\n\r\n    if (name) {\r\n      return (\r\n        <div className={`avatar-name ${mediaClasses}`}>\r\n          <span>{isExact ? name : name.match(/\\b\\w/g).join('')}</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (icon) {\r\n      return (\r\n        <Flex className={`avatar-name ${mediaClasses} flex-center`}>\r\n          <FontAwesomeIcon icon={icon} />\r\n        </Flex>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={`avatar-emoji ${mediaClasses}`}>\r\n        <span role=\"img\" aria-label=\"Emoji\">\r\n          {emoji}\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div className={classNames}>{getAvatar()}</div>;\r\n};\r\n\r\nAvatar.propTypes = {\r\n  size: PropTypes.oneOf(['s', 'm', 'l', 'xl', '2xl', '3xl', '4xl', '5xl']),\r\n  rounded: PropTypes.string,\r\n  src: PropTypes.oneOfType([array, string]),\r\n  name: PropTypes.string,\r\n  emoji: PropTypes.string,\r\n  className: PropTypes.string,\r\n  mediaClass: PropTypes.string,\r\n  isExact: PropTypes.bool\r\n};\r\n\r\nAvatar.defaultProps = {\r\n  size: 'xl',\r\n  rounded: 'circle',\r\n  emoji: 'ðŸ˜Š',\r\n  isExact: false\r\n};\r\n\r\nexport default Avatar;\r\n"]},"metadata":{},"sourceType":"module"}