{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Card,CardBody,Col,CustomInput,Form,FormGroup,Input,Label,Row}from'reactstrap';import Datetime from'react-datetime';import FalconCardHeader from'../common/FalconCardHeader';import{isIterableArray}from'../../helpers/utils';import ButtonIcon from'../common/ButtonIcon';import FormGroupSelect from'../common/FormGroupSelect';import createMarkup from'../../helpers/createMarkup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";var CustomField=function CustomField(_ref){var name=_ref.name,type=_ref.type,options=_ref.options,index=_ref.index;switch(type){case'select':return/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"customField\".concat(index),children:name}),/*#__PURE__*/_jsx(CustomInput,{type:\"select\",id:\"customField\".concat(index),children:isIterableArray(options)&&options.map(function(value,i){return/*#__PURE__*/_jsx(\"option\",{value:value,dangerouslySetInnerHTML:createMarkup(value)},i);})})]});case'checkboxes':return/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:name}),options.map(function(option,key){return/*#__PURE__*/_jsx(CustomInput,{type:\"checkbox\",id:\"customField\".concat(index).concat(key),label:option},key);})]});case'radio':return/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:name}),options.map(function(option,key){return/*#__PURE__*/_jsx(CustomInput,{type:\"radio\",name:\"customField\".concat(index),id:\"customField\".concat(index).concat(key),label:option},key);})]});case'textarea':return/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"customField\".concat(index),children:name}),/*#__PURE__*/_jsx(Input,{type:\"textarea\",rows:5,id:\"customField\".concat(index)})]});case'date':return/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"customField\".concat(index),children:name}),/*#__PURE__*/_jsx(Datetime,{timeFormat:false,bsSize:\"sm\",id:\"customField\".concat(index)})]});case'time':return/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"customField\".concat(index),children:name}),/*#__PURE__*/_jsx(Datetime,{dateFormat:false,bsSize:\"sm\",id:\"customField\".concat(index)})]});case'file':return/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"customField\".concat(index),children:name}),/*#__PURE__*/_jsx(CustomInput,{type:\"file\",id:\"customField\".concat(index)})]});default:return/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"customField\".concat(index),children:name}),/*#__PURE__*/_jsx(Input,{id:\"customField\".concat(index),type:type})]});}};var EventCustomField=function EventCustomField(){// State\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState('text'),_useState4=_slicedToArray(_useState3,2),type=_useState4[0],setType=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),options=_useState6[0],setOptions=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),hasOptions=_useState8[0],setHasOptions=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),customFields=_useState10[0],setCustomFields=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),disabled=_useState12[0],setDisabled=_useState12[1];var types=[{label:'Text',value:'text'},{label:'Select',value:'select'},{label:'Checkboxes',value:'checkboxes'},{label:'Radio',value:'radio'},{label:'Textarea',value:'textarea'},{label:'Date',value:'date'},{label:'Time',value:'time'},{label:'Url',value:'url'},{label:'Email',value:'email'},{label:'Password',value:'password'},{label:'Number',value:'number'},{label:'File',value:'file'}];// Handler\nvar validateCustomFieldOptions=function validateCustomFieldOptions(){return!hasOptions||hasOptions&&options.length;};var handleSubmit=function handleSubmit(e){e.preventDefault();if(hasOptions){var updatedOptions=options.split(',');setCustomFields([].concat(_toConsumableArray(customFields),[{name:name,type:type,options:updatedOptions}]));}else{setCustomFields([].concat(_toConsumableArray(customFields),[{name:name,type:type}]));}setName('');setType('text');setOptions('');setHasOptions(false);setDisabled(true);};useEffect(function(){setHasOptions(type==='select'||type==='checkboxes'||type==='radio');},[type]);useEffect(function(){setDisabled(!(name.length&&validateCustomFieldOptions()));// eslint-disable-next-line\n},[name,options,type]);return/*#__PURE__*/_jsxs(Card,{className:\"mb-3 mb-lg-0\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Custom Field\",light:false}),isIterableArray(customFields)&&/*#__PURE__*/_jsx(CardBody,{className:\"bg-200\",children:customFields.map(function(customField,index){return/*#__PURE__*/_createElement(CustomField,_objectSpread(_objectSpread({},customField),{},{index:index,key:index}));})}),/*#__PURE__*/_jsxs(CardBody,{tag:Form,className:\"bg-light\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Row,{form:true,children:[/*#__PURE__*/_jsx(Col,{sm:true,children:/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"field-name\",children:\"Name\"}),/*#__PURE__*/_jsx(Input,{value:name,onChange:function onChange(_ref2){var target=_ref2.target;return setName(target.value);},bsSize:\"sm\",id:\"field-name\",placeholder:\"Name\"})]})}),/*#__PURE__*/_jsx(Col,{sm:true,children:/*#__PURE__*/_jsx(FormGroupSelect,{loading:false,label:\"Type\",options:types,value:type,type:\"select\",onChange:function onChange(_ref3){var target=_ref3.target;return setType(target.value);},bsSize:\"sm\",id:\"field-type\",placeholder:\"Name\"})})]}),hasOptions&&/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"field-options\",children:\"Field Options\"}),/*#__PURE__*/_jsx(Input,{value:options,onChange:function onChange(_ref4){var target=_ref4.target;return setOptions(target.value);},type:\"textarea\",id:\"field-options\",placeholder:\"Field Options\"}),/*#__PURE__*/_jsx(\"small\",{className:\"text-warning\",children:\"*Separate your options with comma\"})]}),/*#__PURE__*/_jsx(ButtonIcon,{color:\"falcon-default\",size:\"sm\",icon:\"plus\",disabled:disabled,children:\"Add Field\"})]})]});};export default EventCustomField;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/event/EventCustomField.js"],"names":["React","useEffect","useState","Card","CardBody","Col","CustomInput","Form","FormGroup","Input","Label","Row","Datetime","FalconCardHeader","isIterableArray","ButtonIcon","FormGroupSelect","createMarkup","CustomField","name","type","options","index","map","value","i","option","key","EventCustomField","setName","setType","setOptions","hasOptions","setHasOptions","customFields","setCustomFields","disabled","setDisabled","types","label","validateCustomFieldOptions","length","handleSubmit","e","preventDefault","updatedOptions","split","customField","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, Col, CustomInput, Form, FormGroup, Input, Label, Row } from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport ButtonIcon from '../common/ButtonIcon';\nimport FormGroupSelect from '../common/FormGroupSelect';\nimport createMarkup from '../../helpers/createMarkup';\n\nconst CustomField = ({ name, type, options, index }) => {\n  switch (type) {\n    case 'select':\n      return (\n        <FormGroup>\n          <Label for={`customField${index}`}>{name}</Label>\n          <CustomInput type=\"select\" id={`customField${index}`}>\n            {isIterableArray(options) &&\n              options.map((value, i) => <option value={value} key={i} dangerouslySetInnerHTML={createMarkup(value)} />)}\n          </CustomInput>\n        </FormGroup>\n      );\n\n    case 'checkboxes':\n      return (\n        <FormGroup>\n          <Label>{name}</Label>\n          {options.map((option, key) => (\n            <CustomInput type=\"checkbox\" id={`customField${index}${key}`} label={option} key={key} />\n          ))}\n        </FormGroup>\n      );\n\n    case 'radio':\n      return (\n        <FormGroup>\n          <Label>{name}</Label>\n          {options.map((option, key) => (\n            <CustomInput\n              type=\"radio\"\n              name={`customField${index}`}\n              id={`customField${index}${key}`}\n              label={option}\n              key={key}\n            />\n          ))}\n        </FormGroup>\n      );\n\n    case 'textarea':\n      return (\n        <FormGroup>\n          <Label for={`customField${index}`}>{name}</Label>\n          <Input type=\"textarea\" rows={5} id={`customField${index}`} />\n        </FormGroup>\n      );\n\n    case 'date':\n      return (\n        <FormGroup>\n          <Label for={`customField${index}`}>{name}</Label>\n          <Datetime timeFormat={false} bsSize=\"sm\" id={`customField${index}`} />\n        </FormGroup>\n      );\n\n    case 'time':\n      return (\n        <FormGroup>\n          <Label for={`customField${index}`}>{name}</Label>\n          <Datetime dateFormat={false} bsSize=\"sm\" id={`customField${index}`} />\n        </FormGroup>\n      );\n\n    case 'file':\n      return (\n        <FormGroup>\n          <Label for={`customField${index}`}>{name}</Label>\n          <CustomInput type=\"file\" id={`customField${index}`} />\n        </FormGroup>\n      );\n\n    default:\n      return (\n        <FormGroup>\n          <Label for={`customField${index}`}>{name}</Label>\n          <Input id={`customField${index}`} type={type} />\n        </FormGroup>\n      );\n  }\n};\n\nCustomField.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  options: PropTypes.array\n};\n\nconst EventCustomField = () => {\n  // State\n  const [name, setName] = useState('');\n  const [type, setType] = useState('text');\n  const [options, setOptions] = useState('');\n  const [hasOptions, setHasOptions] = useState(false);\n  const [customFields, setCustomFields] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n\n  const types = [\n    { label: 'Text', value: 'text' },\n    { label: 'Select', value: 'select' },\n    { label: 'Checkboxes', value: 'checkboxes' },\n    { label: 'Radio', value: 'radio' },\n    { label: 'Textarea', value: 'textarea' },\n    { label: 'Date', value: 'date' },\n    { label: 'Time', value: 'time' },\n    { label: 'Url', value: 'url' },\n    { label: 'Email', value: 'email' },\n    { label: 'Password', value: 'password' },\n    { label: 'Number', value: 'number' },\n    { label: 'File', value: 'file' }\n  ];\n\n  // Handler\n  const validateCustomFieldOptions = () => !hasOptions || (hasOptions && options.length);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (hasOptions) {\n      const updatedOptions = options.split(',');\n      setCustomFields([...customFields, { name, type, options: updatedOptions }]);\n    } else {\n      setCustomFields([...customFields, { name, type }]);\n    }\n\n    setName('');\n    setType('text');\n    setOptions('');\n    setHasOptions(false);\n    setDisabled(true);\n  };\n\n  useEffect(() => {\n    setHasOptions(type === 'select' || type === 'checkboxes' || type === 'radio');\n  }, [type]);\n\n  useEffect(() => {\n    setDisabled(!(name.length && validateCustomFieldOptions()));\n    // eslint-disable-next-line\n  }, [name, options, type]);\n\n  return (\n    <Card className=\"mb-3 mb-lg-0\">\n      <FalconCardHeader title=\"Custom Field\" light={false} />\n      {isIterableArray(customFields) && (\n        <CardBody className=\"bg-200\">\n          {customFields.map((customField, index) => (\n            <CustomField {...customField} index={index} key={index} />\n          ))}\n        </CardBody>\n      )}\n      <CardBody tag={Form} className=\"bg-light\" onSubmit={handleSubmit}>\n        <Row form>\n          <Col sm>\n            <FormGroup>\n              <Label for=\"field-name\">Name</Label>\n              <Input\n                value={name}\n                onChange={({ target }) => setName(target.value)}\n                bsSize=\"sm\"\n                id=\"field-name\"\n                placeholder=\"Name\"\n              />\n            </FormGroup>\n          </Col>\n          <Col sm>\n            <FormGroupSelect\n              loading={false}\n              label=\"Type\"\n              options={types}\n              value={type}\n              type=\"select\"\n              onChange={({ target }) => setType(target.value)}\n              bsSize=\"sm\"\n              id=\"field-type\"\n              placeholder=\"Name\"\n            />\n          </Col>\n        </Row>\n        {hasOptions && (\n          <FormGroup>\n            <Label for=\"field-options\">Field Options</Label>\n            <Input\n              value={options}\n              onChange={({ target }) => setOptions(target.value)}\n              type=\"textarea\"\n              id=\"field-options\"\n              placeholder=\"Field Options\"\n            />\n            <small className=\"text-warning\">*Separate your options with comma</small>\n          </FormGroup>\n        )}\n        <ButtonIcon color=\"falcon-default\" size=\"sm\" icon=\"plus\" disabled={disabled}>\n          Add Field\n        </ButtonIcon>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default EventCustomField;\n"]},"metadata":{},"sourceType":"module"}