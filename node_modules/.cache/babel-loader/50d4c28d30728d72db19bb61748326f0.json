{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/education/Education.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { isIterableArray } from '../../helpers/utils';\nimport { Card, CardBody, UncontrolledCollapse } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport EducationSummary from './EducationSummary';\nimport Loader from '../common/Loader';\nimport EducationForm from './EducationForm';\nimport Flex from '../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst Education = ({\n  educations: rawEducations,\n  isEditable,\n  ...rest\n}) => {\n  _s();\n\n  // Data\n  const {\n    loading: loadingEducations,\n    data: educations,\n    setData: setEducations\n  } = useFakeFetch(rawEducations);\n  return /*#__PURE__*/_jsxDEV(Card, { ...rest,\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Education\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"fs--1\",\n      children: [isEditable && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          align: \"center\",\n          className: \"mb-4 text-primary cursor-pointer fs-0\",\n          id: \"togglerAddEducation\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circle-dashed\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-3\",\n            children: \"Add new education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UncontrolledCollapse, {\n          toggler: \"#togglerAddEducation\",\n          children: [/*#__PURE__*/_jsxDEV(EducationForm, {\n            educations: educations,\n            setEducations: setEducations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border-dashed border-bottom-0 my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), loadingEducations ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : isIterableArray(educations) && educations.map((education, index) => /*#__PURE__*/_createElement(EducationSummary, { ...education,\n        isEditable: isEditable,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 48\n        }\n      }))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Education, \"yfm+qNad3Xp0pgpY42hFmuMfV+Y=\", false, function () {\n  return [useFakeFetch];\n});\n\n_c = Education;\nEducation.propTypes = {\n  educations: PropTypes.array,\n  isEditable: PropTypes.bool\n};\nEducation.defaultProps = {\n  isEditable: false\n};\nexport default Education;\n\nvar _c;\n\n$RefreshReg$(_c, \"Education\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/education/Education.js"],"names":["React","Fragment","PropTypes","isIterableArray","Card","CardBody","UncontrolledCollapse","FalconCardHeader","EducationSummary","Loader","EducationForm","Flex","FontAwesomeIcon","useFakeFetch","Education","educations","rawEducations","isEditable","rest","loading","loadingEducations","data","setData","setEducations","map","education","index","propTypes","array","bool","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,oBAAzB,QAAqD,YAArD;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAU,EAAEC,aAAd;AAA6BC,EAAAA,UAA7B;AAAyC,KAAGC;AAA5C,CAAD,KAAwD;AAAA;;AACxE;AACA,QAAM;AAAEC,IAAAA,OAAO,EAAEC,iBAAX;AAA8BC,IAAAA,IAAI,EAAEN,UAApC;AAAgDO,IAAAA,OAAO,EAAEC;AAAzD,MAA2EV,YAAY,CAACG,aAAD,CAA7F;AAEA,sBACE,QAAC,IAAD,OAAUE,IAAV;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,OAApB;AAAA,iBACGD,UAAU,iBACT,QAAC,QAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAC,uCAA/B;AAAuE,UAAA,EAAE,EAAC,qBAA1E;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,mCACE,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,oBAAD;AAAsB,UAAA,OAAO,EAAC,sBAA9B;AAAA,kCACE,QAAC,aAAD;AAAe,YAAA,UAAU,EAAEF,UAA3B;AAAuC,YAAA,aAAa,EAAEQ;AAAtD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAeGH,iBAAiB,gBAChB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADgB,GAGhBjB,eAAe,CAACY,UAAD,CAAf,IACAA,UAAU,CAACS,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,kBAAsB,eAAC,gBAAD,OAAsBD,SAAtB;AAAiC,QAAA,UAAU,EAAER,UAA7C;AAAyD,QAAA,GAAG,EAAES,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArC,CAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA/BD;;GAAMZ,S;UAE6ED,Y;;;KAF7EC,S;AAiCNA,SAAS,CAACa,SAAV,GAAsB;AACpBZ,EAAAA,UAAU,EAAEb,SAAS,CAAC0B,KADF;AAEpBX,EAAAA,UAAU,EAAEf,SAAS,CAAC2B;AAFF,CAAtB;AAKAf,SAAS,CAACgB,YAAV,GAAyB;AAAEb,EAAAA,UAAU,EAAE;AAAd,CAAzB;AAEA,eAAeH,SAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { isIterableArray } from '../../helpers/utils';\nimport { Card, CardBody, UncontrolledCollapse } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport EducationSummary from './EducationSummary';\nimport Loader from '../common/Loader';\nimport EducationForm from './EducationForm';\nimport Flex from '../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport useFakeFetch from '../../hooks/useFakeFetch';\n\nconst Education = ({ educations: rawEducations, isEditable, ...rest }) => {\n  // Data\n  const { loading: loadingEducations, data: educations, setData: setEducations } = useFakeFetch(rawEducations);\n\n  return (\n    <Card {...rest}>\n      <FalconCardHeader title=\"Education\" />\n      <CardBody className=\"fs--1\">\n        {isEditable && (\n          <Fragment>\n            <Flex align=\"center\" className=\"mb-4 text-primary cursor-pointer fs-0\" id=\"togglerAddEducation\">\n              <span className=\"circle-dashed\">\n                <FontAwesomeIcon icon=\"plus\" />\n              </span>\n              <span className=\"ml-3\">Add new education</span>\n            </Flex>\n            <UncontrolledCollapse toggler=\"#togglerAddEducation\">\n              <EducationForm educations={educations} setEducations={setEducations} />\n              <hr className=\"border-dashed border-bottom-0 my-4\" />\n            </UncontrolledCollapse>\n          </Fragment>\n        )}\n        {loadingEducations ? (\n          <Loader />\n        ) : (\n          isIterableArray(educations) &&\n          educations.map((education, index) => <EducationSummary {...education} isEditable={isEditable} key={index} />)\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nEducation.propTypes = {\n  educations: PropTypes.array,\n  isEditable: PropTypes.bool\n};\n\nEducation.defaultProps = { isEditable: false };\n\nexport default Education;\n"]},"metadata":{},"sourceType":"module"}