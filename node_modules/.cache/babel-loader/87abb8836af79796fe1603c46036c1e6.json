{"ast":null,"code":"import _toConsumableArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import orderBy from'lodash/orderBy';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";export var arrayReducer=function arrayReducer(state,action){var type=action.type,id=action.id,payload=action.payload,sortBy=action.sortBy,order=action.order,isAddToStart=action.isAddToStart,isUpdatedStart=action.isUpdatedStart;switch(type){case'ADD':if(!payload){console.error('payload is required!');return state;}if(state.find(function(item){return item.id===payload.id;})){toast(/*#__PURE__*/_jsx(\"span\",{className:\"text-warning\",children:\"Item already exists in the list!\"}));return state;}if(isAddToStart){return[payload].concat(_toConsumableArray(state));}return[].concat(_toConsumableArray(state),[payload]);case'REMOVE':if(id!==0&&!id){console.error('id is required!');return state;}return state.filter(function(item){return item.id!==id;});case'EDIT':if(id!==0&&!id){console.error('id is required!');return state;}if(isUpdatedStart){var filteredState=state.filter(function(item){return item.id!==id;});return[payload].concat(_toConsumableArray(filteredState));}return state.map(function(item){return item.id===id?payload:item;});case'SORT':if(!sortBy||!order){console.error('sortBy and order, both are required!');return state;}return orderBy(state,sortBy,order);default:return state;}};","map":{"version":3,"sources":["/workspace/GitP_Fal/src/reducers/arrayReducer.js"],"names":["React","orderBy","toast","arrayReducer","state","action","type","id","payload","sortBy","order","isAddToStart","isUpdatedStart","console","error","find","item","filter","filteredState","map"],"mappings":"8GAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,OAASC,KAAT,KAAsB,gBAAtB,C,2CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,MAAR,CAAmB,IACrCC,CAAAA,IADqC,CAC8BD,MAD9B,CACrCC,IADqC,CAC/BC,EAD+B,CAC8BF,MAD9B,CAC/BE,EAD+B,CAC3BC,OAD2B,CAC8BH,MAD9B,CAC3BG,OAD2B,CAClBC,MADkB,CAC8BJ,MAD9B,CAClBI,MADkB,CACVC,KADU,CAC8BL,MAD9B,CACVK,KADU,CACHC,YADG,CAC8BN,MAD9B,CACHM,YADG,CACWC,cADX,CAC8BP,MAD9B,CACWO,cADX,CAE7C,OAAQN,IAAR,EACE,IAAK,KAAL,CACE,GAAI,CAACE,OAAL,CAAc,CACZK,OAAO,CAACC,KAAR,CAAc,sBAAd,EACA,MAAOV,CAAAA,KAAP,CACD,CACD,GAAIA,KAAK,CAACW,IAAN,CAAW,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACT,EAAL,GAAYC,OAAO,CAACD,EAAxB,EAAf,CAAJ,CAAgD,CAC9CL,KAAK,cAAC,aAAM,SAAS,CAAC,cAAhB,8CAAD,CAAL,CACA,MAAOE,CAAAA,KAAP,CACD,CACD,GAAIO,YAAJ,CAAkB,CAChB,OAAQH,OAAR,4BAAoBJ,KAApB,GACD,CACD,mCAAWA,KAAX,GAAkBI,OAAlB,GACF,IAAK,QAAL,CACE,GAAID,EAAE,GAAK,CAAP,EAAY,CAACA,EAAjB,CAAqB,CACnBM,OAAO,CAACC,KAAR,CAAc,iBAAd,EACA,MAAOV,CAAAA,KAAP,CACD,CACD,MAAOA,CAAAA,KAAK,CAACa,MAAN,CAAa,SAAAD,IAAI,QAAIA,CAAAA,IAAI,CAACT,EAAL,GAAYA,EAAhB,EAAjB,CAAP,CACF,IAAK,MAAL,CACE,GAAIA,EAAE,GAAK,CAAP,EAAY,CAACA,EAAjB,CAAqB,CACnBM,OAAO,CAACC,KAAR,CAAc,iBAAd,EACA,MAAOV,CAAAA,KAAP,CACD,CACD,GAAIQ,cAAJ,CAAoB,CAClB,GAAMM,CAAAA,aAAa,CAAGd,KAAK,CAACa,MAAN,CAAa,SAAAD,IAAI,QAAIA,CAAAA,IAAI,CAACT,EAAL,GAAYA,EAAhB,EAAjB,CAAtB,CACA,OAAQC,OAAR,4BAAoBU,aAApB,GACD,CACD,MAAOd,CAAAA,KAAK,CAACe,GAAN,CAAU,SAAAH,IAAI,QAAKA,CAAAA,IAAI,CAACT,EAAL,GAAYA,EAAZ,CAAiBC,OAAjB,CAA2BQ,IAAhC,EAAd,CAAP,CACF,IAAK,MAAL,CACE,GAAI,CAACP,MAAD,EAAW,CAACC,KAAhB,CAAuB,CACrBG,OAAO,CAACC,KAAR,CAAc,sCAAd,EACA,MAAOV,CAAAA,KAAP,CACD,CACD,MAAOH,CAAAA,OAAO,CAACG,KAAD,CAAQK,MAAR,CAAgBC,KAAhB,CAAd,CACF,QACE,MAAON,CAAAA,KAAP,CArCJ,CAuCD,CAzCM","sourcesContent":["import React from 'react';\nimport orderBy from 'lodash/orderBy';\nimport { toast } from 'react-toastify';\n\nexport const arrayReducer = (state, action) => {\n  const { type, id, payload, sortBy, order, isAddToStart, isUpdatedStart } = action;\n  switch (type) {\n    case 'ADD':\n      if (!payload) {\n        console.error('payload is required!');\n        return state;\n      }\n      if (state.find(item => item.id === payload.id)) {\n        toast(<span className=\"text-warning\">Item already exists in the list!</span>);\n        return state;\n      }\n      if (isAddToStart) {\n        return [payload, ...state];\n      }\n      return [...state, payload];\n    case 'REMOVE':\n      if (id !== 0 && !id) {\n        console.error('id is required!');\n        return state;\n      }\n      return state.filter(item => item.id !== id);\n    case 'EDIT':\n      if (id !== 0 && !id) {\n        console.error('id is required!');\n        return state;\n      }\n      if (isUpdatedStart) {\n        const filteredState = state.filter(item => item.id !== id);\n        return [payload, ...filteredState];\n      }\n      return state.map(item => (item.id === id ? payload : item));\n    case 'SORT':\n      if (!sortBy || !order) {\n        console.error('sortBy and order, both are required!');\n        return state;\n      }\n      return orderBy(state, sortBy, order);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}