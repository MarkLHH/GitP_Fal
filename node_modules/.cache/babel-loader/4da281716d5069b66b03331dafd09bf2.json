{"ast":null,"code":"import React,{useContext,useEffect}from'react';import{Route,Switch}from'react-router-dom';import Dashboard from'../components/dashboard/Dashboard';import DashboardAlt from'../components/dashboard-alt/DashboardAlt';import NavbarTop from'../components/navbar/NavbarTop';import NavbarVertical from'../components/navbar/NavbarVertical';import Footer from'../components/footer/Footer';import loadable from'@loadable/component';import AppContext from'../context/Context';import ProductProvider from'../components/e-commerce/ProductProvider';import SidePanelModal from'../components/side-panel/SidePanelModal';import{getPageName}from'../helpers/utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DashboardRoutes=loadable(function(){return import('./DashboardRoutes');});var DashboardLayout=function DashboardLayout(_ref){var location=_ref.location;var _useContext=useContext(AppContext),isFluid=_useContext.isFluid,isVertical=_useContext.isVertical,navbarStyle=_useContext.navbarStyle;var isKanban=getPageName('kanban');useEffect(function(){DashboardRoutes.preload();},[]);useEffect(function(){window.scrollTo(0,0);},[location.pathname]);return/*#__PURE__*/_jsxs(\"div\",{className:isFluid||isKanban?'container-fluid':'container',children:[isVertical&&/*#__PURE__*/_jsx(NavbarVertical,{isKanban:isKanban,navbarStyle:navbarStyle}),/*#__PURE__*/_jsxs(ProductProvider,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(NavbarTop,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,component:Dashboard}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard-alt\",exact:true,component:DashboardAlt}),/*#__PURE__*/_jsx(DashboardRoutes,{})]}),!isKanban&&/*#__PURE__*/_jsx(Footer,{})]}),/*#__PURE__*/_jsx(SidePanelModal,{path:location.pathname})]})]});};export default DashboardLayout;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/layouts/DashboardLayout.js"],"names":["React","useContext","useEffect","Route","Switch","Dashboard","DashboardAlt","NavbarTop","NavbarVertical","Footer","loadable","AppContext","ProductProvider","SidePanelModal","getPageName","DashboardRoutes","DashboardLayout","location","isFluid","isVertical","navbarStyle","isKanban","preload","window","scrollTo","pathname"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CAEA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,mCAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,qCAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,0CAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,yCAA3B,CACA,OAASC,WAAT,KAA4B,kBAA5B,C,wFAEA,GAAMC,CAAAA,eAAe,CAAGL,QAAQ,CAAC,iBAAM,QAAO,mBAAP,CAAN,EAAD,CAAhC,CAEA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,iBACKhB,UAAU,CAACU,UAAD,CADf,CAChCO,OADgC,aAChCA,OADgC,CACvBC,UADuB,aACvBA,UADuB,CACXC,WADW,aACXA,WADW,CAGxC,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,CAAC,QAAD,CAA5B,CAEAZ,SAAS,CAAC,UAAM,CACda,eAAe,CAACO,OAAhB,GACD,CAFQ,CAEN,EAFM,CAAT,CAIApB,SAAS,CAAC,UAAM,CACdqB,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACD,CAFQ,CAEN,CAACP,QAAQ,CAACQ,QAAV,CAFM,CAAT,CAIA,mBACE,aAAK,SAAS,CAAEP,OAAO,EAAIG,QAAX,CAAsB,iBAAtB,CAA0C,WAA1D,WACGF,UAAU,eAAI,KAAC,cAAD,EAAgB,QAAQ,CAAEE,QAA1B,CAAoC,WAAW,CAAED,WAAjD,EADjB,cAEE,MAAC,eAAD,yBACE,aAAK,SAAS,CAAC,SAAf,wBACE,KAAC,SAAD,IADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,CAAsB,SAAS,CAAEf,SAAjC,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,CAA6B,KAAK,KAAlC,CAAmC,SAAS,CAAEC,YAA9C,EAFF,cAGE,KAAC,eAAD,IAHF,GAFF,CAOG,CAACe,QAAD,eAAa,KAAC,MAAD,IAPhB,GADF,cAUE,KAAC,cAAD,EAAgB,IAAI,CAAEJ,QAAQ,CAACQ,QAA/B,EAVF,GAFF,GADF,CAiBD,CA9BD,CAkCA,cAAeT,CAAAA,eAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Dashboard from '../components/dashboard/Dashboard';\r\nimport DashboardAlt from '../components/dashboard-alt/DashboardAlt';\r\nimport NavbarTop from '../components/navbar/NavbarTop';\r\nimport NavbarVertical from '../components/navbar/NavbarVertical';\r\nimport Footer from '../components/footer/Footer';\r\nimport loadable from '@loadable/component';\r\nimport AppContext from '../context/Context';\r\nimport ProductProvider from '../components/e-commerce/ProductProvider';\r\nimport SidePanelModal from '../components/side-panel/SidePanelModal';\r\nimport { getPageName } from '../helpers/utils';\r\n\r\nconst DashboardRoutes = loadable(() => import('./DashboardRoutes'));\r\n\r\nconst DashboardLayout = ({ location }) => {\r\n  const { isFluid, isVertical, navbarStyle } = useContext(AppContext);\r\n\r\n  const isKanban = getPageName('kanban');\r\n\r\n  useEffect(() => {\r\n    DashboardRoutes.preload();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <div className={isFluid || isKanban ? 'container-fluid' : 'container'}>\r\n      {isVertical && <NavbarVertical isKanban={isKanban} navbarStyle={navbarStyle} />}\r\n      <ProductProvider>\r\n        <div className=\"content\">\r\n          <NavbarTop />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Dashboard} />\r\n            <Route path=\"/dashboard-alt\" exact component={DashboardAlt} />\r\n            <DashboardRoutes />\r\n          </Switch>\r\n          {!isKanban && <Footer />}\r\n        </div>\r\n        <SidePanelModal path={location.pathname} />\r\n      </ProductProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboardLayout.propTypes = { location: PropTypes.object.isRequired };\r\n\r\nexport default DashboardLayout;\r\n"]},"metadata":{},"sourceType":"module"}