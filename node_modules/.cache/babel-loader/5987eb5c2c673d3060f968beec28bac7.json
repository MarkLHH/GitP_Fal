{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{KanbanContext}from'../../context/Context';import{Button,Form,Input,Row,Col}from'reactstrap';import ButtonIcon from'../common/ButtonIcon';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddAnotherList=function AddAnotherList(){var _useContext=useContext(KanbanContext),kanbanColumns=_useContext.kanbanColumns,kanbanColumnsDispatch=_useContext.kanbanColumnsDispatch;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showForm=_useState2[0],setShowForm=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),columnHeaderTitle=_useState4[0],setColumnHeaderTitle=_useState4[1];var handleAddColumn=function handleAddColumn(value){kanbanColumnsDispatch({type:'ADD',payload:{id:\"\".concat(kanbanColumns.length+1),name:value,items:[]},id:kanbanColumns.length+1});};var handleSubmit=function handleSubmit(e){e.preventDefault();handleAddColumn(columnHeaderTitle);setShowForm(false);setColumnHeaderTitle('');};return/*#__PURE__*/_jsx(\"div\",{className:\"kanban-column mr-3\",children:showForm?/*#__PURE__*/_jsx(\"div\",{className:\"bg-100 p-card rounded-soft transition-none\",children:/*#__PURE__*/_jsxs(Form,{onSubmit:function onSubmit(e){return handleSubmit(e);},children:[/*#__PURE__*/_jsx(Input,{type:\"textarea\",placeholder:\"Enter list title...\",className:\"mb-2 add-list\",value:columnHeaderTitle,autoFocus:true,onChange:function onChange(_ref){var target=_ref.target;setColumnHeaderTitle(target.value);}}),/*#__PURE__*/_jsxs(Row,{form:true,children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Button,{color:\"primary\",size:\"sm\",block:true,type:\"submit\",children:\"Add\"})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Button,{color:\"outline-secondary\",size:\"sm\",block:true,className:\"border-400\",onClick:function onClick(){setShowForm(false);setColumnHeaderTitle('');},children:\"Cancel\"})})]})]})}):/*#__PURE__*/_jsx(ButtonIcon,{className:\"bg-400 border-400\",color:\"secondary\",block:true,icon:\"plus\",iconClassName:\"mr-1\",onClick:function onClick(){setShowForm(true);},children:\"Add another list\"})});};export default AddAnotherList;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/kanban/AddAnotherList.js"],"names":["React","useContext","useState","KanbanContext","Button","Form","Input","Row","Col","ButtonIcon","AddAnotherList","kanbanColumns","kanbanColumnsDispatch","showForm","setShowForm","columnHeaderTitle","setColumnHeaderTitle","handleAddColumn","value","type","payload","id","length","name","items","handleSubmit","e","preventDefault","target"],"mappings":"sGAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,GAA9B,CAAmCC,GAAnC,KAA8C,YAA9C,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,iBACsBT,UAAU,CAACE,aAAD,CADhC,CACnBQ,aADmB,aACnBA,aADmB,CACJC,qBADI,aACJA,qBADI,eAGKV,QAAQ,CAAC,KAAD,CAHb,wCAGpBW,QAHoB,eAGVC,WAHU,8BAIuBZ,QAAQ,CAAC,EAAD,CAJ/B,yCAIpBa,iBAJoB,eAIDC,oBAJC,eAM3B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC/BN,qBAAqB,CAAC,CACpBO,IAAI,CAAE,KADc,CAEpBC,OAAO,CAAE,CAAEC,EAAE,WAAKV,aAAa,CAACW,MAAd,CAAuB,CAA5B,CAAJ,CAAqCC,IAAI,CAAEL,KAA3C,CAAkDM,KAAK,CAAE,EAAzD,CAFW,CAGpBH,EAAE,CAAEV,aAAa,CAACW,MAAd,CAAuB,CAHP,CAAD,CAArB,CAKD,CAND,CAQA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxBA,CAAC,CAACC,cAAF,GACAV,eAAe,CAACF,iBAAD,CAAf,CACAD,WAAW,CAAC,KAAD,CAAX,CACAE,oBAAoB,CAAC,EAAD,CAApB,CACD,CALD,CAOA,mBACE,YAAK,SAAS,CAAC,oBAAf,UACGH,QAAQ,cACP,YAAK,SAAS,CAAC,4CAAf,uBACE,MAAC,IAAD,EAAM,QAAQ,CAAE,kBAAAa,CAAC,QAAID,CAAAA,YAAY,CAACC,CAAD,CAAhB,EAAjB,wBACE,KAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,WAAW,CAAC,qBAFd,CAGE,SAAS,CAAC,eAHZ,CAIE,KAAK,CAAEX,iBAJT,CAKE,SAAS,KALX,CAME,QAAQ,CAAE,uBAAgB,IAAba,CAAAA,MAAa,MAAbA,MAAa,CACxBZ,oBAAoB,CAACY,MAAM,CAACV,KAAR,CAApB,CACD,CARH,EADF,cAWE,MAAC,GAAD,EAAK,IAAI,KAAT,wBACE,KAAC,GAAD,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,IAAI,CAAC,IAA7B,CAAkC,KAAK,KAAvC,CAAwC,IAAI,CAAC,QAA7C,iBADF,EADF,cAME,KAAC,GAAD,wBACE,KAAC,MAAD,EACE,KAAK,CAAC,mBADR,CAEE,IAAI,CAAC,IAFP,CAGE,KAAK,KAHP,CAIE,SAAS,CAAC,YAJZ,CAKE,OAAO,CAAE,kBAAM,CACbJ,WAAW,CAAC,KAAD,CAAX,CACAE,oBAAoB,CAAC,EAAD,CAApB,CACD,CARH,oBADF,EANF,GAXF,GADF,EADO,cAqCP,KAAC,UAAD,EACE,SAAS,CAAC,mBADZ,CAEE,KAAK,CAAC,WAFR,CAGE,KAAK,KAHP,CAIE,IAAI,CAAC,MAJP,CAKE,aAAa,CAAC,MALhB,CAME,OAAO,CAAE,kBAAM,CACbF,WAAW,CAAC,IAAD,CAAX,CACD,CARH,8BAtCJ,EADF,CAsDD,CA3ED,CA6EA,cAAeJ,CAAAA,cAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { KanbanContext } from '../../context/Context';\r\nimport { Button, Form, Input, Row, Col } from 'reactstrap';\r\nimport ButtonIcon from '../common/ButtonIcon';\r\n\r\nconst AddAnotherList = () => {\r\n  const { kanbanColumns, kanbanColumnsDispatch } = useContext(KanbanContext);\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [columnHeaderTitle, setColumnHeaderTitle] = useState('');\r\n\r\n  const handleAddColumn = value => {\r\n    kanbanColumnsDispatch({\r\n      type: 'ADD',\r\n      payload: { id: `${kanbanColumns.length + 1}`, name: value, items: [] },\r\n      id: kanbanColumns.length + 1\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    handleAddColumn(columnHeaderTitle);\r\n    setShowForm(false);\r\n    setColumnHeaderTitle('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"kanban-column mr-3\">\r\n      {showForm ? (\r\n        <div className=\"bg-100 p-card rounded-soft transition-none\">\r\n          <Form onSubmit={e => handleSubmit(e)}>\r\n            <Input\r\n              type=\"textarea\"\r\n              placeholder=\"Enter list title...\"\r\n              className=\"mb-2 add-list\"\r\n              value={columnHeaderTitle}\r\n              autoFocus\r\n              onChange={({ target }) => {\r\n                setColumnHeaderTitle(target.value);\r\n              }}\r\n            />\r\n            <Row form>\r\n              <Col>\r\n                <Button color=\"primary\" size=\"sm\" block type=\"submit\">\r\n                  Add\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  block\r\n                  className=\"border-400\"\r\n                  onClick={() => {\r\n                    setShowForm(false);\r\n                    setColumnHeaderTitle('');\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      ) : (\r\n        <ButtonIcon\r\n          className=\"bg-400 border-400\"\r\n          color=\"secondary\"\r\n          block\r\n          icon=\"plus\"\r\n          iconClassName=\"mr-1\"\r\n          onClick={() => {\r\n            setShowForm(true);\r\n          }}\r\n        >\r\n          Add another list\r\n        </ButtonIcon>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAnotherList;\r\n"]},"metadata":{},"sourceType":"module"}