{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/common/Select.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactSelect from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Select = ({\n  isCreatable,\n  ...rest\n}) => {\n  if (isCreatable) {\n    return /*#__PURE__*/_jsxDEV(CreatableSelect, { ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ReactSelect, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Select;\nSelect.propTypes = {\n  classNamePrefix: PropTypes.string,\n  isCreatable: PropTypes.bool\n};\nSelect.defaultProps = {\n  classNamePrefix: 'react-select',\n  isCreatable: false\n};\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/Select.js"],"names":["React","PropTypes","ReactSelect","CreatableSelect","Select","isCreatable","rest","propTypes","classNamePrefix","string","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAe,KAAGC;AAAlB,CAAD,KAA8B;AAC3C,MAAID,WAAJ,EAAiB;AACf,wBAAO,QAAC,eAAD,OAAqBC;AAArB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO,QAAC,WAAD,OAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD;;KAAMF,M;AAONA,MAAM,CAACG,SAAP,GAAmB;AACjBC,EAAAA,eAAe,EAAEP,SAAS,CAACQ,MADV;AAEjBJ,EAAAA,WAAW,EAAEJ,SAAS,CAACS;AAFN,CAAnB;AAKAN,MAAM,CAACO,YAAP,GAAsB;AACpBH,EAAAA,eAAe,EAAE,cADG;AAEpBH,EAAAA,WAAW,EAAE;AAFO,CAAtB;AAKA,eAAeD,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactSelect from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\n\nconst Select = ({ isCreatable, ...rest }) => {\n  if (isCreatable) {\n    return <CreatableSelect {...rest} />;\n  }\n  return <ReactSelect {...rest} />;\n};\n\nSelect.propTypes = {\n  classNamePrefix: PropTypes.string,\n  isCreatable: PropTypes.bool\n};\n\nSelect.defaultProps = {\n  classNamePrefix: 'react-select',\n  isCreatable: false\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}