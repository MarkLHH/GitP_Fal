{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/page/Activity.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Alert, Card, CardBody, Col, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Notification from '../notification/Notification';\nimport { isIterableArray } from '../../helpers/utils';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport rawActivities from '../../data/activity/activities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Activity = () => {\n  _s();\n\n  const {\n    loading,\n    data: activities\n  } = useFakeFetch(rawActivities);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Activity log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"fs--1 p-0\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this) : isIterableArray(activities) ? activities.map((activity, index) => {\n        const roundedClass = activities.length === index + 1 ? 'rounded-top-0' : 'rounded-0';\n        return /*#__PURE__*/_jsxDEV(Notification, {\n          className: `border-x-0 border-bottom-0 border-300 ${roundedClass}`,\n          ...activity\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Row, {\n        className: \"p-card\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            color: \"info\",\n            className: \"mb-0\",\n            children: \"No activity found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Activity, \"Y0FU41LC7PIwH2tApfOrKFDLkfo=\", false, function () {\n  return [useFakeFetch];\n});\n\n_c = Activity;\nexport default Activity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activity\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/page/Activity.js"],"names":["React","Alert","Card","CardBody","Col","Row","Loader","FalconCardHeader","Notification","isIterableArray","useFakeFetch","rawActivities","Activity","loading","data","activities","map","activity","index","roundedClass","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,GAAhC,EAAqCC,GAArC,QAAgD,YAAhD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAgCL,YAAY,CAACC,aAAD,CAAlD;AAEA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,WAApB;AAAA,gBACGE,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADM,GAEJJ,eAAe,CAACM,UAAD,CAAf,GACFA,UAAU,CAACC,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAClC,cAAMC,YAAY,GAAGJ,UAAU,CAACK,MAAX,KAAsBF,KAAK,GAAG,CAA9B,GAAkC,eAAlC,GAAoD,WAAzE;AAEA,4BACE,QAAC,YAAD;AAEE,UAAA,SAAS,EAAG,yCAAwCC,YAAa,EAFnE;AAAA,aAGMF;AAHN,WACOC,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OAVD,CADE,gBAaF,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAC,MAAb;AAAoB,YAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAjCD;;GAAMN,Q;UACkCF,Y;;;KADlCE,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { Alert, Card, CardBody, Col, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Notification from '../notification/Notification';\nimport { isIterableArray } from '../../helpers/utils';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport rawActivities from '../../data/activity/activities';\n\nconst Activity = () => {\n  const { loading, data: activities } = useFakeFetch(rawActivities);\n\n  return (\n    <Card>\n      <FalconCardHeader title=\"Activity log\" />\n      <CardBody className=\"fs--1 p-0\">\n        {loading ? (\n          <Loader />\n        ) : isIterableArray(activities) ? (\n          activities.map((activity, index) => {\n            const roundedClass = activities.length === index + 1 ? 'rounded-top-0' : 'rounded-0';\n\n            return (\n              <Notification\n                key={index}\n                className={`border-x-0 border-bottom-0 border-300 ${roundedClass}`}\n                {...activity}\n              />\n            );\n          })\n        ) : (\n          <Row className=\"p-card\">\n            <Col>\n              <Alert color=\"info\" className=\"mb-0\">\n                No activity found\n              </Alert>\n            </Col>\n          </Row>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Activity;\n"]},"metadata":{},"sourceType":"module"}