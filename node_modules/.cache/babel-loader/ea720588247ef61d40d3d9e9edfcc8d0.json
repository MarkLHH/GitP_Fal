{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/kanban/TaskCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Card, CardBody, Badge, CardImg, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledTooltip } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Avatar from '../common/Avatar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { KanbanContext } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskCard = ({\n  taskCardItemId,\n  taskCard,\n  taskCardImage,\n  members,\n  taskCardIndex\n}) => {\n  _s();\n\n  const {\n    getItemStyle,\n    setModalContent,\n    setModal\n  } = useContext(KanbanContext);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: `draggableId${taskCardItemId}`,\n    index: taskCardIndex,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-item\",\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      style: provided.draggableProps.style,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"kanban-item-card hover-actions-trigger \",\n        style: getItemStyle(snapshot.isDragging),\n        onClick: () => {\n          setModalContent({\n            taskCard,\n            taskCardImage\n          });\n          setModal(true);\n        },\n        children: [taskCardImage && /*#__PURE__*/_jsxDEV(CardImg, {\n          top: true,\n          width: \"100%\",\n          src: taskCardImage.url,\n          className: \"overflow-hidden position-relative\",\n          alt: \"Card image cap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [taskCard.labels && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: taskCard.labels.map((label, index) => /*#__PURE__*/_jsxDEV(Badge, {\n              className: `badge-soft-${label.color} d-inline-block py-1 mr-1 mb-1`,\n              children: label.text\n            }, index + 10, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-0 font-weight-medium text-sans-serif\",\n            dangerouslySetInnerHTML: {\n              __html: taskCard.title\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), (taskCard.members || taskCard.attachments || taskCard.checklist) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-item-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-500\",\n              children: [taskCard.members && members.find(member => member.id === 1) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: \"eye\",\n                  className: \"mr-2\",\n                  id: `cardId-${taskCard.id}`,\n                  transform: \"grow-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n                  target: `cardId-${taskCard.id}`,\n                  children: \"You're assigned in this card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true), taskCard.attachments && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: `attachments-${taskCard.id}`,\n                className: \"mr-2\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: \"paperclip\",\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: taskCard.attachments.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n                  target: `attachments-${taskCard.id}`,\n                  children: \"Attachments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this), taskCard.checklist && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: `Checklist-${taskCard.id}`,\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: \"check\",\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [taskCard.checklist.completed, \"/\", taskCard.checklist.totalCount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n                  target: `Checklist-${taskCard.id}`,\n                  children: \"Checklist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: taskCard.members && members.map((member, index) => /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#!\",\n                className: index > 0 ? 'ml-n1 p-0' : 'p-0',\n                id: `member-${member.id}-${taskCard.id}`,\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: member.avatar.src,\n                  size: \"l\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n                  target: `member-${member.id}-${taskCard.id}`,\n                  children: member.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n            className: \"position-absolute text-sans-serif t-0 r-0 mt-card mr-card hover-actions\",\n            onClick: e => {\n              e.stopPropagation();\n            },\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              color: \"falcon-default\",\n              size: \"sm\",\n              className: \"py-0 px-2\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: \"ellipsis-h\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              right: true,\n              className: \"py-0\",\n              children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                children: \"Add Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                children: \"Copy link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                divider: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                className: \"text-danger\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskCard, \"M6PeQRojZgKiNPW7TRRtIJT3L5M=\");\n\n_c = TaskCard;\nexport default TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/kanban/TaskCard.js"],"names":["React","useContext","Draggable","Card","CardBody","Badge","CardImg","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledTooltip","Link","Avatar","FontAwesomeIcon","KanbanContext","TaskCard","taskCardItemId","taskCard","taskCardImage","members","taskCardIndex","getItemStyle","setModalContent","setModal","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","isDragging","url","labels","map","label","index","color","text","__html","title","attachments","checklist","find","member","id","length","completed","totalCount","avatar","src","name","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Badge,\r\n  CardImg,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledTooltip\r\n} from 'reactstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '../common/Avatar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { KanbanContext } from '../../context/Context';\r\n\r\nconst TaskCard = ({ taskCardItemId, taskCard, taskCardImage, members, taskCardIndex }) => {\r\n  const { getItemStyle, setModalContent, setModal } = useContext(KanbanContext);\r\n  return (\r\n    <Draggable draggableId={`draggableId${taskCardItemId}`} index={taskCardIndex}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          className=\"kanban-item\"\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          style={provided.draggableProps.style}\r\n        >\r\n          <Card\r\n            className=\"kanban-item-card hover-actions-trigger \"\r\n            style={getItemStyle(snapshot.isDragging)}\r\n            onClick={() => {\r\n              setModalContent({ taskCard, taskCardImage });\r\n              setModal(true);\r\n            }}\r\n          >\r\n            {taskCardImage && (\r\n              <CardImg\r\n                top\r\n                width=\"100%\"\r\n                src={taskCardImage.url}\r\n                className=\"overflow-hidden position-relative\"\r\n                alt=\"Card image cap\"\r\n              />\r\n            )}\r\n\r\n            <CardBody>\r\n              {taskCard.labels && (\r\n                <div className=\"mb-2\">\r\n                  {taskCard.labels.map((label, index) => (\r\n                    <Badge className={`badge-soft-${label.color} d-inline-block py-1 mr-1 mb-1`} key={index + 10}>\r\n                      {label.text}\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              <p\r\n                className=\"mb-0 font-weight-medium text-sans-serif\"\r\n                dangerouslySetInnerHTML={{ __html: taskCard.title }}\r\n              />\r\n              {(taskCard.members || taskCard.attachments || taskCard.checklist) && (\r\n                <div className=\"kanban-item-footer\">\r\n                  <div className=\"text-500\">\r\n                    {taskCard.members && members.find(member => member.id === 1) && (\r\n                      <>\r\n                        <FontAwesomeIcon icon=\"eye\" className=\"mr-2\" id={`cardId-${taskCard.id}`} transform=\"grow-1\" />\r\n                        <UncontrolledTooltip target={`cardId-${taskCard.id}`}>\r\n                          You're assigned in this card\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    )}\r\n                    {taskCard.attachments && (\r\n                      <span id={`attachments-${taskCard.id}`} className=\"mr-2\">\r\n                        <FontAwesomeIcon icon=\"paperclip\" className=\"mr-1\" />\r\n                        <span>{taskCard.attachments.length}</span>\r\n                        <UncontrolledTooltip target={`attachments-${taskCard.id}`}>Attachments</UncontrolledTooltip>\r\n                      </span>\r\n                    )}\r\n                    {taskCard.checklist && (\r\n                      <span id={`Checklist-${taskCard.id}`}>\r\n                        <FontAwesomeIcon icon=\"check\" className=\"mr-1\" />\r\n                        <span>\r\n                          {taskCard.checklist.completed}/{taskCard.checklist.totalCount}\r\n                        </span>\r\n                        <UncontrolledTooltip target={`Checklist-${taskCard.id}`}>Checklist</UncontrolledTooltip>\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {taskCard.members &&\r\n                      members.map((member, index) => (\r\n                        <Link\r\n                          to=\"#!\"\r\n                          className={index > 0 ? 'ml-n1 p-0' : 'p-0'}\r\n                          key={index}\r\n                          id={`member-${member.id}-${taskCard.id}`}\r\n                        >\r\n                          <Avatar src={member.avatar.src} size=\"l\" />\r\n                          <UncontrolledTooltip target={`member-${member.id}-${taskCard.id}`}>\r\n                            {member.name}\r\n                          </UncontrolledTooltip>\r\n                        </Link>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <UncontrolledDropdown\r\n                className=\"position-absolute text-sans-serif t-0 r-0 mt-card mr-card hover-actions\"\r\n                onClick={e => {\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                <DropdownToggle color=\"falcon-default\" size=\"sm\" className=\"py-0 px-2\">\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"py-0\">\r\n                  <DropdownItem>Add Card</DropdownItem>\r\n                  <DropdownItem>Edit</DropdownItem>\r\n                  <DropdownItem>Copy link</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem className=\"text-danger\">Remove</DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n"]},"metadata":{},"sourceType":"module"}