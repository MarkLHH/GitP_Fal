{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/page/Associations.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Alert, Card, CardBody, Col, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Association from '../association/Association';\nimport { isIterableArray } from '../../helpers/utils';\nimport rawAssociations from '../../data/association/associations';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Associations = () => {\n  _s();\n\n  const {\n    loading,\n    data: associations\n  } = useFakeFetch(rawAssociations);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Associations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"fs--1\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this) : isIterableArray(associations) ? /*#__PURE__*/_jsxDEV(Row, {\n        children: associations.map((association, index) => /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          md: 4,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Association, { ...association\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"info\",\n        className: \"mb-0\",\n        children: \"No association found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Associations, \"493f4iA1xXiEX3W06xwmHejM9JM=\", false, function () {\n  return [useFakeFetch];\n});\n\n_c = Associations;\nexport default Associations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Associations\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/page/Associations.js"],"names":["React","Alert","Card","CardBody","Col","Row","Loader","FalconCardHeader","Association","isIterableArray","rawAssociations","useFakeFetch","Associations","loading","data","associations","map","association","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,GAAhC,EAAqCC,GAArC,QAAgD,YAAhD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAkCJ,YAAY,CAACD,eAAD,CAApD;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,OAApB;AAAA,gBACGG,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADM,GAEJJ,eAAe,CAACM,YAAD,CAAf,gBACF,QAAC,GAAD;AAAA,kBACGA,YAAY,CAACC,GAAb,CAAiB,CAACC,WAAD,EAAcC,KAAd,kBAChB,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAmB,UAAA,SAAS,EAAC,MAA7B;AAAA,iCACE,QAAC,WAAD,OAAiBD;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF,WAAyCC,KAAzC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADE,gBASF,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzBD;;GAAMN,Y;UACoCD,Y;;;KADpCC,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Alert, Card, CardBody, Col, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Association from '../association/Association';\nimport { isIterableArray } from '../../helpers/utils';\nimport rawAssociations from '../../data/association/associations';\nimport useFakeFetch from '../../hooks/useFakeFetch';\n\nconst Associations = () => {\n  const { loading, data: associations } = useFakeFetch(rawAssociations);\n\n  return (\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Associations\" />\n      <CardBody className=\"fs--1\">\n        {loading ? (\n          <Loader />\n        ) : isIterableArray(associations) ? (\n          <Row>\n            {associations.map((association, index) => (\n              <Col sm={6} md={4} className=\"mb-3\" key={index}>\n                <Association {...association} />\n              </Col>\n            ))}\n          </Row>\n        ) : (\n          <Alert color=\"info\" className=\"mb-0\">\n            No association found\n          </Alert>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Associations;\n"]},"metadata":{},"sourceType":"module"}