{"ast":null,"code":"import React,{useContext}from'react';import FalconCardHeader from'../common/FalconCardHeader';import CardDropdown from'./CardDropdown';import{Button,Card,CardBody}from'reactstrap';import{Link}from'react-router-dom';import Flex from'../common/Flex';import echarts from'echarts/lib/echarts';import ReactEchartsCore from'echarts-for-react/lib/core';import{getPosition,getGrays}from'../../helpers/utils';import AppContext from'../../context/Context';import'echarts/lib/chart/bar';import'echarts/lib/component/tooltip';import'echarts/lib/component/legend';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getOption=function getOption(data,colors,isDark){var grays=getGrays(isDark);return{dataset:{source:data},tooltip:{trigger:'item',padding:[7,10],backgroundColor:grays.white,borderColor:grays['300'],borderWidth:1,textStyle:{color:grays.dark},transitionDuration:0,position:function position(pos,params,dom,rect,size){return getPosition(pos,params,dom,rect,size);},formatter:function formatter(params){return\"<div class=\\\"font-weight-semi-bold\\\">\".concat(params.seriesName,\"</div><div class=\\\"fs--1 text-600\\\">\\n        <strong>\").concat(params.name,\":</strong> \").concat(params.value[params.componentIndex+1],\"\\n      </div>\");}},legend:{data:data[0].slice(1),left:'left',itemWidth:10,itemHeight:10,borderRadius:0,icon:'circle',inactiveColor:grays['500'],textStyle:{color:grays['1100']}},xAxis:{type:'category',axisLabel:{color:grays['400']},axisLine:{lineStyle:{color:grays['300'],type:'dashed'}},axisTick:false,boundaryGap:true},yAxis:{axisPointer:{type:'none'},axisTick:'none',splitLine:{lineStyle:{color:grays['300'],type:'dashed'}},axisLine:{show:false},axisLabel:{color:grays['400']}},series:data[0].slice(1).map(function(value,index){return{type:'bar',barWidth:'12%',barGap:'30%',label:{normal:{show:false}},z:10,itemStyle:{normal:{barBorderRadius:[10,10,0,0],color:colors[index]}}};}),grid:{right:'0',left:'30px',bottom:'10%',top:'20%'}};};var TopProducts=function TopProducts(_ref){var data=_ref.data,colors=_ref.colors,className=_ref.className;var _useContext=useContext(AppContext),isDark=_useContext.isDark;return/*#__PURE__*/_jsxs(Card,{className:className,children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Top Products\",titleTag:\"h6\",className:\"py-2\",children:/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Button,{color:\"link\",size:\"sm\",tag:Link,className:\"mr-2\",to:\"#!\",children:\"View Details\"}),/*#__PURE__*/_jsx(CardDropdown,{})]})}),/*#__PURE__*/_jsx(CardBody,{className:\"h-100\",children:/*#__PURE__*/_jsx(ReactEchartsCore,{echarts:echarts,option:getOption(data,colors,isDark),style:{minHeight:'18.75rem'}})})]});};export default TopProducts;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/dashboard-alt/TopProducts.js"],"names":["React","useContext","FalconCardHeader","CardDropdown","Button","Card","CardBody","Link","Flex","echarts","ReactEchartsCore","getPosition","getGrays","AppContext","getOption","data","colors","isDark","grays","dataset","source","tooltip","trigger","padding","backgroundColor","white","borderColor","borderWidth","textStyle","color","dark","transitionDuration","position","pos","params","dom","rect","size","formatter","seriesName","name","value","componentIndex","legend","slice","left","itemWidth","itemHeight","borderRadius","icon","inactiveColor","xAxis","type","axisLabel","axisLine","lineStyle","axisTick","boundaryGap","yAxis","axisPointer","splitLine","show","series","map","index","barWidth","barGap","label","normal","z","itemStyle","barBorderRadius","grid","right","bottom","top","TopProducts","className","minHeight"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport CardDropdown from './CardDropdown';\nimport { Button, Card, CardBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Flex from '../common/Flex';\nimport echarts from 'echarts/lib/echarts';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport { getPosition, getGrays } from '../../helpers/utils';\nimport AppContext from '../../context/Context';\n\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/legend';\n\nconst getOption = (data, colors, isDark) => {\n  const grays = getGrays(isDark);\n  return {\n    dataset: { source: data },\n    tooltip: {\n      trigger: 'item',\n      padding: [7, 10],\n      backgroundColor: grays.white,\n      borderColor: grays['300'],\n      borderWidth: 1,\n      textStyle: { color: grays.dark },\n      transitionDuration: 0,\n      position(pos, params, dom, rect, size) {\n        return getPosition(pos, params, dom, rect, size);\n      },\n      formatter: function(params) {\n        return `<div class=\"font-weight-semi-bold\">${params.seriesName}</div><div class=\"fs--1 text-600\">\n        <strong>${params.name}:</strong> ${params.value[params.componentIndex + 1]}\n      </div>`;\n      }\n    },\n    legend: {\n      data: data[0].slice(1),\n      left: 'left',\n      itemWidth: 10,\n      itemHeight: 10,\n      borderRadius: 0,\n      icon: 'circle',\n      inactiveColor: grays['500'],\n      textStyle: { color: grays['1100'] }\n    },\n    xAxis: {\n      type: 'category',\n      axisLabel: { color: grays['400'] },\n      axisLine: {\n        lineStyle: {\n          color: grays['300'],\n          type: 'dashed'\n        }\n      },\n      axisTick: false,\n      boundaryGap: true\n    },\n    yAxis: {\n      axisPointer: { type: 'none' },\n      axisTick: 'none',\n      splitLine: {\n        lineStyle: {\n          color: grays['300'],\n          type: 'dashed'\n        }\n      },\n      axisLine: { show: false },\n      axisLabel: { color: grays['400'] }\n    },\n    series: data[0].slice(1).map((value, index) => ({\n      type: 'bar',\n      barWidth: '12%',\n      barGap: '30%',\n      label: { normal: { show: false } },\n      z: 10,\n      itemStyle: {\n        normal: {\n          barBorderRadius: [10, 10, 0, 0],\n          color: colors[index]\n        }\n      }\n    })),\n    grid: { right: '0', left: '30px', bottom: '10%', top: '20%' }\n  };\n};\n\nconst TopProducts = ({ data, colors, className }) => {\n  const { isDark } = useContext(AppContext);\n\n  return (\n    <Card className={className}>\n      <FalconCardHeader title=\"Top Products\" titleTag=\"h6\" className=\"py-2\">\n        <Flex>\n          <Button color=\"link\" size=\"sm\" tag={Link} className=\"mr-2\" to=\"#!\">\n            View Details\n          </Button>\n          <CardDropdown />\n        </Flex>\n      </FalconCardHeader>\n      <CardBody className=\"h-100\">\n        <ReactEchartsCore\n          echarts={echarts}\n          option={getOption(data, colors, isDark)}\n          style={{ minHeight: '18.75rem' }}\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\nTopProducts.propTypes = {\n  data: PropTypes.array.isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  className: PropTypes.string\n};\n\nexport default TopProducts;\n"]},"metadata":{},"sourceType":"module"}