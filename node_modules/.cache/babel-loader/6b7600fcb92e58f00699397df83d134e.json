{"ast":null,"code":"import React,{Fragment}from'react';import{Button,Card,CardBody,Col,Row}from'reactstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import PageHeader from'../common/PageHeader';import FalconCardHeader from'../common/FalconCardHeader';import FalconEditor from'../common/FalconEditor';import classNames from'classnames';import Notification from'../notification/Notification';import generic1 from'../../assets/img/generic/1.jpg';import generic3 from'../../assets/img/generic/3.jpg';import generic6 from'../../assets/img/generic/6.jpg';import generic7 from'../../assets/img/generic/7.jpg';import generic8 from'../../assets/img/generic/8.jpg';import generic10 from'../../assets/img/generic/10.jpg';import generic11 from'../../assets/img/generic/11.jpg';import generic12 from'../../assets/img/generic/12.jpg';import team1 from'../../assets/img/team/1.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var cardStyleCode=\"<CardColumns>\\n{\\n  ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => (\\n    <Card body inverse color={color} className={classNames({'bg-dark' : color === 'light'}) } key={index}>\\n      <CardTitle>{color} card title</CardTitle>\\n      <CardText>\\n        Some quick example text to build on the card \\n        title and make up the bulk of the card's content.\\n      </CardText>\\n    </Card>\\n    ))\\n }\\n</CardColumns>\";var basicExampleCode=\"<Card style={{width: '20rem'}}>\\n  <CardImg src={generic1} top />\\n  <CardBody>\\n    <CardTitle tag=\\\"h5\\\">\\n      Card title\\n    </CardTitle>\\n    <CardText tag=\\\"p\\\">\\n      Some quick example text to build on the card\\n      title and make up the bulk of the card's\\n      content.\\n    </CardText>\\n    <Button color=\\\"primary\\\" size=\\\"sm\\\">\\n      Go somewhere\\n    </Button>\\n  </CardBody>\\n</Card>\";var cardWithListCode=\"<ListGroup>\\n  <ListGroupItem>\\n    Cras justo odio\\n  </ListGroupItem>\\n  <ListGroupItem>\\n    Dapibus ac facilisis in\\n  </ListGroupItem>\\n  <ListGroupItem>\\n    Morbi leo risus\\n  </ListGroupItem>\\n  <ListGroupItem>\\n    Porta ac consectetur ac\\n  </ListGroupItem>\\n  <ListGroupItem>\\n    Vestibulum at eros\\n  </ListGroupItem>\\n  <ListGroupItem>\\n    Odio at morbi\\n  </ListGroupItem>\\n</ListGroup>\";var cardWithImageCode=\"<Card style={{width: '20rem'}}>\\n  <CardImg src={generic3} top />\\n  <CardBody>\\n    <CardTitle tag=\\\"h5\\\">Card title</CardTitle>\\n    <CardText tag=\\\"p\\\">\\n      Some quick example text to build on the card title and make up the bulk of the card's content.\\n    </CardText>\\n  </CardBody>\\n  <ListGroup flush>\\n    <ListGroupItem>Cras justo odio</ListGroupItem>\\n    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\\n    <ListGroupItem>Vestibulum at eros</ListGroupItem>\\n    <ListGroupItem>\\n      <a className=\\\"card-link\\\" href=\\\"#!\\\">\\n        Card link\\n      </a>\\n      <a className=\\\"card-link\\\" href=\\\"#!\\\">\\n        Another link\\n      </a>\\n    </ListGroupItem>\\n  </ListGroup>\\n</Card>\";var cardGroupsCode=\"<CardGroup>\\n  <Card>\\n    <CardImg top width=\\\"100%\\\" src={generic10} alt=\\\"Card image cap\\\" />\\n    <CardBody>\\n      <CardTitle tag=\\\"h5\\\">First card title</CardTitle>\\n      <CardText>\\n        This is a wider card with supporting text below as a natural lead-in to additional content. This\\n        content is a little bit longer.\\n      </CardText>\\n      <p className=\\\"text-muted\\\">\\n        <small className=\\\"text-muted\\\"> Last updated 45 mins ago</small>\\n      </p>\\n    </CardBody>\\n  </Card>\\n  <Card>\\n    <CardImg top width=\\\"100%\\\" src={generic11} alt=\\\"Card image cap\\\" />\\n    <CardBody>\\n      <CardTitle tag=\\\"h5\\\">Second card title</CardTitle>\\n      <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\\n      <p className=\\\"text-muted\\\">\\n        <small className=\\\"text-muted\\\">Last updated an hour ago</small>\\n      </p>\\n    </CardBody>\\n  </Card>\\n  <Card>\\n    <CardImg top width=\\\"100%\\\" src={generic12} alt=\\\"Card image cap\\\" />\\n    <CardBody>\\n      <CardTitle tag=\\\"h5\\\">Yet another card title</CardTitle>\\n      <CardText>\\n        This is a wider card with supporting text below as a natural lead-in to additional content. This card\\n        has even longer content than the first to show that equal height action.\\n      </CardText>\\n      <p className=\\\"text-muted\\\">\\n        <small className=\\\"text-muted\\\"> Last updated yesterday</small>\\n      </p>\\n    </CardBody>\\n  </Card>\\n</CardGroup>\";var cardDeckCode=\"<CardDeck>\\n  <Card>\\n    <CardImg top width=\\\"100%\\\" src={generic6} alt=\\\"Card image cap\\\" />\\n    <CardBody>\\n      <CardTitle tag=\\\"h5\\\">Awesome card title</CardTitle>\\n      <CardText>\\n        This is a wider card with supporting text below as a natural lead-in to additional content. This\\n        content is a little bit longer.\\n      </CardText>\\n      <p className=\\\"text-muted\\\">\\n        <small className=\\\"text-muted\\\"> Last updated 45 mins ago</small>\\n      </p>\\n    </CardBody>\\n  </Card>\\n  <Card>\\n    <CardImg top width=\\\"100%\\\" src={generic7} alt=\\\"Card image cap\\\" />\\n    <CardBody>\\n      <CardTitle tag=\\\"h5\\\">Beautiful card title</CardTitle>\\n      <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\\n      <p className=\\\"text-muted\\\">\\n        <small className=\\\"text-muted\\\">Last updated an hour ago</small>\\n      </p>\\n    </CardBody>\\n  </Card>\\n  <Card>\\n    <CardImg top width=\\\"100%\\\" src={generic8} alt=\\\"Card image cap\\\" className=\\\"rounded-0\\\" />\\n    <CardBody>\\n      <CardTitle tag=\\\"h5\\\">Gorgeous card title</CardTitle>\\n      <CardText>\\n        This is a wider card with supporting text below as a natural lead-in to additional content. This card\\n        has even longer content than the first to show that equal height action.\\n      </CardText>\\n      <p className=\\\"text-muted\\\">\\n        <small className=\\\"text-muted\\\"> Last updated yesterday</small>\\n      </p>\\n    </CardBody>\\n  </Card>\\n</CardDeck>\";var backgroundCode=\"<Card className=\\\"bg-dark text-white\\\" inverse style={{maxWidth: '30rem'}}>\\n  <CardImg src={generic3} alt=\\\"Card image cap\\\" />\\n  <CardImgOverlay className=\\\"d-flex align-items-end\\\">\\n    <div>\\n      <CardTitle tag=\\\"h5\\\" className=\\\"text-white\\\">\\n        Card Title\\n      </CardTitle>\\n      <CardText>\\n        Some quick example text to build on the card title and make up the bulk of the card's content.\\n      </CardText>\\n    </div>\\n  </CardImgOverlay>\\n</Card>\";var propertiesCard=\"Card.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  inverse: PropTypes.bool,\\n  color: PropTypes.string,\\n  body: PropTypes.bool,\\n  className: PropTypes.string\\n}\\n\";var propertiesCardBody=\"CardBody.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\";var propertiesCardColumns=\"CardColumns.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\";var propertiesCardDeck=\"CardDeck.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\";var propertiesCardFooter=\"CardFooter.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\";var propertiesCardGroup=\"CardGroup.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\";var propertiesCardHeader=\"CardHeader.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\\n\";var propertiesCardImg=\"CardImg.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string,\\n  // Use top or bottom to position image via \\\"card-img-top\\\" or \\\"card-img-bottom\\\"\\n  top: PropTypes.bool,\\n  bottom: PropTypes.bool\\n};\";var propertiesCardImgOverlay=\"CardImgOverlay.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\";var propertiesCardLink=\"CardLink.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string,\\n  // ref will only get you a reference to the CardLink component, use innerRef to get a reference to the DOM element (for things like focus management).\\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\\n};\";var propertiesCardSubtitle=\"CardSubtitle.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\";var propertiesCardText=\"CardText.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\";var propertiesCardTitle=\"CardTitle.propTypes = {\\n  // Pass in a Component to override default element\\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\\n  className: PropTypes.string\\n};\";var Cards=function Cards(){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Cards\",description:\"Falcon\\u2019s cards provide a flexible and extensible content container with multiple variants and options.\",className:\"mb-3\",children:/*#__PURE__*/_jsxs(Button,{tag:\"a\",href:\"https://reactstrap.github.io/components/card\",target:\"_blank\",color:\"link\",size:\"sm\",className:\"pl-0\",children:[\"Cards on reactstrap\",/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"chevron-right\",className:\"ml-1 fs--2\"})]})}),/*#__PURE__*/_jsxs(Row,{noGutters:true,children:[/*#__PURE__*/_jsx(Col,{xl:6,className:\"pr-xl-2\",children:/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Basic Example\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:basicExampleCode,scope:{generic1:generic1},language:\"jsx\"})})]})}),/*#__PURE__*/_jsx(Col,{xl:6,className:\"pl-xl-2\",children:/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Card with list\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:cardWithListCode})})]})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Properties\",light:false}),/*#__PURE__*/_jsxs(CardBody,{className:\"bg-light\",children:[/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCard,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardBody,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardColumns,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardDeck,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardFooter,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardGroup,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardHeader,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardImg,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardImgOverlay,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardLink,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardSubtitle,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardText,hidePreview:true}),/*#__PURE__*/_jsx(FalconEditor,{code:propertiesCardTitle,hidePreview:true})]})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Card with image\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:cardWithImageCode,scope:{generic3:generic3},language:\"jsx\"})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Notification\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(Notification,{avatar:{src:team1,size:'xl'},time:\"Just Now\",emoji:\"\\uD83D\\uDCE2\",to:\"#!\",children:\"Announcing the winners of the The only book awards decided by you, the readers. Check out the champions and runners-up in all 21 categories now!\"})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Background\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:backgroundCode,scope:{generic3:generic3},language:\"jsx\"})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Cards Groups\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:cardGroupsCode,scope:{generic10:generic10,generic11:generic11,generic12:generic12}})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Cards Deck\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:cardDeckCode,scope:{generic6:generic6,generic7:generic7,generic8:generic8}})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Card styles\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:/*#__PURE__*/_jsx(FalconEditor,{code:cardStyleCode,scope:{classNames:classNames},language:\"jsx\"})})]})]});};export default Cards;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/bootstrap-components/Cards.js"],"names":["React","Fragment","Button","Card","CardBody","Col","Row","FontAwesomeIcon","PageHeader","FalconCardHeader","FalconEditor","classNames","Notification","generic1","generic3","generic6","generic7","generic8","generic10","generic11","generic12","team1","cardStyleCode","basicExampleCode","cardWithListCode","cardWithImageCode","cardGroupsCode","cardDeckCode","backgroundCode","propertiesCard","propertiesCardBody","propertiesCardColumns","propertiesCardDeck","propertiesCardFooter","propertiesCardGroup","propertiesCardHeader","propertiesCardImg","propertiesCardImgOverlay","propertiesCardLink","propertiesCardSubtitle","propertiesCardText","propertiesCardTitle","Cards","src","size"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,QAAvB,CAAiCC,GAAjC,CAAsCC,GAAtC,KAAiD,YAAjD,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iCAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iCAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iCAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,6BAAlB,C,wFAEA,GAAMC,CAAAA,aAAa,6dAAnB,CAcA,GAAMC,CAAAA,gBAAgB,wZAAtB,CAiBA,GAAMC,CAAAA,gBAAgB,qZAAtB,CAqBA,GAAMC,CAAAA,iBAAiB,msBAAvB,CAuBA,GAAMC,CAAAA,cAAc,48CAApB,CAuCA,GAAMC,CAAAA,YAAY,i+CAAlB,CAuCA,GAAMC,CAAAA,cAAc,6dAApB,CAcA,GAAMC,CAAAA,cAAc,iQAApB,CASA,GAAMC,CAAAA,kBAAkB,mLAAxB,CAKA,GAAMC,CAAAA,qBAAqB,sLAA3B,CAKA,GAAMC,CAAAA,kBAAkB,mLAAxB,CAMA,GAAMC,CAAAA,oBAAoB,qLAA1B,CAKA,GAAMC,CAAAA,mBAAmB,oLAAzB,CAKA,GAAMC,CAAAA,oBAAoB,uLAA1B,CAMA,GAAMC,CAAAA,iBAAiB,2TAAvB,CAQA,GAAMC,CAAAA,wBAAwB,yLAA9B,CAKA,GAAMC,CAAAA,kBAAkB,mZAAxB,CAOA,GAAMC,CAAAA,sBAAsB,uLAA5B,CAKA,GAAMC,CAAAA,kBAAkB,mLAAxB,CAKA,GAAMC,CAAAA,mBAAmB,oLAAzB,CAMA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,sBACZ,MAAC,QAAD,yBACE,KAAC,UAAD,EACE,KAAK,CAAC,OADR,CAEE,WAAW,CAAC,6GAFd,CAGE,SAAS,CAAC,MAHZ,uBAKE,MAAC,MAAD,EACE,GAAG,CAAC,GADN,CAEE,IAAI,CAAC,8CAFP,CAGE,MAAM,CAAC,QAHT,CAIE,KAAK,CAAC,MAJR,CAKE,IAAI,CAAC,IALP,CAME,SAAS,CAAC,MANZ,8CASE,KAAC,eAAD,EAAiB,IAAI,CAAC,eAAtB,CAAsC,SAAS,CAAC,YAAhD,EATF,GALF,EADF,cAkBE,MAAC,GAAD,EAAK,SAAS,KAAd,wBACE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,SAAS,CAAC,SAAtB,uBACE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,eAAxB,CAAwC,KAAK,CAAE,KAA/C,EADF,cAEE,KAAC,QAAD,EAAU,SAAS,CAAC,UAApB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAEnB,gBAApB,CAAsC,KAAK,CAAE,CAAEV,QAAQ,CAARA,QAAF,CAA7C,CAA2D,QAAQ,CAAC,KAApE,EADF,EAFF,GADF,EADF,cASE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,SAAS,CAAC,SAAtB,uBACE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,gBAAxB,CAAyC,KAAK,CAAE,KAAhD,EADF,cAEE,KAAC,QAAD,EAAU,SAAS,CAAC,UAApB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAEW,gBAApB,EADF,EAFF,GADF,EATF,GAlBF,cAoCE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,YAAxB,CAAqC,KAAK,CAAE,KAA5C,EADF,cAEE,MAAC,QAAD,EAAU,SAAS,CAAC,UAApB,wBACE,KAAC,YAAD,EAAc,IAAI,CAAEK,cAApB,CAAoC,WAAW,KAA/C,EADF,cAEE,KAAC,YAAD,EAAc,IAAI,CAAEC,kBAApB,CAAwC,WAAW,KAAnD,EAFF,cAGE,KAAC,YAAD,EAAc,IAAI,CAAEC,qBAApB,CAA2C,WAAW,KAAtD,EAHF,cAIE,KAAC,YAAD,EAAc,IAAI,CAAEC,kBAApB,CAAwC,WAAW,KAAnD,EAJF,cAKE,KAAC,YAAD,EAAc,IAAI,CAAEC,oBAApB,CAA0C,WAAW,KAArD,EALF,cAME,KAAC,YAAD,EAAc,IAAI,CAAEC,mBAApB,CAAyC,WAAW,KAApD,EANF,cAOE,KAAC,YAAD,EAAc,IAAI,CAAEC,oBAApB,CAA0C,WAAW,KAArD,EAPF,cAQE,KAAC,YAAD,EAAc,IAAI,CAAEC,iBAApB,CAAuC,WAAW,KAAlD,EARF,cASE,KAAC,YAAD,EAAc,IAAI,CAAEC,wBAApB,CAA8C,WAAW,KAAzD,EATF,cAUE,KAAC,YAAD,EAAc,IAAI,CAAEC,kBAApB,CAAwC,WAAW,KAAnD,EAVF,cAWE,KAAC,YAAD,EAAc,IAAI,CAAEC,sBAApB,CAA4C,WAAW,KAAvD,EAXF,cAYE,KAAC,YAAD,EAAc,IAAI,CAAEC,kBAApB,CAAwC,WAAW,KAAnD,EAZF,cAaE,KAAC,YAAD,EAAc,IAAI,CAAEC,mBAApB,CAAyC,WAAW,KAApD,EAbF,GAFF,GApCF,cAsDE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,iBAAxB,CAA0C,KAAK,CAAE,KAAjD,EADF,cAEE,KAAC,QAAD,EAAU,SAAS,CAAC,UAApB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAEhB,iBAApB,CAAuC,KAAK,CAAE,CAAEX,QAAQ,CAARA,QAAF,CAA9C,CAA4D,QAAQ,CAAC,KAArE,EADF,EAFF,GAtDF,cA4DE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,cAAxB,CAAuC,KAAK,CAAE,KAA9C,EADF,cAEE,KAAC,QAAD,EAAU,SAAS,CAAC,UAApB,uBACE,KAAC,YAAD,EACE,MAAM,CAAE,CACN6B,GAAG,CAAEtB,KADC,CAENuB,IAAI,CAAE,IAFA,CADV,CAKE,IAAI,CAAC,UALP,CAME,KAAK,CAAC,cANR,CAOE,EAAE,CAAC,IAPL,8JADF,EAFF,GA5DF,cA6EE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,YAAxB,CAAqC,KAAK,CAAE,KAA5C,EADF,cAEE,KAAC,QAAD,EAAU,SAAS,CAAC,UAApB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAEhB,cAApB,CAAoC,KAAK,CAAE,CAAEd,QAAQ,CAARA,QAAF,CAA3C,CAAyD,QAAQ,CAAC,KAAlE,EADF,EAFF,GA7EF,cAmFE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,cAAxB,CAAuC,KAAK,CAAE,KAA9C,EADF,cAEE,KAAC,QAAD,EAAU,SAAS,CAAC,UAApB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAEY,cAApB,CAAoC,KAAK,CAAE,CAAER,SAAS,CAATA,SAAF,CAAaC,SAAS,CAATA,SAAb,CAAwBC,SAAS,CAATA,SAAxB,CAA3C,EADF,EAFF,GAnFF,cAyFE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,YAAxB,CAAqC,KAAK,CAAE,KAA5C,EADF,cAEE,KAAC,QAAD,EAAU,SAAS,CAAC,UAApB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAEO,YAApB,CAAkC,KAAK,CAAE,CAAEZ,QAAQ,CAARA,QAAF,CAAYC,QAAQ,CAARA,QAAZ,CAAsBC,QAAQ,CAARA,QAAtB,CAAzC,EADF,EAFF,GAzFF,cA+FE,MAAC,IAAD,yBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,aAAxB,CAAsC,KAAK,CAAE,KAA7C,EADF,cAEE,KAAC,QAAD,EAAU,SAAS,CAAC,UAApB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAEK,aAApB,CAAmC,KAAK,CAAE,CAAEX,UAAU,CAAVA,UAAF,CAA1C,CAA0D,QAAQ,CAAC,KAAnE,EADF,EAFF,GA/FF,GADY,EAAd,CAyGA,cAAe+B,CAAAA,KAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Button, Card, CardBody, Col, Row } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PageHeader from '../common/PageHeader';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport FalconEditor from '../common/FalconEditor';\r\nimport classNames from 'classnames';\r\nimport Notification from '../notification/Notification';\r\n\r\nimport generic1 from '../../assets/img/generic/1.jpg';\r\nimport generic3 from '../../assets/img/generic/3.jpg';\r\nimport generic6 from '../../assets/img/generic/6.jpg';\r\nimport generic7 from '../../assets/img/generic/7.jpg';\r\nimport generic8 from '../../assets/img/generic/8.jpg';\r\nimport generic10 from '../../assets/img/generic/10.jpg';\r\nimport generic11 from '../../assets/img/generic/11.jpg';\r\nimport generic12 from '../../assets/img/generic/12.jpg';\r\nimport team1 from '../../assets/img/team/1.jpg';\r\n\r\nconst cardStyleCode = `<CardColumns>\r\n{\r\n  ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => (\r\n    <Card body inverse color={color} className={classNames({'bg-dark' : color === 'light'}) } key={index}>\r\n      <CardTitle>{color} card title</CardTitle>\r\n      <CardText>\r\n        Some quick example text to build on the card \r\n        title and make up the bulk of the card's content.\r\n      </CardText>\r\n    </Card>\r\n    ))\r\n }\r\n</CardColumns>`;\r\n\r\nconst basicExampleCode = `<Card style={{width: '20rem'}}>\r\n  <CardImg src={generic1} top />\r\n  <CardBody>\r\n    <CardTitle tag=\"h5\">\r\n      Card title\r\n    </CardTitle>\r\n    <CardText tag=\"p\">\r\n      Some quick example text to build on the card\r\n      title and make up the bulk of the card's\r\n      content.\r\n    </CardText>\r\n    <Button color=\"primary\" size=\"sm\">\r\n      Go somewhere\r\n    </Button>\r\n  </CardBody>\r\n</Card>`;\r\n\r\nconst cardWithListCode = `<ListGroup>\r\n  <ListGroupItem>\r\n    Cras justo odio\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Dapibus ac facilisis in\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Morbi leo risus\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Porta ac consectetur ac\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Vestibulum at eros\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Odio at morbi\r\n  </ListGroupItem>\r\n</ListGroup>`;\r\n\r\nconst cardWithImageCode = `<Card style={{width: '20rem'}}>\r\n  <CardImg src={generic3} top />\r\n  <CardBody>\r\n    <CardTitle tag=\"h5\">Card title</CardTitle>\r\n    <CardText tag=\"p\">\r\n      Some quick example text to build on the card title and make up the bulk of the card's content.\r\n    </CardText>\r\n  </CardBody>\r\n  <ListGroup flush>\r\n    <ListGroupItem>Cras justo odio</ListGroupItem>\r\n    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n    <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n    <ListGroupItem>\r\n      <a className=\"card-link\" href=\"#!\">\r\n        Card link\r\n      </a>\r\n      <a className=\"card-link\" href=\"#!\">\r\n        Another link\r\n      </a>\r\n    </ListGroupItem>\r\n  </ListGroup>\r\n</Card>`;\r\n\r\nconst cardGroupsCode = `<CardGroup>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic10} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">First card title</CardTitle>\r\n      <CardText>\r\n        This is a wider card with supporting text below as a natural lead-in to additional content. This\r\n        content is a little bit longer.\r\n      </CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\"> Last updated 45 mins ago</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic11} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Second card title</CardTitle>\r\n      <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\">Last updated an hour ago</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic12} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Yet another card title</CardTitle>\r\n      <CardText>\r\n        This is a wider card with supporting text below as a natural lead-in to additional content. This card\r\n        has even longer content than the first to show that equal height action.\r\n      </CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\"> Last updated yesterday</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n</CardGroup>`;\r\n\r\nconst cardDeckCode = `<CardDeck>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic6} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Awesome card title</CardTitle>\r\n      <CardText>\r\n        This is a wider card with supporting text below as a natural lead-in to additional content. This\r\n        content is a little bit longer.\r\n      </CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\"> Last updated 45 mins ago</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic7} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Beautiful card title</CardTitle>\r\n      <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\">Last updated an hour ago</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic8} alt=\"Card image cap\" className=\"rounded-0\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Gorgeous card title</CardTitle>\r\n      <CardText>\r\n        This is a wider card with supporting text below as a natural lead-in to additional content. This card\r\n        has even longer content than the first to show that equal height action.\r\n      </CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\"> Last updated yesterday</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n</CardDeck>`;\r\n\r\nconst backgroundCode = `<Card className=\"bg-dark text-white\" inverse style={{maxWidth: '30rem'}}>\r\n  <CardImg src={generic3} alt=\"Card image cap\" />\r\n  <CardImgOverlay className=\"d-flex align-items-end\">\r\n    <div>\r\n      <CardTitle tag=\"h5\" className=\"text-white\">\r\n        Card Title\r\n      </CardTitle>\r\n      <CardText>\r\n        Some quick example text to build on the card title and make up the bulk of the card's content.\r\n      </CardText>\r\n    </div>\r\n  </CardImgOverlay>\r\n</Card>`;\r\n\r\nconst propertiesCard = `Card.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  inverse: PropTypes.bool,\r\n  color: PropTypes.string,\r\n  body: PropTypes.bool,\r\n  className: PropTypes.string\r\n}\r\n`;\r\nconst propertiesCardBody = `CardBody.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardColumns = `CardColumns.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardDeck = `CardDeck.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\n\r\nconst propertiesCardFooter = `CardFooter.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardGroup = `CardGroup.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardHeader = `CardHeader.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};\r\n`;\r\nconst propertiesCardImg = `CardImg.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  // Use top or bottom to position image via \"card-img-top\" or \"card-img-bottom\"\r\n  top: PropTypes.bool,\r\n  bottom: PropTypes.bool\r\n};`;\r\nconst propertiesCardImgOverlay = `CardImgOverlay.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardLink = `CardLink.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  // ref will only get you a reference to the CardLink component, use innerRef to get a reference to the DOM element (for things like focus management).\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n};`;\r\nconst propertiesCardSubtitle = `CardSubtitle.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardText = `CardText.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardTitle = `CardTitle.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\n\r\nconst Cards = () => (\r\n  <Fragment>\r\n    <PageHeader\r\n      title=\"Cards\"\r\n      description=\"Falcon’s cards provide a flexible and extensible content container with multiple variants and options.\"\r\n      className=\"mb-3\"\r\n    >\r\n      <Button\r\n        tag=\"a\"\r\n        href=\"https://reactstrap.github.io/components/card\"\r\n        target=\"_blank\"\r\n        color=\"link\"\r\n        size=\"sm\"\r\n        className=\"pl-0\"\r\n      >\r\n        Cards on reactstrap\r\n        <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\r\n      </Button>\r\n    </PageHeader>\r\n    <Row noGutters>\r\n      <Col xl={6} className=\"pr-xl-2\">\r\n        <Card className=\"mb-3\">\r\n          <FalconCardHeader title=\"Basic Example\" light={false} />\r\n          <CardBody className=\"bg-light\">\r\n            <FalconEditor code={basicExampleCode} scope={{ generic1 }} language=\"jsx\" />\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      <Col xl={6} className=\"pl-xl-2\">\r\n        <Card className=\"mb-3\">\r\n          <FalconCardHeader title=\"Card with list\" light={false} />\r\n          <CardBody className=\"bg-light\">\r\n            <FalconEditor code={cardWithListCode} />\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Properties\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={propertiesCard} hidePreview />\r\n        <FalconEditor code={propertiesCardBody} hidePreview />\r\n        <FalconEditor code={propertiesCardColumns} hidePreview />\r\n        <FalconEditor code={propertiesCardDeck} hidePreview />\r\n        <FalconEditor code={propertiesCardFooter} hidePreview />\r\n        <FalconEditor code={propertiesCardGroup} hidePreview />\r\n        <FalconEditor code={propertiesCardHeader} hidePreview />\r\n        <FalconEditor code={propertiesCardImg} hidePreview />\r\n        <FalconEditor code={propertiesCardImgOverlay} hidePreview />\r\n        <FalconEditor code={propertiesCardLink} hidePreview />\r\n        <FalconEditor code={propertiesCardSubtitle} hidePreview />\r\n        <FalconEditor code={propertiesCardText} hidePreview />\r\n        <FalconEditor code={propertiesCardTitle} hidePreview />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Card with image\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={cardWithImageCode} scope={{ generic3 }} language=\"jsx\" />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Notification\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <Notification\r\n          avatar={{\r\n            src: team1,\r\n            size: 'xl'\r\n          }}\r\n          time=\"Just Now\"\r\n          emoji=\"📢\"\r\n          to=\"#!\"\r\n        >\r\n          Announcing the winners of the The only book awards decided by you, the readers. Check out the champions and\r\n          runners-up in all 21 categories now!\r\n        </Notification>\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Background\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={backgroundCode} scope={{ generic3 }} language=\"jsx\" />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Cards Groups\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={cardGroupsCode} scope={{ generic10, generic11, generic12 }} />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Cards Deck\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={cardDeckCode} scope={{ generic6, generic7, generic8 }} />\r\n      </CardBody>\r\n    </Card>\r\n    <Card>\r\n      <FalconCardHeader title=\"Card styles\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={cardStyleCode} scope={{ classNames }} language=\"jsx\" />\r\n      </CardBody>\r\n    </Card>\r\n  </Fragment>\r\n);\r\n\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}