{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{Fragment}from'react';import ButtonIcon from'./ButtonIcon';import{UncontrolledTooltip}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ButtonIconTooltip=function ButtonIconTooltip(_ref){var id=_ref.id,placement=_ref.placement,children=_ref.children,rest=_objectWithoutProperties(_ref,[\"id\",\"placement\",\"children\"]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(ButtonIcon,_objectSpread({id:id},rest)),/*#__PURE__*/_jsx(UncontrolledTooltip,{placement:placement,target:id,children:children})]});};ButtonIconTooltip.defaultProps={color:'falcon-default',size:'sm',placement:'bottom'};export default ButtonIconTooltip;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/ButtonIconTooltip.js"],"names":["React","Fragment","ButtonIcon","UncontrolledTooltip","ButtonIconTooltip","id","placement","children","rest","defaultProps","color","size"],"mappings":"+NAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,mBAAT,KAAoC,YAApC,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,UAAGC,CAAAA,EAAH,MAAGA,EAAH,CAAOC,SAAP,MAAOA,SAAP,CAAkBC,QAAlB,MAAkBA,QAAlB,CAA+BC,IAA/B,iFACxB,MAAC,QAAD,yBACE,KAAC,UAAD,gBAAY,EAAE,CAAEH,EAAhB,EAAwBG,IAAxB,EADF,cAEE,KAAC,mBAAD,EAAqB,SAAS,CAAEF,SAAhC,CAA2C,MAAM,CAAED,EAAnD,UACGE,QADH,EAFF,GADwB,EAA1B,CAeAH,iBAAiB,CAACK,YAAlB,CAAiC,CAAEC,KAAK,CAAE,gBAAT,CAA2BC,IAAI,CAAE,IAAjC,CAAuCL,SAAS,CAAE,QAAlD,CAAjC,CAEA,cAAeF,CAAAA,iBAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonIcon from './ButtonIcon';\nimport { UncontrolledTooltip } from 'reactstrap';\n\nconst ButtonIconTooltip = ({ id, placement, children, ...rest }) => (\n  <Fragment>\n    <ButtonIcon id={id} {...rest} />\n    <UncontrolledTooltip placement={placement} target={id}>\n      {children}\n    </UncontrolledTooltip>\n  </Fragment>\n);\n\nButtonIconTooltip.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  children: PropTypes.node.isRequired,\n  placement: PropTypes.oneOf(['top', 'bottom', 'left', 'right'])\n};\n\nButtonIconTooltip.defaultProps = { color: 'falcon-default', size: 'sm', placement: 'bottom' };\n\nexport default ButtonIconTooltip;\n"]},"metadata":{},"sourceType":"module"}