{"ast":null,"code":"import React,{Fragment}from'react';import PageHeader from'../common/PageHeader';import{Button,Card,CardBody}from'reactstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Circle}from'react-es6-progressbar.js';import{getGrays,themeColors}from'../../helpers/utils';import FalconEditor from'../common/FalconEditor';import AppContext from'../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var progressbarCode=\"function ProgressbarExample() {\\n  const { isDark } = useContext(AppContext);\\n  const grays = getGrays(isDark);\\n  const options = {\\n    color: themeColors.primary,\\n    progress: 93,\\n    strokeWidth: 5,\\n    trailWidth: 5,\\n    trailColor: grays['200'],\\n    easing: 'easeInOut',\\n    duration: 3000,\\n    svgStyle: {\\n      'stroke-linecap': 'round',\\n      display: 'block',\\n      width: '100%'\\n    },\\n    text: { autoStyleContainer: false },\\n    // Set default step function for all animate calls\\n    step: (state, circle) => {\\n      const percentage = Math.round(circle.value() * 100);\\n      circle.setText(\\\"<span class='value'>\\\"+percentage+\\\"<b>%</b></span>\\\");\\n    }\\n  };\\n  \\n  return <Circle\\n    progress={0.89}\\n    options={options}\\n    container_class=\\\"progress-circle progress-circle-dashboard\\\"\\n    container_style={{ width: '150px', height: '150px' }}\\n  />\\n}\";var Progressbar=function Progressbar(){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Progressbar\",description:\"With ProgressBar.js, it's easy to create responsive and stylish progress bars for the web. Animations perform well even on mobile devices. It provides a few built\\u2011in shapes like Line, Circle and SemiCircle but you can also create custom shaped progress bars with any vector graphic editor.\",className:\"mb-3\",children:/*#__PURE__*/_jsxs(Button,{tag:\"a\",href:\"https://github.com/ronaldroe/react-es6-progressbar.js\",target:\"_blank\",color:\"link\",size:\"sm\",className:\"pl-0\",children:[\"Progressbar Documentation\",/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"chevron-right\",className:\"ml-1 fs--2\"})]})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(FalconEditor,{code:progressbarCode,scope:{Circle:Circle,themeColors:themeColors,getGrays:getGrays,AppContext:AppContext},language:\"jsx\"})})})]});};export default Progressbar;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/plugins/ProgressBarJs.js"],"names":["React","Fragment","PageHeader","Button","Card","CardBody","FontAwesomeIcon","Circle","getGrays","themeColors","FalconEditor","AppContext","progressbarCode","Progressbar"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,QAAvB,KAAuC,YAAvC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,MAAT,KAAuB,0BAAvB,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,qBAAtC,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,C,wFAEA,GAAMC,CAAAA,eAAe,g4BAArB,CAgCA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,sBAClB,MAAC,QAAD,yBACE,KAAC,UAAD,EACE,KAAK,CAAC,aADR,CAEE,WAAW,CAAC,wSAFd,CAKE,SAAS,CAAC,MALZ,uBAOE,MAAC,MAAD,EACE,GAAG,CAAC,GADN,CAEE,IAAI,CAAC,uDAFP,CAGE,MAAM,CAAC,QAHT,CAIE,KAAK,CAAC,MAJR,CAKE,IAAI,CAAC,IALP,CAME,SAAS,CAAC,MANZ,oDASE,KAAC,eAAD,EAAiB,IAAI,CAAC,eAAtB,CAAsC,SAAS,CAAC,YAAhD,EATF,GAPF,EADF,cAoBE,KAAC,IAAD,wBACE,KAAC,QAAD,wBACE,KAAC,YAAD,EAAc,IAAI,CAAED,eAApB,CAAqC,KAAK,CAAE,CAAEL,MAAM,CAANA,MAAF,CAAUE,WAAW,CAAXA,WAAV,CAAuBD,QAAQ,CAARA,QAAvB,CAAiCG,UAAU,CAAVA,UAAjC,CAA5C,CAA2F,QAAQ,CAAC,KAApG,EADF,EADF,EApBF,GADkB,EAApB,CA6BA,cAAeE,CAAAA,WAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PageHeader from '../common/PageHeader';\nimport { Button, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Circle } from 'react-es6-progressbar.js';\nimport { getGrays, themeColors } from '../../helpers/utils';\nimport FalconEditor from '../common/FalconEditor';\nimport AppContext from '../../context/Context';\n\nconst progressbarCode = `function ProgressbarExample() {\n  const { isDark } = useContext(AppContext);\n  const grays = getGrays(isDark);\n  const options = {\n    color: themeColors.primary,\n    progress: 93,\n    strokeWidth: 5,\n    trailWidth: 5,\n    trailColor: grays['200'],\n    easing: 'easeInOut',\n    duration: 3000,\n    svgStyle: {\n      'stroke-linecap': 'round',\n      display: 'block',\n      width: '100%'\n    },\n    text: { autoStyleContainer: false },\n    // Set default step function for all animate calls\n    step: (state, circle) => {\n      const percentage = Math.round(circle.value() * 100);\n      circle.setText(\"<span class='value'>\"+percentage+\"<b>%</b></span>\");\n    }\n  };\n  \n  return <Circle\n    progress={0.89}\n    options={options}\n    container_class=\"progress-circle progress-circle-dashboard\"\n    container_style={{ width: '150px', height: '150px' }}\n  />\n}`;\n\nconst Progressbar = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Progressbar\"\n      description=\"With ProgressBar.js, it's easy to create responsive and stylish progress bars for the web. Animations perform\n        well even on mobile devices. It provides a few builtâ€‘in shapes like Line, Circle and SemiCircle but you can also\n        create custom shaped progress bars with any vector graphic editor.\"\n      className=\"mb-3\"\n    >\n      <Button\n        tag=\"a\"\n        href=\"https://github.com/ronaldroe/react-es6-progressbar.js\"\n        target=\"_blank\"\n        color=\"link\"\n        size=\"sm\"\n        className=\"pl-0\"\n      >\n        Progressbar Documentation\n        <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n      </Button>\n    </PageHeader>\n    <Card>\n      <CardBody>\n        <FalconEditor code={progressbarCode} scope={{ Circle, themeColors, getGrays, AppContext }} language=\"jsx\" />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default Progressbar;\n"]},"metadata":{},"sourceType":"module"}