{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/faq/FaqCol.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardBody, CardFooter, Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport rawFaqs from '../../data/faq/faqs';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst AskQuestionForm = () => /*#__PURE__*/_jsxDEV(Form, {\n  children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      for: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      for: \"emailModal\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"emailModal\",\n      type: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      for: \"question\",\n      children: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"textarea\",\n      id: \"question\",\n      rows: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n\n_c = AskQuestionForm;\n\nconst Faq = ({\n  question,\n  answer\n}) => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n    className: \"fs-0\",\n    children: question\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"fs--1\",\n    children: answer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this);\n\n_c2 = Faq;\nFaq.propTypes = {\n  question: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired\n};\n\nconst FaqCol = () => {\n  _s();\n\n  const {\n    loading,\n    data: faqs\n  } = useFakeFetch(rawFaqs);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => setIsOpen(!isOpen);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Frequently asked questions\",\n      light: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"bg-light\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: isIterableArray(faqs) && faqs.slice(0, 4).map((faq, index) => /*#__PURE__*/_createElement(Faq, { ...faq,\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 78\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: isIterableArray(faqs) && faqs.slice(4).map((faq, index) => /*#__PURE__*/_createElement(Faq, { ...faq,\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 85\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      className: \"text-center py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"fs-0 font-weight-normal\",\n        children: \"Have more questions?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"falcon-primary\",\n        size: \"sm\",\n        onClick: toggleModal,\n        children: \"Ask us anything\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        toggle: toggleModal,\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Ask your question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(AskQuestionForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            size: \"sm\",\n            onClick: toggleModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"sm\",\n            onClick: toggleModal,\n            children: \"Send Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FaqCol, \"jQ91t4LGtlbMMsLhGL4cBFrjIYM=\", false, function () {\n  return [useFakeFetch];\n});\n\n_c3 = FaqCol;\nexport default FaqCol;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AskQuestionForm\");\n$RefreshReg$(_c2, \"Faq\");\n$RefreshReg$(_c3, \"FaqCol\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/faq/FaqCol.js"],"names":["React","Fragment","useState","PropTypes","Button","Card","CardBody","CardFooter","Col","Form","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","Row","Loader","rawFaqs","FalconCardHeader","isIterableArray","useFakeFetch","AskQuestionForm","Faq","question","answer","propTypes","string","isRequired","FaqCol","loading","data","faqs","isOpen","setIsOpen","toggleModal","slice","map","faq","index"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row\n} from 'reactstrap';\nimport Loader from '../common/Loader';\nimport rawFaqs from '../../data/faq/faqs';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport useFakeFetch from '../../hooks/useFakeFetch';\n\nconst AskQuestionForm = () => (\n  <Form>\n    <FormGroup>\n      <Label for=\"name\">Name</Label>\n      <Input id=\"name\" />\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"emailModal\">Email Address</Label>\n      <Input id=\"emailModal\" type=\"email\" />\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"question\">Question</Label>\n      <Input type=\"textarea\" id=\"question\" rows=\"4\" />\n    </FormGroup>\n  </Form>\n);\n\nconst Faq = ({ question, answer }) => (\n  <Fragment>\n    <h5 className=\"fs-0\">{question}</h5>\n    <p className=\"fs--1\">{answer}</p>\n  </Fragment>\n);\n\nFaq.propTypes = {\n  question: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired\n};\n\nconst FaqCol = () => {\n  const { loading, data: faqs } = useFakeFetch(rawFaqs);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => setIsOpen(!isOpen);\n\n  return (\n    <Card>\n      <FalconCardHeader title=\"Frequently asked questions\" light={false} />\n      <CardBody className=\"bg-light\">\n        {loading ? (\n          <Loader />\n        ) : (\n          <Row>\n            <Col lg={6}>\n              {isIterableArray(faqs) && faqs.slice(0, 4).map((faq, index) => <Faq {...faq} key={index} />)}\n            </Col>\n            <Col lg={6}>{isIterableArray(faqs) && faqs.slice(4).map((faq, index) => <Faq {...faq} key={index} />)}</Col>\n          </Row>\n        )}\n      </CardBody>\n      <CardFooter className=\"text-center py-4\">\n        <h6 className=\"fs-0 font-weight-normal\">Have more questions?</h6>\n        <Button color=\"falcon-primary\" size=\"sm\" onClick={toggleModal}>\n          Ask us anything\n        </Button>\n        <Modal isOpen={isOpen} toggle={toggleModal} centered>\n          <ModalHeader>Ask your question</ModalHeader>\n          <ModalBody>\n            <AskQuestionForm />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" size=\"sm\" onClick={toggleModal}>\n              Close\n            </Button>\n            <Button color=\"primary\" size=\"sm\" onClick={toggleModal}>\n              Send Question\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default FaqCol;\n"]},"metadata":{},"sourceType":"module"}