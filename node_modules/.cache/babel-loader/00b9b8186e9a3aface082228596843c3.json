{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import{Link}from'react-router-dom';import{toast}from'react-toastify';import{Button,CustomInput,Form,FormGroup,Input,Label}from'reactstrap';import Divider from'../common/Divider';import SocialAuthButtons from'./SocialAuthButtons';import withRedirect from'../../hoc/withRedirect';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RegistrationForm=function RegistrationForm(_ref){var setRedirect=_ref.setRedirect,setRedirectUrl=_ref.setRedirectUrl,layout=_ref.layout,hasLabel=_ref.hasLabel;// State\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isAccepted=_useState10[0],setIsAccepted=_useState10[1];var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),isDisabled=_useState12[0],setIsDisabled=_useState12[1];// Handler\nvar handleSubmit=function handleSubmit(e){e.preventDefault();toast.success(\"Successfully registered as \".concat(name));setRedirect(true);};useEffect(function(){setRedirectUrl(\"/authentication/\".concat(layout,\"/login\"));},[setRedirectUrl,layout]);useEffect(function(){setIsDisabled(!name||!email||!password||!confirmPassword||!isAccepted||password!==confirmPassword);},[name,email,password,confirmPassword,isAccepted]);return/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(FormGroup,{children:[hasLabel&&/*#__PURE__*/_jsx(Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Input,{placeholder:!hasLabel?'Name':'',value:name,onChange:function onChange(_ref2){var target=_ref2.target;return setName(target.value);}})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[hasLabel&&/*#__PURE__*/_jsx(Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Input,{placeholder:!hasLabel?'Email address':'',value:email,onChange:function onChange(_ref3){var target=_ref3.target;return setEmail(target.value);},type:\"email\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"col-6\",children:[hasLabel&&/*#__PURE__*/_jsx(Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Input,{placeholder:!hasLabel?'Password':'',value:password,onChange:function onChange(_ref4){var target=_ref4.target;return setPassword(target.value);},type:\"password\"})]}),/*#__PURE__*/_jsxs(FormGroup,{className:\"col-6\",children:[hasLabel&&/*#__PURE__*/_jsx(Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Input,{placeholder:!hasLabel?'Confirm Password':'',value:confirmPassword,onChange:function onChange(_ref5){var target=_ref5.target;return setConfirmPassword(target.value);},type:\"password\"})]})]}),/*#__PURE__*/_jsx(CustomInput,{id:\"customCheckTerms\",label:/*#__PURE__*/_jsxs(Fragment,{children:[\"I accept the \",/*#__PURE__*/_jsx(Link,{to:\"#!\",children:\"terms\"}),\" and \",/*#__PURE__*/_jsx(Link,{to:\"#!\",children:\"privacy policy\"})]}),checked:isAccepted,onChange:function onChange(_ref6){var target=_ref6.target;return setIsAccepted(target.checked);},type:\"checkbox\"}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Button,{color:\"primary\",block:true,className:\"mt-3\",disabled:isDisabled,children:\"Register\"})}),/*#__PURE__*/_jsx(Divider,{className:\"mt-4\",children:\"or register with\"}),/*#__PURE__*/_jsx(SocialAuthButtons,{})]});};RegistrationForm.defaultProps={layout:'basic',hasLabel:false};export default withRedirect(RegistrationForm);","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/auth/RegistrationForm.js"],"names":["React","Fragment","useState","useEffect","Link","toast","Button","CustomInput","Form","FormGroup","Input","Label","Divider","SocialAuthButtons","withRedirect","RegistrationForm","setRedirect","setRedirectUrl","layout","hasLabel","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isAccepted","setIsAccepted","isDisabled","setIsDisabled","handleSubmit","e","preventDefault","success","target","value","checked","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, CustomInput, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Divider from '../common/Divider';\nimport SocialAuthButtons from './SocialAuthButtons';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst RegistrationForm = ({ setRedirect, setRedirectUrl, layout, hasLabel }) => {\n  // State\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isAccepted, setIsAccepted] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success(`Successfully registered as ${name}`);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    setRedirectUrl(`/authentication/${layout}/login`);\n  }, [setRedirectUrl, layout]);\n\n  useEffect(() => {\n    setIsDisabled(!name || !email || !password || !confirmPassword || !isAccepted || password !== confirmPassword);\n  }, [name, email, password, confirmPassword, isAccepted]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        {hasLabel && <Label>Name</Label>}\n        <Input placeholder={!hasLabel ? 'Name' : ''} value={name} onChange={({ target }) => setName(target.value)} />\n      </FormGroup>\n      <FormGroup>\n        {hasLabel && <Label>Email address</Label>}\n        <Input\n          placeholder={!hasLabel ? 'Email address' : ''}\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n          type=\"email\"\n        />\n      </FormGroup>\n      <div className=\"form-row\">\n        <FormGroup className=\"col-6\">\n          {hasLabel && <Label>Password</Label>}\n          <Input\n            placeholder={!hasLabel ? 'Password' : ''}\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup className=\"col-6\">\n          {hasLabel && <Label>Confirm Password</Label>}\n          <Input\n            placeholder={!hasLabel ? 'Confirm Password' : ''}\n            value={confirmPassword}\n            onChange={({ target }) => setConfirmPassword(target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n      </div>\n\n      <CustomInput\n        id=\"customCheckTerms\"\n        label={\n          <Fragment>\n            I accept the <Link to=\"#!\">terms</Link> and <Link to=\"#!\">privacy policy</Link>\n          </Fragment>\n        }\n        checked={isAccepted}\n        onChange={({ target }) => setIsAccepted(target.checked)}\n        type=\"checkbox\"\n      />\n      <FormGroup>\n        <Button color=\"primary\" block className=\"mt-3\" disabled={isDisabled}>\n          Register\n        </Button>\n      </FormGroup>\n      <Divider className=\"mt-4\">or register with</Divider>\n      <SocialAuthButtons />\n    </Form>\n  );\n};\n\nRegistrationForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func.isRequired,\n  layout: PropTypes.string,\n  hasLabel: PropTypes.bool\n};\n\nRegistrationForm.defaultProps = {\n  layout: 'basic',\n  hasLabel: false\n};\n\nexport default withRedirect(RegistrationForm);\n"]},"metadata":{},"sourceType":"module"}