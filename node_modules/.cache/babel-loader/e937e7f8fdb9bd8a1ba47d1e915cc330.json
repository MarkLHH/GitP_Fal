{"ast":null,"code":"import _toConsumableArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{getDuration}from'../../helpers/utils';import moment from'./Experience';import{Button,Col,CustomInput,Form,FormGroup,Row}from'reactstrap';import ExperienceInput from'./ExperienceInput';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExperienceForm=function ExperienceForm(_ref){var experiences=_ref.experiences,setExperiences=_ref.setExperiences;// State\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),company=_useState2[0],setCompany=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),position=_useState4[0],setPosition=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),city=_useState6[0],setCity=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),description=_useState8[0],setDescription=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),current=_useState10[0],setCurrent=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),startDate=_useState12[0],setStartDate=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),endDate=_useState14[0],setEndDate=_useState14[1];var _useState15=useState(true),_useState16=_slicedToArray(_useState15,2),isButtonDisable=_useState16[0],setIsButtonDisable=_useState16[1];var handleSubmit=function handleSubmit(e){e.preventDefault();var newExperience={company:company,startDate:startDate,endDate:endDate,description:description,current:current,duration:getDuration(startDate,endDate),headline:position,location:city,to:'#!'};setExperiences([newExperience].concat(_toConsumableArray(experiences)));setCompany('');setPosition('');setCity('');setDescription('');setCurrent(false);setStartDate('');setEndDate('');};useEffect(function(){setIsButtonDisable(!(company&&position&&city&&description&&moment.isMoment(startDate)&&(current||moment.isMoment(endDate))));},[company,position,city,description,current,startDate,endDate]);return/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(ExperienceInput,{id:\"company\",label:\"Company\",value:company,onChange:function onChange(_ref2){var target=_ref2.target;return setCompany(target.value);}}),/*#__PURE__*/_jsx(ExperienceInput,{id:\"position\",label:\"Position\",value:position,onChange:function onChange(_ref3){var target=_ref3.target;return setPosition(target.value);}}),/*#__PURE__*/_jsx(ExperienceInput,{id:\"city\",label:\"City\",value:city,onChange:function onChange(_ref4){var target=_ref4.target;return setCity(target.value);}}),/*#__PURE__*/_jsx(ExperienceInput,{id:\"experienceDescription\",label:\"Description\",value:description,onChange:function onChange(_ref5){var target=_ref5.target;return setDescription(target.value);},type:\"textarea\",rows:3}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{className:\"row\",children:/*#__PURE__*/_jsx(Col,{lg:{size:7,offset:3},children:/*#__PURE__*/_jsx(CustomInput,{type:\"checkbox\",id:\"current\",label:\"I currently work here\",checked:current,onChange:function onChange(_ref6){var target=_ref6.target;return setCurrent(target.checked);},inline:true})})})}),/*#__PURE__*/_jsx(ExperienceInput,{id:\"experienceFrom\",label:\"From\",value:startDate,onChange:setStartDate,type:\"datetime\",timeFormat:false,closeOnSelect:true}),!current&&/*#__PURE__*/_jsx(ExperienceInput,{id:\"experienceTo\",label:\"To\",value:endDate,onChange:setEndDate,type:\"datetime\",timeFormat:false,closeOnSelect:true}),/*#__PURE__*/_jsx(FormGroup,{className:\"form-group\",children:/*#__PURE__*/_jsx(Row,{className:\"row\",children:/*#__PURE__*/_jsx(Col,{lg:{size:7,offset:3},children:/*#__PURE__*/_jsx(Button,{color:\"primary\",disabled:isButtonDisable,children:\"Save\"})})})})]});};export default ExperienceForm;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/experience/ExperienceForm.js"],"names":["React","useState","useEffect","getDuration","moment","Button","Col","CustomInput","Form","FormGroup","Row","ExperienceInput","ExperienceForm","experiences","setExperiences","company","setCompany","position","setPosition","city","setCity","description","setDescription","current","setCurrent","startDate","setStartDate","endDate","setEndDate","isButtonDisable","setIsButtonDisable","handleSubmit","e","preventDefault","newExperience","duration","headline","location","to","isMoment","target","value","size","offset","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDuration } from '../../helpers/utils';\nimport moment from './Experience';\nimport { Button, Col, CustomInput, Form, FormGroup, Row } from 'reactstrap';\nimport ExperienceInput from './ExperienceInput';\n\nconst ExperienceForm = ({ experiences, setExperiences }) => {\n  // State\n  const [company, setCompany] = useState('');\n  const [position, setPosition] = useState('');\n  const [city, setCity] = useState('');\n  const [description, setDescription] = useState('');\n  const [current, setCurrent] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [isButtonDisable, setIsButtonDisable] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newExperience = {\n      company,\n      startDate,\n      endDate,\n      description,\n      current,\n      duration: getDuration(startDate, endDate),\n      headline: position,\n      location: city,\n      to: '#!'\n    };\n\n    setExperiences([newExperience, ...experiences]);\n    setCompany('');\n    setPosition('');\n    setCity('');\n    setDescription('');\n    setCurrent(false);\n    setStartDate('');\n    setEndDate('');\n  };\n\n  useEffect(() => {\n    setIsButtonDisable(\n      !(\n        company &&\n        position &&\n        city &&\n        description &&\n        moment.isMoment(startDate) &&\n        (current || moment.isMoment(endDate))\n      )\n    );\n  }, [company, position, city, description, current, startDate, endDate]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <ExperienceInput\n        id=\"company\"\n        label=\"Company\"\n        value={company}\n        onChange={({ target }) => setCompany(target.value)}\n      />\n\n      <ExperienceInput\n        id=\"position\"\n        label=\"Position\"\n        value={position}\n        onChange={({ target }) => setPosition(target.value)}\n      />\n\n      <ExperienceInput id=\"city\" label=\"City\" value={city} onChange={({ target }) => setCity(target.value)} />\n\n      <ExperienceInput\n        id=\"experienceDescription\"\n        label=\"Description\"\n        value={description}\n        onChange={({ target }) => setDescription(target.value)}\n        type=\"textarea\"\n        rows={3}\n      />\n\n      <FormGroup>\n        <Row className=\"row\">\n          <Col lg={{ size: 7, offset: 3 }}>\n            <CustomInput\n              type=\"checkbox\"\n              id=\"current\"\n              label=\"I currently work here\"\n              checked={current}\n              onChange={({ target }) => setCurrent(target.checked)}\n              inline\n            />\n          </Col>\n        </Row>\n      </FormGroup>\n\n      <ExperienceInput\n        id=\"experienceFrom\"\n        label=\"From\"\n        value={startDate}\n        onChange={setStartDate}\n        type=\"datetime\"\n        timeFormat={false}\n        closeOnSelect\n      />\n\n      {!current && (\n        <ExperienceInput\n          id=\"experienceTo\"\n          label=\"To\"\n          value={endDate}\n          onChange={setEndDate}\n          type=\"datetime\"\n          timeFormat={false}\n          closeOnSelect\n        />\n      )}\n\n      <FormGroup className=\"form-group\">\n        <Row className=\"row\">\n          <Col lg={{ size: 7, offset: 3 }}>\n            <Button color=\"primary\" disabled={isButtonDisable}>\n              Save\n            </Button>\n          </Col>\n        </Row>\n      </FormGroup>\n    </Form>\n  );\n};\n\nExperienceForm.propTypes = {\n  experiences: PropTypes.array,\n  setExperiences: PropTypes.func.isRequired\n};\n\nexport default ExperienceForm;\n"]},"metadata":{},"sourceType":"module"}