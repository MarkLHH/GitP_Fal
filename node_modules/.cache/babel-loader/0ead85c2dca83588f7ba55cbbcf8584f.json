{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/pricing/PricingCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Badge, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { isIterableArray } from '../../helpers/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PricingRow = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(\"li\", {\n  className: \"py-1\",\n  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: \"check\",\n    transform: \"shrink-2\",\n    className: \"text-success\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), \" \", children]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c = PricingRow;\nPricingRow.propTypes = {\n  children: PropTypes.node\n};\n\nconst PricingCard = ({\n  type,\n  description,\n  price,\n  featureTitle,\n  features,\n  button,\n  bottomButtonText,\n  isYearly,\n  backgroundColor\n}) => {\n  const plan = isYearly ? 'year' : 'month';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-100\",\n    style: {\n      backgroundColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-weight-normal my-0\",\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-weight-medium my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"sup\", {\n          className: \"font-weight-normal fs-2 mr-1\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), price[plan], /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"fs--1 text-700\",\n          children: [\"/ \", plan]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        tag: Link,\n        color: button.color,\n        to: \"/pages/billing\",\n        children: button.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"border-bottom-0 m-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames('text-left px-sm-4 py-4', {\n        'px-3': backgroundColor\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"font-weight-medium fs-0\",\n        children: featureTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled mt-3\",\n        children: isIterableArray(features) && features.map((feature, index) => /*#__PURE__*/_jsxDEV(PricingRow, {\n          children: [feature.title, ' ', feature.badge && /*#__PURE__*/_jsxDEV(Badge, {\n            color: feature.badge.color,\n            pill: true,\n            className: \"ml-1\",\n            children: feature.badge.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        tag: Link,\n        color: \"link\",\n        to: \"#!\",\n        children: bottomButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = PricingCard;\nPricingCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  price: PropTypes.object.isRequired,\n  featureTitle: PropTypes.string.isRequired,\n  features: PropTypes.array.isRequired,\n  button: PropTypes.object.isRequired,\n  bottomButtonText: PropTypes.string.isRequired,\n  isYearly: PropTypes.bool.isRequired,\n  backgroundColor: PropTypes.string\n};\nexport default PricingCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PricingRow\");\n$RefreshReg$(_c2, \"PricingCard\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/pricing/PricingCard.js"],"names":["React","PropTypes","classNames","Link","Badge","Button","FontAwesomeIcon","isIterableArray","PricingRow","children","propTypes","node","PricingCard","type","description","price","featureTitle","features","button","bottomButtonText","isYearly","backgroundColor","plan","color","text","map","feature","index","title","badge","string","isRequired","object","array","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Badge, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { isIterableArray } from '../../helpers/utils';\n\nconst PricingRow = ({ children }) => (\n  <li className=\"py-1\">\n    <FontAwesomeIcon icon=\"check\" transform=\"shrink-2\" className=\"text-success\" /> {children}\n  </li>\n);\n\nPricingRow.propTypes = { children: PropTypes.node };\n\nconst PricingCard = ({\n  type,\n  description,\n  price,\n  featureTitle,\n  features,\n  button,\n  bottomButtonText,\n  isYearly,\n  backgroundColor\n}) => {\n  const plan = isYearly ? 'year' : 'month';\n\n  return (\n    <div className=\"h-100\" style={{ backgroundColor }}>\n      <div className=\"text-center p-4\">\n        <h3 className=\"font-weight-normal my-0\">{type}</h3>\n        <p className=\"mt-3\">{description}</p>\n        <h2 className=\"font-weight-medium my-4\">\n          <sup className=\"font-weight-normal fs-2 mr-1\">$</sup>\n          {price[plan]}\n          <small className=\"fs--1 text-700\">/ {plan}</small>\n        </h2>\n        <Button tag={Link} color={button.color} to=\"/pages/billing\">\n          {button.text}\n        </Button>\n      </div>\n      <hr className=\"border-bottom-0 m-0\" />\n      <div className={classNames('text-left px-sm-4 py-4', { 'px-3': backgroundColor })}>\n        <h5 className=\"font-weight-medium fs-0\">{featureTitle}</h5>\n        <ul className=\"list-unstyled mt-3\">\n          {isIterableArray(features) &&\n            features.map((feature, index) => (\n              <PricingRow key={index}>\n                {feature.title}{' '}\n                {feature.badge && (\n                  <Badge color={feature.badge.color} pill className=\"ml-1\">\n                    {feature.badge.text}\n                  </Badge>\n                )}\n              </PricingRow>\n            ))}\n        </ul>\n        <Button tag={Link} color=\"link\" to=\"#!\">\n          {bottomButtonText}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nPricingCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  price: PropTypes.object.isRequired,\n  featureTitle: PropTypes.string.isRequired,\n  features: PropTypes.array.isRequired,\n  button: PropTypes.object.isRequired,\n  bottomButtonText: PropTypes.string.isRequired,\n  isYearly: PropTypes.bool.isRequired,\n  backgroundColor: PropTypes.string\n};\n\nexport default PricingCard;\n"]},"metadata":{},"sourceType":"module"}