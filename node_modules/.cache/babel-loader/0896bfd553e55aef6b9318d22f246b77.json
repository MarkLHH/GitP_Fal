{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/common/FalconCardHeader.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, CardHeader, Row } from 'reactstrap';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Title = ({\n  titleTag: TitleTag,\n  className,\n  breakPoint,\n  children\n}) => /*#__PURE__*/_jsxDEV(TitleTag, {\n  className: classNames({\n    'mb-0': !breakPoint,\n    [`mb-${breakPoint}-0`]: !!breakPoint\n  }, className),\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Title;\nTitle.propsType = {\n  breakPoint: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', 'xxl']),\n  titleTag: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  className: PropTypes.string,\n  children: PropTypes.node\n};\nTitle.defaultProps = {\n  titleTag: 'h5'\n};\n\nconst FalconCardHeader = ({\n  title,\n  light,\n  titleTag,\n  titleClass,\n  className,\n  breakPoint,\n  children\n}) => /*#__PURE__*/_jsxDEV(CardHeader, {\n  className: classNames({\n    'bg-light': light\n  }, className),\n  children: children ? /*#__PURE__*/_jsxDEV(Row, {\n    className: \"align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        breakPoint: breakPoint,\n        titleTag: titleTag,\n        className: titleClass,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      [breakPoint ? breakPoint : 'xs']: 'auto',\n      className: `text${breakPoint ? `-${breakPoint}` : ''}-right`,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Title, {\n    breakPoint: breakPoint,\n    titleTag: titleTag,\n    className: titleClass,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n\n_c2 = FalconCardHeader;\nFalconCardHeader.propTypes = {\n  title: PropTypes.node.isRequired,\n  light: PropTypes.bool,\n  breakPoint: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', 'xxl']),\n  titleTag: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  titleClass: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node\n};\nFalconCardHeader.defaultProps = {\n  light: true\n};\nexport default FalconCardHeader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"FalconCardHeader\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/FalconCardHeader.js"],"names":["React","PropTypes","Col","CardHeader","Row","classNames","Title","titleTag","TitleTag","className","breakPoint","children","propsType","oneOf","oneOfType","string","func","node","defaultProps","FalconCardHeader","title","light","titleClass","propTypes","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, CardHeader, Row } from 'reactstrap';\nimport classNames from 'classnames';\n\nconst Title = ({ titleTag: TitleTag, className, breakPoint, children }) => (\n  <TitleTag\n    className={classNames(\n      {\n        'mb-0': !breakPoint,\n        [`mb-${breakPoint}-0`]: !!breakPoint\n      },\n      className\n    )}\n  >\n    {children}\n  </TitleTag>\n);\n\nTitle.propsType = {\n  breakPoint: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', 'xxl']),\n  titleTag: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n\nTitle.defaultProps = { titleTag: 'h5' };\n\nconst FalconCardHeader = ({ title, light, titleTag, titleClass, className, breakPoint, children }) => (\n  <CardHeader className={classNames({ 'bg-light': light }, className)}>\n    {children ? (\n      <Row className=\"align-items-center\">\n        <Col>\n          <Title breakPoint={breakPoint} titleTag={titleTag} className={titleClass}>\n            {title}\n          </Title>\n        </Col>\n        <Col\n          {...{ [breakPoint ? breakPoint : 'xs']: 'auto' }}\n          className={`text${breakPoint ? `-${breakPoint}` : ''}-right`}\n        >\n          {children}\n        </Col>\n      </Row>\n    ) : (\n      <Title breakPoint={breakPoint} titleTag={titleTag} className={titleClass}>\n        {title}\n      </Title>\n    )}\n  </CardHeader>\n);\n\nFalconCardHeader.propTypes = {\n  title: PropTypes.node.isRequired,\n  light: PropTypes.bool,\n  breakPoint: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', 'xxl']),\n  titleTag: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  titleClass: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n\nFalconCardHeader.defaultProps = { light: true };\n\nexport default FalconCardHeader;\n"]},"metadata":{},"sourceType":"module"}