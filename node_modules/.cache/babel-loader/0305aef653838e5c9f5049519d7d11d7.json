{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/pricing/PricingAlt.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardBody, Col, CustomInput, Label, Row } from 'reactstrap';\nimport Flex from '../common/Flex';\nimport FaqCol from '../faq/FaqCol';\nimport PricingCardAlt from './PricingCardAlt';\nimport { isIterableArray } from '../../helpers/utils';\nimport pricingAlt from '../../data/pricing/pricingAlt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FalconPricingAlt = () => {\n  _s();\n\n  // State\n  const [isYearly, setIsYearly] = useState(true);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          className: \"text-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fs-1\",\n            children: \"Falcon Pricing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"fs-2 fs-md-3\",\n            children: [\"Free plan with all the basic features. \", /*#__PURE__*/_jsxDEV(\"br\", {\n              className: \"d-none d-md-block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 54\n            }, this), \"Pro plan for advanced users.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            justify: \"center\",\n            className: \"fs--1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"mr-2 mb-0\",\n              htmlFor: \"customSwitch1\",\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              type: \"switch\",\n              id: \"customSwitch1\",\n              label: \"Yearly\",\n              checked: isYearly,\n              onChange: () => setIsYearly(!isYearly)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: isIterableArray(pricingAlt) && pricingAlt.map((pricingCard, index) => /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(PricingCardAlt, { ...pricingCard,\n                isYearly: isYearly\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mt-5\",\n            children: \"Looking for personal or small team task management?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"fs-1\",\n            children: [\"Try the \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#!\",\n              children: \"basic version\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 23\n            }, this), \" of Falcon\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FalconPricingAlt, \"uwY7o60n5upfd65iyaDhxUGXDpY=\");\n\n_c = FalconPricingAlt;\n\nconst PricingAlt = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FalconPricingAlt, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaqCol, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = PricingAlt;\nexport default PricingAlt;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FalconPricingAlt\");\n$RefreshReg$(_c2, \"PricingAlt\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/pricing/PricingAlt.js"],"names":["React","Fragment","useState","Link","Card","CardBody","Col","CustomInput","Label","Row","Flex","FaqCol","PricingCardAlt","isIterableArray","pricingAlt","FalconPricingAlt","isYearly","setIsYearly","map","pricingCard","index","PricingAlt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,EAA8BC,WAA9B,EAA2CC,KAA3C,EAAkDC,GAAlD,QAA6D,YAA7D;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,2BACE,QAAC,QAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,SAAS,EAAC,kBAAvB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA,+EACyC;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBADzC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME,QAAC,IAAD;AAAM,YAAA,KAAK,EAAC,QAAZ;AAAqB,YAAA,OAAO,EAAC,QAA7B;AAAsC,YAAA,SAAS,EAAC,OAAhD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,WAAjB;AAA6B,cAAA,OAAO,EAAC,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,WAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,EAAE,EAAC,eAFL;AAGE,cAAA,KAAK,EAAC,QAHR;AAIE,cAAA,OAAO,EAAEc,QAJX;AAKE,cAAA,QAAQ,EAAE,MAAMC,WAAW,CAAC,CAACD,QAAF;AAL7B;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAA,iCACE,QAAC,GAAD;AAAA,sBACGH,eAAe,CAACC,UAAD,CAAf,IACCA,UAAU,CAACI,GAAX,CAAe,CAACC,WAAD,EAAcC,KAAd,kBACb,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,EAAT;AAAa,cAAA,EAAE,MAAf;AAAA,qCACE,QAAC,cAAD,OAAoBD,WAApB;AAAiC,gBAAA,QAAQ,EAAEH;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF,eAAqBI,KAArB;AAAA;AAAA;AAAA;AAAA,oBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApBF,eA8BE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,SAAS,EAAC,aAAvB;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,MAAb;AAAA,gDACU,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA/CD;;GAAML,gB;;KAAAA,gB;;AAiDN,MAAMM,UAAU,GAAG,MAAM;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMA,U;AASN,eAAeA,UAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardBody, Col, CustomInput, Label, Row } from 'reactstrap';\nimport Flex from '../common/Flex';\nimport FaqCol from '../faq/FaqCol';\nimport PricingCardAlt from './PricingCardAlt';\nimport { isIterableArray } from '../../helpers/utils';\nimport pricingAlt from '../../data/pricing/pricingAlt';\n\nconst FalconPricingAlt = () => {\n  // State\n  const [isYearly, setIsYearly] = useState(true);\n\n  return (\n    <Card className=\"mb-3\">\n      <CardBody>\n        <Row className=\"justify-content-center\">\n          <Col xs={12} className=\"text-center mb-4\">\n            <div className=\"fs-1\">Falcon Pricing</div>\n            <h3 className=\"fs-2 fs-md-3\">\n              Free plan with all the basic features. <br className=\"d-none d-md-block\" />\n              Pro plan for advanced users.\n            </h3>\n            <Flex align=\"center\" justify=\"center\" className=\"fs--1\">\n              <Label className=\"mr-2 mb-0\" htmlFor=\"customSwitch1\">\n                Monthly\n              </Label>\n              <CustomInput\n                type=\"switch\"\n                id=\"customSwitch1\"\n                label=\"Yearly\"\n                checked={isYearly}\n                onChange={() => setIsYearly(!isYearly)}\n              />\n            </Flex>\n          </Col>\n          <Col xs={12} lg={8}>\n            <Row>\n              {isIterableArray(pricingAlt) &&\n                pricingAlt.map((pricingCard, index) => (\n                  <Col xs={12} md key={index}>\n                    <PricingCardAlt {...pricingCard} isYearly={isYearly} />\n                  </Col>\n                ))}\n            </Row>\n          </Col>\n          <Col xs={12} className=\"text-center\">\n            <h5 className=\"mt-5\">Looking for personal or small team task management?</h5>\n            <p className=\"fs-1\">\n              Try the <Link to=\"#!\">basic version</Link> of Falcon\n            </p>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nconst PricingAlt = () => {\n  return (\n    <Fragment>\n      <FalconPricingAlt />\n      <FaqCol />\n    </Fragment>\n  );\n};\n\nexport default PricingAlt;\n"]},"metadata":{},"sourceType":"module"}