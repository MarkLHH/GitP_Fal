{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useContext}from'react';import Highlight,{defaultProps}from'prism-react-renderer';import lightTheme from'prism-react-renderer/themes/duotoneLight';import darkTheme from'prism-react-renderer/themes/dracula';// eslint-disable-next-line import/no-extraneous-dependencies\nimport prettier from'prettier/standalone';// eslint-disable-next-line import/no-extraneous-dependencies\nimport parserHtml from'prettier/parser-html';import AppContext from'../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";var getFormattedCode=function getFormattedCode(code,language){return prettier.format(code,{parser:language,plugins:[parserHtml]});};var CodeHighlight=function CodeHighlight(_ref){var code=_ref.code,language=_ref.language;var _useContext=useContext(AppContext),isDark=_useContext.isDark;return/*#__PURE__*/_jsx(Highlight,_objectSpread(_objectSpread({},defaultProps),{},{code:language==='html'?getFormattedCode(code,language):code,language:language,theme:isDark?darkTheme:lightTheme,children:function children(_ref2){var className=_ref2.className,style=_ref2.style,tokens=_ref2.tokens,getLineProps=_ref2.getLineProps,getTokenProps=_ref2.getTokenProps;return/*#__PURE__*/_jsx(\"pre\",{className:\"\".concat(className),style:_objectSpread(_objectSpread({},style),{},{padding:'10px',borderRadius:'4px',border:0}),children:tokens.map(function(line,i){return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({},getLineProps({line:line,key:i})),{},{children:line.map(function(token,key){return/*#__PURE__*/_jsx(\"span\",_objectSpread({},getTokenProps({token:token,key:key})),key);})}),i);})});}}));};CodeHighlight.defaultProps={language:'html'};export default CodeHighlight;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/CodeHighlight.js"],"names":["React","useContext","Highlight","defaultProps","lightTheme","darkTheme","prettier","parserHtml","AppContext","getFormattedCode","code","language","format","parser","plugins","CodeHighlight","isDark","className","style","tokens","getLineProps","getTokenProps","padding","borderRadius","border","map","line","i","key","token"],"mappings":"qGAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CAEA,MAAOC,CAAAA,SAAP,EAAoBC,YAApB,KAAwC,sBAAxC,CACA,MAAOC,CAAAA,UAAP,KAAuB,0CAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qCAAtB,CAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA;AACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAOC,QAAP,QACvBL,CAAAA,QAAQ,CAACM,MAAT,CAAgBF,IAAhB,CAAsB,CACpBG,MAAM,CAAEF,QADY,CAEpBG,OAAO,CAAE,CAACP,UAAD,CAFW,CAAtB,CADuB,EAAzB,CAMA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAwB,IAArBL,CAAAA,IAAqB,MAArBA,IAAqB,CAAfC,QAAe,MAAfA,QAAe,iBACzBV,UAAU,CAACO,UAAD,CADe,CACpCQ,MADoC,aACpCA,MADoC,CAE5C,mBACE,KAAC,SAAD,gCACMb,YADN,MAEE,IAAI,CAAEQ,QAAQ,GAAK,MAAb,CAAsBF,gBAAgB,CAACC,IAAD,CAAOC,QAAP,CAAtC,CAAyDD,IAFjE,CAGE,QAAQ,CAAEC,QAHZ,CAIE,KAAK,CAAEK,MAAM,CAAGX,SAAH,CAAeD,UAJ9B,UAMG,4BAAGa,CAAAA,SAAH,OAAGA,SAAH,CAAcC,KAAd,OAAcA,KAAd,CAAqBC,MAArB,OAAqBA,MAArB,CAA6BC,YAA7B,OAA6BA,YAA7B,CAA2CC,aAA3C,OAA2CA,aAA3C,oBACC,YACE,SAAS,WAAKJ,SAAL,CADX,CAEE,KAAK,gCACAC,KADA,MAEHI,OAAO,CAAE,MAFN,CAGHC,YAAY,CAAE,KAHX,CAIHC,MAAM,CAAE,CAJL,EAFP,UASGL,MAAM,CAACM,GAAP,CAAW,SAACC,IAAD,CAAOC,CAAP,qBACV,0CAAiBP,YAAY,CAAC,CAAEM,IAAI,CAAJA,IAAF,CAAQE,GAAG,CAAED,CAAb,CAAD,CAA7B,eACGD,IAAI,CAACD,GAAL,CAAS,SAACI,KAAD,CAAQD,GAAR,qBACR,6BAAoBP,aAAa,CAAC,CAAEQ,KAAK,CAALA,KAAF,CAASD,GAAG,CAAHA,GAAT,CAAD,CAAjC,EAAWA,GAAX,CADQ,EAAT,CADH,GAAUD,CAAV,CADU,EAAX,CATH,EADD,EANH,GADF,CA4BD,CA9BD,CAoCAZ,aAAa,CAACZ,YAAd,CAA6B,CAAEQ,QAAQ,CAAE,MAAZ,CAA7B,CAEA,cAAeI,CAAAA,aAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport lightTheme from 'prism-react-renderer/themes/duotoneLight';\nimport darkTheme from 'prism-react-renderer/themes/dracula';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport prettier from 'prettier/standalone';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport parserHtml from 'prettier/parser-html';\n\nimport AppContext from '../../context/Context';\n\nconst getFormattedCode = (code, language) =>\n  prettier.format(code, {\n    parser: language,\n    plugins: [parserHtml]\n  });\n\nconst CodeHighlight = ({ code, language }) => {\n  const { isDark } = useContext(AppContext);\n  return (\n    <Highlight\n      {...defaultProps}\n      code={language === 'html' ? getFormattedCode(code, language) : code}\n      language={language}\n      theme={isDark ? darkTheme : lightTheme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={`${className}`}\n          style={{\n            ...style,\n            padding: '10px',\n            borderRadius: '4px',\n            border: 0\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  );\n};\nCodeHighlight.propTypes = {\n  code: PropTypes.string.isRequired,\n  language: PropTypes.string\n};\n\nCodeHighlight.defaultProps = { language: 'html' };\n\nexport default CodeHighlight;\n"]},"metadata":{},"sourceType":"module"}