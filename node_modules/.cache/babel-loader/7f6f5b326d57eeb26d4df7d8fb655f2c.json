{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment}from'react';import PageHeader from'../common/PageHeader';import{Button,Card,CardBody,CardHeader}from'reactstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import'leaflet/dist/leaflet.css';import{Map}from'react-leaflet';import MarkerCluster from'../dashboard/MarkerCluster';import'leaflet.tilelayer.colorfilter';import L from'leaflet';import{useContext}from'react';import AppContext from'../../context/Context';import FalconEditor from'../common/FalconEditor';import{useRef}from'react';import{useEffect}from'react';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var leafletCode=\"function LeafletMap  () {\\n  const { isDark } = useContext(AppContext);\\n  \\n  const markers = [\\n    {\\n      lat: 53.958332,\\n      long: -1.080278,\\n      name: 'Diana Meyer',\\n      street: 'Slude Strand 27',\\n      location: '1130 Kobenhavn'\\n    },\\n    {\\n      lat: 52.958332,\\n      long: -1.080278,\\n      name: 'Diana Meyer',\\n      street: 'Slude Strand 27',\\n      location: '1130 Kobenhavn'\\n    },\\n    {\\n      lat: 51.958332,\\n      long: -1.080278,\\n      name: 'Diana Meyer',\\n      street: 'Slude Strand 27',\\n      location: '1130 Kobenhavn'\\n    },]\\n  const filter = isDark\\n    ? ['invert:98%', 'grayscale:69%', 'bright:89%', 'contrast:111%', 'hue:205deg', 'saturate:1000%']\\n    : ['bright:101%', 'contrast:101%', 'hue:23deg', 'saturate:225%'];\\n\\n\\n  if(mapWidth){\\n    useEffect(() => {\\n      L.tileLayer\\n        .colorFilter('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\\n          attribution: null,\\n          transparent: true,\\n          filter: filter\\n        })\\n        .addTo(map.current.leafletElement);\\n    }, [filter]);\\n    return (\\n      <Map\\n        center={[10.737, 0]}\\n        zoom={1}\\n        minZoom={1}\\n        maxZoom={18}\\n        zoomSnap={0.5}\\n        className=\\\"h-100 w-100\\\"\\n        style={{ width:mapWidth, minHeight: 300 }}\\n        ref={map}\\n      >\\n        <MarkerCluster markers={markers} />\\n      </Map>\\n    );\\n  }\\n  return null;\\n};\";var Leaflet=function Leaflet(){var _useContext=useContext(AppContext),isDark=_useContext.isDark;var map=useRef(null);var _useState=useState(),_useState2=_slicedToArray(_useState,2),mapWidth=_useState2[0],setMapWidth=_useState2[1];var egMap=useRef();useEffect(function(){var timer=setTimeout(function(){setMapWidth(egMap.current.offsetWidth);},500);return function(){clearTimeout(timer);};},[isDark,mapWidth]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:\"React Leaflet\",description:\"We uses <code> react-Leaflet </code> that provides an abstraction of <strong>Leaflet</strong> as <strong>React components</strong>. For the beautiful animated marker Clustering functionality for leaflet map we use <a href='https://www.npmjs.com/package/leaflet.markercluster' target='_blank' >Leaflet.markercluster</a> and we apply CSS color filter on map tiles by <a href='https://github.com/xtk93x/Leaflet.TileLayer.ColorFilter' target='_blank' >Leaflet.TileLayer.ColorFilter</a> .  It has all the mapping features most developers ever need \",className:\"mb-3\",children:/*#__PURE__*/_jsxs(Button,{tag:\"a\",href:\"https://react-leaflet.js.org/\",target:\"_blank\",color:\"link\",size:\"sm\",className:\"pl-0\",children:[\"React Leaflet Documentation\",/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"chevron-right\",className:\"ml-1 fs--2\"})]})}),/*#__PURE__*/_jsxs(Card,{innerRef:egMap,children:[/*#__PURE__*/_jsx(CardHeader,{className:\"bg-light\",children:/*#__PURE__*/_jsx(\"h4\",{className:\"mb-0\",children:\"Example\"})}),/*#__PURE__*/_jsx(CardBody,{className:\"p-0\",children:/*#__PURE__*/_jsx(FalconEditor,{code:leafletCode,scope:{AppContext:AppContext,MarkerCluster:MarkerCluster,Map:Map,map:map,mapWidth:mapWidth,L:L},language:\"jsx\"})})]})]});};export default Leaflet;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/plugins/Leaflet.js"],"names":["React","Fragment","PageHeader","Button","Card","CardBody","CardHeader","FontAwesomeIcon","Map","MarkerCluster","L","useContext","AppContext","FalconEditor","useRef","useEffect","useState","leafletCode","Leaflet","isDark","map","mapWidth","setMapWidth","egMap","timer","setTimeout","current","offsetWidth","clearTimeout"],"mappings":"sGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,QAAvB,CAAiCC,UAAjC,KAAmD,YAAnD,CACA,OAASC,eAAT,KAAgC,gCAAhC,CAEA,MAAO,0BAAP,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAO,+BAAP,CACA,MAAOC,CAAAA,CAAP,KAAc,SAAd,CACA,OAASC,UAAT,KAA2B,OAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,OAASC,MAAT,KAAuB,OAAvB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,GAAMC,CAAAA,WAAW,25CAAjB,CAyDA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,iBACDP,UAAU,CAACC,UAAD,CADT,CACZO,MADY,aACZA,MADY,CAEpB,GAAIC,CAAAA,GAAG,CAAGN,MAAM,CAAC,IAAD,CAAhB,CAFoB,cAGYE,QAAQ,EAHpB,wCAGbK,QAHa,eAGHC,WAHG,eAKpB,GAAMC,CAAAA,KAAK,CAAGT,MAAM,EAApB,CACAC,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,KAAK,CAAGC,UAAU,CAAC,UAAM,CAC7BH,WAAW,CAACC,KAAK,CAACG,OAAN,CAAcC,WAAf,CAAX,CACD,CAFuB,CAErB,GAFqB,CAAxB,CAGA,MAAO,WAAM,CACXC,YAAY,CAACJ,KAAD,CAAZ,CACD,CAFD,CAGD,CAPQ,CAON,CAACL,MAAD,CAASE,QAAT,CAPM,CAAT,CASA,mBACE,MAAC,QAAD,yBACE,KAAC,UAAD,EACE,KAAK,CAAC,eADR,CAEE,WAAW,CAAC,iiBAFd,CAGE,SAAS,CAAC,MAHZ,uBAKE,MAAC,MAAD,EAAQ,GAAG,CAAC,GAAZ,CAAgB,IAAI,CAAC,+BAArB,CAAqD,MAAM,CAAC,QAA5D,CAAqE,KAAK,CAAC,MAA3E,CAAkF,IAAI,CAAC,IAAvF,CAA4F,SAAS,CAAC,MAAtG,sDAEE,KAAC,eAAD,EAAiB,IAAI,CAAC,eAAtB,CAAsC,SAAS,CAAC,YAAhD,EAFF,GALF,EADF,cAWE,MAAC,IAAD,EAAM,QAAQ,CAAEE,KAAhB,wBACE,KAAC,UAAD,EAAY,SAAS,CAAC,UAAtB,uBACE,WAAI,SAAS,CAAC,MAAd,qBADF,EADF,cAKE,KAAC,QAAD,EAAU,SAAS,CAAC,KAApB,uBACE,KAAC,YAAD,EACE,IAAI,CAAEN,WADR,CAEE,KAAK,CAAE,CAAEL,UAAU,CAAVA,UAAF,CAAcH,aAAa,CAAbA,aAAd,CAA6BD,GAAG,CAAHA,GAA7B,CAAkCY,GAAG,CAAHA,GAAlC,CAAuCC,QAAQ,CAARA,QAAvC,CAAiDX,CAAC,CAADA,CAAjD,CAFT,CAGE,QAAQ,CAAC,KAHX,EADF,EALF,GAXF,GADF,CA2BD,CA1CD,CA4CA,cAAeQ,CAAAA,OAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PageHeader from '../common/PageHeader';\r\nimport { Button, Card, CardBody, CardHeader } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Map } from 'react-leaflet';\r\nimport MarkerCluster from '../dashboard/MarkerCluster';\r\nimport 'leaflet.tilelayer.colorfilter';\r\nimport L from 'leaflet';\r\nimport { useContext } from 'react';\r\nimport AppContext from '../../context/Context';\r\nimport FalconEditor from '../common/FalconEditor';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst leafletCode = `function LeafletMap  () {\r\n  const { isDark } = useContext(AppContext);\r\n  \r\n  const markers = [\r\n    {\r\n      lat: 53.958332,\r\n      long: -1.080278,\r\n      name: 'Diana Meyer',\r\n      street: 'Slude Strand 27',\r\n      location: '1130 Kobenhavn'\r\n    },\r\n    {\r\n      lat: 52.958332,\r\n      long: -1.080278,\r\n      name: 'Diana Meyer',\r\n      street: 'Slude Strand 27',\r\n      location: '1130 Kobenhavn'\r\n    },\r\n    {\r\n      lat: 51.958332,\r\n      long: -1.080278,\r\n      name: 'Diana Meyer',\r\n      street: 'Slude Strand 27',\r\n      location: '1130 Kobenhavn'\r\n    },]\r\n  const filter = isDark\r\n    ? ['invert:98%', 'grayscale:69%', 'bright:89%', 'contrast:111%', 'hue:205deg', 'saturate:1000%']\r\n    : ['bright:101%', 'contrast:101%', 'hue:23deg', 'saturate:225%'];\r\n\r\n\r\n  if(mapWidth){\r\n    useEffect(() => {\r\n      L.tileLayer\r\n        .colorFilter('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n          attribution: null,\r\n          transparent: true,\r\n          filter: filter\r\n        })\r\n        .addTo(map.current.leafletElement);\r\n    }, [filter]);\r\n    return (\r\n      <Map\r\n        center={[10.737, 0]}\r\n        zoom={1}\r\n        minZoom={1}\r\n        maxZoom={18}\r\n        zoomSnap={0.5}\r\n        className=\"h-100 w-100\"\r\n        style={{ width:mapWidth, minHeight: 300 }}\r\n        ref={map}\r\n      >\r\n        <MarkerCluster markers={markers} />\r\n      </Map>\r\n    );\r\n  }\r\n  return null;\r\n};`;\r\nconst Leaflet = () => {\r\n  const { isDark } = useContext(AppContext);\r\n  let map = useRef(null);\r\n  const [mapWidth, setMapWidth] = useState();\r\n\r\n  const egMap = useRef();\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setMapWidth(egMap.current.offsetWidth);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [isDark, mapWidth]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader\r\n        title=\"React Leaflet\"\r\n        description=\"We uses <code> react-Leaflet </code> that provides an abstraction of <strong>Leaflet</strong> as <strong>React components</strong>. For the beautiful animated marker Clustering functionality for leaflet map we use <a href='https://www.npmjs.com/package/leaflet.markercluster' target='_blank' >Leaflet.markercluster</a> and we apply CSS color filter on map tiles by <a href='https://github.com/xtk93x/Leaflet.TileLayer.ColorFilter' target='_blank' >Leaflet.TileLayer.ColorFilter</a> .  It has all the mapping features most developers ever need \"\r\n        className=\"mb-3\"\r\n      >\r\n        <Button tag=\"a\" href=\"https://react-leaflet.js.org/\" target=\"_blank\" color=\"link\" size=\"sm\" className=\"pl-0\">\r\n          React Leaflet Documentation\r\n          <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\r\n        </Button>\r\n      </PageHeader>\r\n      <Card innerRef={egMap}>\r\n        <CardHeader className=\"bg-light\">\r\n          <h4 className=\"mb-0\">Example</h4>\r\n        </CardHeader>\r\n\r\n        <CardBody className=\"p-0\">\r\n          <FalconEditor\r\n            code={leafletCode}\r\n            scope={{ AppContext, MarkerCluster, Map, map, mapWidth, L }}\r\n            language=\"jsx\"\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Leaflet;\r\n"]},"metadata":{},"sourceType":"module"}