{"ast":null,"code":"import React,{Fragment}from'react';import PropTypes from'prop-types';import{Media}from'reactstrap';import Avatar from'../common/Avatar';import{Link}from'react-router-dom';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import FeedDropDown from'./FeedDropDown';import FalconCardHeader from'../common/FalconCardHeader';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FeedCardHeader=function FeedCardHeader(_ref){var name=_ref.name,avatarSrc=_ref.avatarSrc,time=_ref.time,location=_ref.location,privacy=_ref.privacy,status=_ref.status,share=_ref.share;return/*#__PURE__*/_jsx(FalconCardHeader,{title:/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Avatar,{src:avatarSrc,className:status,size:\"2xl\"}),/*#__PURE__*/_jsxs(Media,{body:true,className:\"align-self-center ml-2\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"mb-1 line-height-1\",children:[/*#__PURE__*/_jsx(Link,{className:\"font-weight-semi-bold\",to:\"/pages/profile\",children:name}),!!share&&/*#__PURE__*/_jsxs(\"span\",{className:\"ml-1\",children:[\"shared \",/^[aeiou]/g.test(share.toLowerCase())?'an':'a',\" \",/*#__PURE__*/_jsx(\"a\",{href:\"#!\",children:share})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-0 fs--1\",children:[time,\" \\u2022 \",location,\" \\u2022\",' ',/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:classNames({users:privacy==='friends',lock:privacy==='private','globe-americas':privacy==='public'})})]})]})]}),titleTag:Media,children:/*#__PURE__*/_jsx(FeedDropDown,{})});};FeedCardHeader.propsType={name:PropTypes.string.isRequired,avatarSrc:PropTypes.string.isRequired,time:PropTypes.string.isRequired,location:PropTypes.string.isRequired,privacyIcon:PropTypes.string.isRequired,status:PropTypes.string,share:PropTypes.bool};export default FeedCardHeader;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/feed/FeedCardHeader.js"],"names":["React","Fragment","PropTypes","Media","Avatar","Link","FontAwesomeIcon","FeedDropDown","FalconCardHeader","classNames","FeedCardHeader","name","avatarSrc","time","location","privacy","status","share","test","toLowerCase","users","lock","propsType","string","isRequired","privacyIcon","bool"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,KAAT,KAAsB,YAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAiE,IAA9DC,CAAAA,IAA8D,MAA9DA,IAA8D,CAAxDC,SAAwD,MAAxDA,SAAwD,CAA7CC,IAA6C,MAA7CA,IAA6C,CAAvCC,QAAuC,MAAvCA,QAAuC,CAA7BC,OAA6B,MAA7BA,OAA6B,CAApBC,MAAoB,MAApBA,MAAoB,CAAZC,KAAY,MAAZA,KAAY,CACtF,mBACE,KAAC,gBAAD,EACE,KAAK,cACH,MAAC,QAAD,yBACE,KAAC,MAAD,EAAQ,GAAG,CAAEL,SAAb,CAAwB,SAAS,CAAEI,MAAnC,CAA2C,IAAI,CAAC,KAAhD,EADF,cAEE,MAAC,KAAD,EAAO,IAAI,KAAX,CAAY,SAAS,CAAC,wBAAtB,wBACE,WAAG,SAAS,CAAC,oBAAb,wBACE,KAAC,IAAD,EAAM,SAAS,CAAC,uBAAhB,CAAwC,EAAE,CAAC,gBAA3C,UACGL,IADH,EADF,CAIG,CAAC,CAACM,KAAF,eACC,cAAM,SAAS,CAAC,MAAhB,qBACU,YAAYC,IAAZ,CAAiBD,KAAK,CAACE,WAAN,EAAjB,EAAwC,IAAxC,CAA+C,GADzD,kBAC8D,UAAG,IAAI,CAAC,IAAR,UAAcF,KAAd,EAD9D,GALJ,GADF,cAWE,WAAG,SAAS,CAAC,YAAb,WACGJ,IADH,YACYC,QADZ,WACwB,GADxB,cAEE,KAAC,eAAD,EACE,IAAI,CAAEL,UAAU,CAAC,CACfW,KAAK,CAAEL,OAAO,GAAK,SADJ,CAEfM,IAAI,CAAEN,OAAO,GAAK,SAFH,CAGf,iBAAkBA,OAAO,GAAK,QAHf,CAAD,CADlB,EAFF,GAXF,GAFF,GAFJ,CA4BE,QAAQ,CAAEZ,KA5BZ,uBA8BE,KAAC,YAAD,IA9BF,EADF,CAkCD,CAnCD,CAqCAO,cAAc,CAACY,SAAf,CAA2B,CACzBX,IAAI,CAAET,SAAS,CAACqB,MAAV,CAAiBC,UADE,CAEzBZ,SAAS,CAAEV,SAAS,CAACqB,MAAV,CAAiBC,UAFH,CAGzBX,IAAI,CAAEX,SAAS,CAACqB,MAAV,CAAiBC,UAHE,CAIzBV,QAAQ,CAAEZ,SAAS,CAACqB,MAAV,CAAiBC,UAJF,CAKzBC,WAAW,CAAEvB,SAAS,CAACqB,MAAV,CAAiBC,UALL,CAMzBR,MAAM,CAAEd,SAAS,CAACqB,MANO,CAOzBN,KAAK,CAAEf,SAAS,CAACwB,IAPQ,CAA3B,CAUA,cAAehB,CAAAA,cAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Media } from 'reactstrap';\nimport Avatar from '../common/Avatar';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FeedDropDown from './FeedDropDown';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport classNames from 'classnames';\n\nconst FeedCardHeader = ({ name, avatarSrc, time, location, privacy, status, share }) => {\n  return (\n    <FalconCardHeader\n      title={\n        <Fragment>\n          <Avatar src={avatarSrc} className={status} size=\"2xl\" />\n          <Media body className=\"align-self-center ml-2\">\n            <p className=\"mb-1 line-height-1\">\n              <Link className=\"font-weight-semi-bold\" to=\"/pages/profile\">\n                {name}\n              </Link>\n              {!!share && (\n                <span className=\"ml-1\">\n                  shared {/^[aeiou]/g.test(share.toLowerCase()) ? 'an' : 'a'} <a href=\"#!\">{share}</a>\n                </span>\n              )}\n            </p>\n            <p className=\"mb-0 fs--1\">\n              {time} • {location} •{' '}\n              <FontAwesomeIcon\n                icon={classNames({\n                  users: privacy === 'friends',\n                  lock: privacy === 'private',\n                  'globe-americas': privacy === 'public'\n                })}\n              />\n            </p>\n          </Media>\n        </Fragment>\n      }\n      titleTag={Media}\n    >\n      <FeedDropDown />\n    </FalconCardHeader>\n  );\n};\n\nFeedCardHeader.propsType = {\n  name: PropTypes.string.isRequired,\n  avatarSrc: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  privacyIcon: PropTypes.string.isRequired,\n  status: PropTypes.string,\n  share: PropTypes.bool\n};\n\nexport default FeedCardHeader;\n"]},"metadata":{},"sourceType":"module"}