{"ast":null,"code":"import React,{useEffect}from'react';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import{toast,ToastContainer}from'react-toastify';import{CloseButton,Fade}from'../components/common/Toast';import DashboardLayout from'./DashboardLayout';import ErrorLayout from'./ErrorLayout';import loadable from'@loadable/component';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AuthBasicLayout=loadable(function(){return import('./AuthBasicLayout');});var Landing=loadable(function(){return import('../components/landing/Landing');});var WizardLayout=loadable(function(){return import('../components/auth/wizard/WizardLayout');});var AuthCardRoutes=loadable(function(){return import('../components/auth/card/AuthCardRoutes');});var AuthSplitRoutes=loadable(function(){return import('../components/auth/split/AuthSplitRoutes');});var Layout=function Layout(){useEffect(function(){AuthBasicLayout.preload();Landing.preload();WizardLayout.preload();AuthCardRoutes.preload();AuthSplitRoutes.preload();},[]);return/*#__PURE__*/_jsxs(Router,{fallback:/*#__PURE__*/_jsx(\"span\",{}),children:[/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/landing\",exact:true,component:Landing}),/*#__PURE__*/_jsx(Route,{path:\"/authentication/card\",component:AuthCardRoutes}),/*#__PURE__*/_jsx(Route,{path:\"/authentication/split\",component:AuthSplitRoutes}),/*#__PURE__*/_jsx(Route,{path:\"/authentication/wizard\",component:WizardLayout}),/*#__PURE__*/_jsx(Route,{path:\"/errors\",component:ErrorLayout}),/*#__PURE__*/_jsx(Route,{path:\"/authentication/basic\",component:AuthBasicLayout}),/*#__PURE__*/_jsx(Route,{component:DashboardLayout})]}),/*#__PURE__*/_jsx(ToastContainer,{transition:Fade,closeButton:/*#__PURE__*/_jsx(CloseButton,{}),position:toast.POSITION.BOTTOM_LEFT})]});};export default Layout;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/layouts/Layout.js"],"names":["React","useEffect","BrowserRouter","Router","Route","Switch","toast","ToastContainer","CloseButton","Fade","DashboardLayout","ErrorLayout","loadable","AuthBasicLayout","Landing","WizardLayout","AuthCardRoutes","AuthSplitRoutes","Layout","preload","POSITION","BOTTOM_LEFT"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAuD,kBAAvD,CACA,OAASC,KAAT,CAAgBC,cAAhB,KAAsC,gBAAtC,CACA,OAASC,WAAT,CAAsBC,IAAtB,KAAkC,4BAAlC,CAEA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,C,wFACA,GAAMC,CAAAA,eAAe,CAAGD,QAAQ,CAAC,iBAAM,QAAO,mBAAP,CAAN,EAAD,CAAhC,CACA,GAAME,CAAAA,OAAO,CAAGF,QAAQ,CAAC,iBAAM,QAAO,+BAAP,CAAN,EAAD,CAAxB,CACA,GAAMG,CAAAA,YAAY,CAAGH,QAAQ,CAAC,iBAAM,QAAO,wCAAP,CAAN,EAAD,CAA7B,CACA,GAAMI,CAAAA,cAAc,CAAGJ,QAAQ,CAAC,iBAAM,QAAO,wCAAP,CAAN,EAAD,CAA/B,CACA,GAAMK,CAAAA,eAAe,CAAGL,QAAQ,CAAC,iBAAM,QAAO,0CAAP,CAAN,EAAD,CAAhC,CAEA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBjB,SAAS,CAAC,UAAM,CACdY,eAAe,CAACM,OAAhB,GACAL,OAAO,CAACK,OAAR,GACAJ,YAAY,CAACI,OAAb,GACAH,cAAc,CAACG,OAAf,GACAF,eAAe,CAACE,OAAhB,GACD,CANQ,CAMN,EANM,CAAT,CAQA,mBACE,MAAC,MAAD,EAAQ,QAAQ,cAAE,eAAlB,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,KAAK,KAA5B,CAA6B,SAAS,CAAEL,OAAxC,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,sBAAZ,CAAmC,SAAS,CAAEE,cAA9C,EAFF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,uBAAZ,CAAoC,SAAS,CAAEC,eAA/C,EAHF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,wBAAZ,CAAqC,SAAS,CAAEF,YAAhD,EAJF,cAKE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,SAAS,CAAEJ,WAAjC,EALF,cAME,KAAC,KAAD,EAAO,IAAI,CAAC,uBAAZ,CAAoC,SAAS,CAAEE,eAA/C,EANF,cAOE,KAAC,KAAD,EAAO,SAAS,CAAEH,eAAlB,EAPF,GADF,cAUE,KAAC,cAAD,EAAgB,UAAU,CAAED,IAA5B,CAAkC,WAAW,cAAE,KAAC,WAAD,IAA/C,CAAgE,QAAQ,CAAEH,KAAK,CAACc,QAAN,CAAeC,WAAzF,EAVF,GADF,CAcD,CAvBD,CAyBA,cAAeH,CAAAA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { CloseButton, Fade } from '../components/common/Toast';\r\n\r\nimport DashboardLayout from './DashboardLayout';\r\nimport ErrorLayout from './ErrorLayout';\r\n\r\nimport loadable from '@loadable/component';\r\nconst AuthBasicLayout = loadable(() => import('./AuthBasicLayout'));\r\nconst Landing = loadable(() => import('../components/landing/Landing'));\r\nconst WizardLayout = loadable(() => import('../components/auth/wizard/WizardLayout'));\r\nconst AuthCardRoutes = loadable(() => import('../components/auth/card/AuthCardRoutes'));\r\nconst AuthSplitRoutes = loadable(() => import('../components/auth/split/AuthSplitRoutes'));\r\n\r\nconst Layout = () => {\r\n  useEffect(() => {\r\n    AuthBasicLayout.preload();\r\n    Landing.preload();\r\n    WizardLayout.preload();\r\n    AuthCardRoutes.preload();\r\n    AuthSplitRoutes.preload();\r\n  }, []);\r\n\r\n  return (\r\n    <Router fallback={<span />}>\r\n      <Switch>\r\n        <Route path=\"/landing\" exact component={Landing} />\r\n        <Route path=\"/authentication/card\" component={AuthCardRoutes} />\r\n        <Route path=\"/authentication/split\" component={AuthSplitRoutes} />\r\n        <Route path=\"/authentication/wizard\" component={WizardLayout} />\r\n        <Route path=\"/errors\" component={ErrorLayout} />\r\n        <Route path=\"/authentication/basic\" component={AuthBasicLayout} />\r\n        <Route component={DashboardLayout} />\r\n      </Switch>\r\n      <ToastContainer transition={Fade} closeButton={<CloseButton />} position={toast.POSITION.BOTTOM_LEFT} />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}