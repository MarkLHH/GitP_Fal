{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/email/inbox/InboxHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, CardHeader, Col, CustomInput, Row } from 'reactstrap';\nimport Flex from '../../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DropdownFilter from './DropdownFilter';\nimport InboxBulkActions from './InboxBulkActions';\nimport { Link } from 'react-router-dom';\nimport { EmailContext } from '../../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InboxHeader = ({\n  isAllSelected,\n  toggleIsAllSelected,\n  selectedItems,\n  isIndeterminate\n}) => {\n  _s();\n\n  // Context\n  const {\n    filters,\n    handleFilter,\n    currentFilter\n  } = useContext(EmailContext);\n  return /*#__PURE__*/_jsxDEV(CardHeader, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        tag: Flex,\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n          id: \"checkbox-bulk\",\n          type: \"checkbox\",\n          checked: isAllSelected,\n          onChange: () => toggleIsAllSelected(),\n          innerRef: input => input && (input.indeterminate = isIndeterminate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), isAllSelected || isIndeterminate ? /*#__PURE__*/_jsxDEV(InboxBulkActions, {\n          selectedItems: selectedItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"falcon-default\",\n            className: \"btn-sm ml-sm-1\",\n            onClick: () => handleFilter('all'),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"redo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DropdownFilter, {\n            className: \"ml-2\",\n            filters: filters,\n            handleFilter: handleFilter,\n            currentFilter: currentFilter,\n            icon: \"sliders-h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          tag: Link,\n          color: \"falcon-primary\",\n          size: \"sm\",\n          to: \"/email/compose\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"plus\",\n            transform: \"shrink-3\",\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), \"Compose new\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InboxHeader, \"XSQZLxCshfiwrN5uUH+MEBkOpyo=\");\n\n_c = InboxHeader;\nInboxHeader.propTypes = {\n  isAllSelected: PropTypes.bool.isRequired,\n  toggleIsAllSelected: PropTypes.func.isRequired,\n  selectedItems: PropTypes.array.isRequired\n};\nexport default InboxHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"InboxHeader\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/email/inbox/InboxHeader.js"],"names":["React","Fragment","useContext","PropTypes","Button","CardHeader","Col","CustomInput","Row","Flex","FontAwesomeIcon","DropdownFilter","InboxBulkActions","Link","EmailContext","InboxHeader","isAllSelected","toggleIsAllSelected","selectedItems","isIndeterminate","filters","handleFilter","currentFilter","input","indeterminate","propTypes","bool","isRequired","func","array"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, CardHeader, Col, CustomInput, Row } from 'reactstrap';\r\nimport Flex from '../../common/Flex';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DropdownFilter from './DropdownFilter';\r\nimport InboxBulkActions from './InboxBulkActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { EmailContext } from '../../../context/Context';\r\n\r\nconst InboxHeader = ({ isAllSelected, toggleIsAllSelected, selectedItems, isIndeterminate }) => {\r\n  // Context\r\n  const { filters, handleFilter, currentFilter } = useContext(EmailContext);\r\n\r\n  return (\r\n    <CardHeader>\r\n      <Row>\r\n        <Col tag={Flex} align=\"center\">\r\n          <CustomInput\r\n            id=\"checkbox-bulk\"\r\n            type=\"checkbox\"\r\n            checked={isAllSelected}\r\n            onChange={() => toggleIsAllSelected()}\r\n            innerRef={input => input && (input.indeterminate = isIndeterminate)}\r\n          />\r\n\r\n          {isAllSelected || isIndeterminate ? (\r\n            <InboxBulkActions selectedItems={selectedItems} />\r\n          ) : (\r\n            <Fragment>\r\n              <Button color=\"falcon-default\" className=\"btn-sm ml-sm-1\" onClick={() => handleFilter('all')}>\r\n                <FontAwesomeIcon icon=\"redo\" />\r\n              </Button>\r\n              <DropdownFilter\r\n                className=\"ml-2\"\r\n                filters={filters}\r\n                handleFilter={handleFilter}\r\n                currentFilter={currentFilter}\r\n                icon=\"sliders-h\"\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button tag={Link} color=\"falcon-primary\" size=\"sm\" to=\"/email/compose\">\r\n            <FontAwesomeIcon icon=\"plus\" transform=\"shrink-3\" className=\"mr-1\" />\r\n            Compose new\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </CardHeader>\r\n  );\r\n};\r\n\r\nInboxHeader.propTypes = {\r\n  isAllSelected: PropTypes.bool.isRequired,\r\n  toggleIsAllSelected: PropTypes.func.isRequired,\r\n  selectedItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default InboxHeader;\r\n"]},"metadata":{},"sourceType":"module"}