{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/common/ScrollBarCustom.js\";\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport Scrollbar from 'react-scrollbars-custom';\nimport AppContext from '../../context/Context';\n\nconst ScrollBarCustom = ({\n  children,\n  ...rest\n}) => {\n  const {\n    isRTL\n  } = useContext(AppContext);\n  return /*#__PURE__*/React.createElement(Scrollbar, Object.assign({\n    style: {\n      height: '100%',\n      minWidth: '75px'\n    },\n    rtl: isRTL,\n    noScrollX: true,\n    trackYProps: {\n      renderer(props) {\n        const {\n          elementRef,\n          ...restProps\n        } = props;\n        return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, restProps, {\n          ref: elementRef,\n          className: \"TrackY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 18\n          }\n        }));\n      }\n\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nScrollBarCustom.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ScrollBarCustom;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/common/ScrollBarCustom.js"],"names":["PropTypes","React","useContext","Scrollbar","AppContext","ScrollBarCustom","children","rest","isRTL","height","minWidth","renderer","props","elementRef","restProps","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACE,UAAD,CAA5B;AAEA,sBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,QAAQ,EAAE;AAFL,KADT;AAKE,IAAA,GAAG,EAAEF,KALP;AAME,IAAA,SAAS,MANX;AAOE,IAAA,WAAW,EAAE;AACXG,MAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,cAAM;AAAEC,UAAAA,UAAF;AAAc,aAAGC;AAAjB,YAA+BF,KAArC;AACA,4BAAO,8CAAUE,SAAV;AAAqB,UAAA,GAAG,EAAED,UAA1B;AAAsC,UAAA,SAAS,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AAJU;AAPf,KAaMN,IAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAeGD,QAfH,CADF;AAmBD,CAtBD;;AAwBAD,eAAe,CAACU,SAAhB,GAA4B;AAC1BT,EAAAA,QAAQ,EAAEN,SAAS,CAACgB,IAAV,CAAeC;AADC,CAA5B;AAIA,eAAeZ,eAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport Scrollbar from 'react-scrollbars-custom';\nimport AppContext from '../../context/Context';\n\nconst ScrollBarCustom = ({ children, ...rest }) => {\n  const { isRTL } = useContext(AppContext);\n\n  return (\n    <Scrollbar\n      style={{\n        height: '100%',\n        minWidth: '75px'\n      }}\n      rtl={isRTL}\n      noScrollX\n      trackYProps={{\n        renderer(props) {\n          const { elementRef, ...restProps } = props;\n          return <span {...restProps} ref={elementRef} className=\"TrackY\" />;\n        }\n      }}\n      {...rest}\n    >\n      {children}\n    </Scrollbar>\n  );\n};\n\nScrollBarCustom.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default ScrollBarCustom;\n"]},"metadata":{},"sourceType":"module"}