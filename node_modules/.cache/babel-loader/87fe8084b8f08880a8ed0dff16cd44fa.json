{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/auth/wizard/BasicUserForm.js\";\nimport React, { Fragment } from 'react';\nimport WizardInput from './WizardInput';\nimport { Col, CustomInput, Row } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicUserForm = ({\n  register,\n  errors,\n  watch\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WizardInput, {\n      label: \"Name*\",\n      placeholder: \"Name\",\n      name: \"name\",\n      id: \"name\",\n      innerRef: register({\n        required: 'Name is required',\n        minLength: {\n          value: 2,\n          message: 'Min length 2'\n        }\n      }),\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WizardInput, {\n      label: \"Email*\",\n      placeholder: \"Email\",\n      id: \"email\",\n      name: \"email\",\n      innerRef: register({\n        required: 'Email is required',\n        pattern: {\n          value: /[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})/i,\n          message: 'Email must be valid'\n        }\n      }),\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      form: true,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(WizardInput, {\n          type: \"password\",\n          label: \"Password*\",\n          placeholder: \"Password\",\n          id: \"password\",\n          name: \"password\",\n          innerRef: register({\n            required: 'You must specify a password',\n            minLength: {\n              value: 2,\n              message: 'Password must have at least 2 characters'\n            }\n          }),\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(WizardInput, {\n          type: \"password\",\n          label: \"Confirm Password*\",\n          placeholder: \"Confirm Password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          innerRef: register({\n            validate: value => value === watch('password') || 'The password do not match'\n          }),\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WizardInput, {\n      type: \"checkbox\",\n      id: \"agreeToTerms\",\n      tag: CustomInput,\n      label: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [\"I accept the \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          children: \" terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          children: \" privacy policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this),\n      name: \"agreeToTerms\",\n      innerRef: register({\n        required: 'You have to agree with us'\n      }),\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BasicUserForm;\nexport default BasicUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicUserForm\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/auth/wizard/BasicUserForm.js"],"names":["React","Fragment","WizardInput","Col","CustomInput","Row","BasicUserForm","register","errors","watch","required","minLength","value","message","pattern","validate"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport WizardInput from './WizardInput';\nimport { Col, CustomInput, Row } from 'reactstrap';\n\nconst BasicUserForm = ({ register, errors, watch }) => {\n  return (\n    <Fragment>\n      <WizardInput\n        label=\"Name*\"\n        placeholder=\"Name\"\n        name=\"name\"\n        id=\"name\"\n        innerRef={register({\n          required: 'Name is required',\n          minLength: {\n            value: 2,\n            message: 'Min length 2'\n          }\n        })}\n        errors={errors}\n      />\n      <WizardInput\n        label=\"Email*\"\n        placeholder=\"Email\"\n        id=\"email\"\n        name=\"email\"\n        innerRef={register({\n          required: 'Email is required',\n          pattern: {\n            value: /[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})/i,\n            message: 'Email must be valid'\n          }\n        })}\n        errors={errors}\n      />\n      <Row form>\n        <Col>\n          <WizardInput\n            type=\"password\"\n            label=\"Password*\"\n            placeholder=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            innerRef={register({\n              required: 'You must specify a password',\n              minLength: {\n                value: 2,\n                message: 'Password must have at least 2 characters'\n              }\n            })}\n            errors={errors}\n          />\n        </Col>\n        <Col>\n          <WizardInput\n            type=\"password\"\n            label=\"Confirm Password*\"\n            placeholder=\"Confirm Password\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            innerRef={register({\n              validate: value => value === watch('password') || 'The password do not match'\n            })}\n            errors={errors}\n          />\n        </Col>\n      </Row>\n      <WizardInput\n        type=\"checkbox\"\n        id=\"agreeToTerms\"\n        tag={CustomInput}\n        label={\n          <Fragment>\n            I accept the <a href=\"#!\"> terms</a> and <a href=\"#!\"> privacy policy</a>\n          </Fragment>\n        }\n        name=\"agreeToTerms\"\n        innerRef={register({\n          required: 'You have to agree with us'\n        })}\n        errors={errors}\n      />\n    </Fragment>\n  );\n};\n\nexport default BasicUserForm;\n"]},"metadata":{},"sourceType":"module"}