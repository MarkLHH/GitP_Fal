{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/feed/FeedCardFooter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport LikeComentShareCount from './LikeComentShareCount';\nimport IconStatus from './IconStatus';\nimport { CardFooter, Form, Input } from 'reactstrap';\nimport Flex from '../common/Flex';\nimport Avatar from '../common/Avatar';\nimport Comments from './Comments';\nimport { FeedContext } from '../../context/Context';\nimport { isIterableArray } from '../../helpers/utils';\nimport uuid from 'uuid/v1';\nimport av3 from '../../assets/img/team/3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedCardFooter = ({\n  id,\n  countLCS,\n  comments,\n  otherComments\n}) => {\n  _s();\n\n  const {\n    feeds,\n    feedDispatch\n  } = useContext(FeedContext);\n  const [comment, setComment] = useState('');\n\n  const submitComment = e => {\n    e.preventDefault();\n    const newComment = {\n      id: uuid(),\n      avatarSrc: av3,\n      name: 'Rebecca Marry',\n      content: comment,\n      postTime: '1m'\n    };\n\n    const newFeed = () => {\n      const targetedFeed = feeds.find(feed => feed.id === id);\n      targetedFeed.footer = { ...targetedFeed.footer,\n        comments: [newComment, ...comments]\n      };\n      return targetedFeed;\n    };\n\n    feedDispatch({\n      type: 'EDIT',\n      payload: newFeed(),\n      id\n    });\n    setComment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(CardFooter, {\n    className: \"bg-light pt-0\",\n    children: [/*#__PURE__*/_jsxDEV(LikeComentShareCount, {\n      countLCS: countLCS,\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconStatus, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      tag: Form,\n      align: \"center\",\n      className: \"border-top border-200 pt-3\",\n      onSubmit: submitComment,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: av3,\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"rounded-capsule ml-2 fs--1\",\n        placeholder: \"Write a comment...\",\n        value: comment,\n        onChange: ({\n          target\n        }) => setComment(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isIterableArray(comments) && /*#__PURE__*/_jsxDEV(Comments, {\n      comments: comments,\n      loadComment: otherComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeedCardFooter, \"0MCUfO5suN44WtJXzeF92p/9JU8=\");\n\n_c = FeedCardFooter;\nFeedCardFooter.propTypes = {\n  id: PropTypes.string.isRequired,\n  countLCS: PropTypes.object.isRequired,\n  comments: PropTypes.array,\n  otherComments: PropTypes.string\n};\nFeedCardFooter.defaultProps = {\n  countLCS: {\n    like: 0\n  },\n  comments: []\n};\nexport default FeedCardFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedCardFooter\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/feed/FeedCardFooter.js"],"names":["React","useContext","useState","PropTypes","LikeComentShareCount","IconStatus","CardFooter","Form","Input","Flex","Avatar","Comments","FeedContext","isIterableArray","uuid","av3","FeedCardFooter","id","countLCS","comments","otherComments","feeds","feedDispatch","comment","setComment","submitComment","e","preventDefault","newComment","avatarSrc","name","content","postTime","newFeed","targetedFeed","find","feed","footer","type","payload","target","value","propTypes","string","isRequired","object","array","defaultProps","like"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport LikeComentShareCount from './LikeComentShareCount';\nimport IconStatus from './IconStatus';\nimport { CardFooter, Form, Input } from 'reactstrap';\nimport Flex from '../common/Flex';\nimport Avatar from '../common/Avatar';\nimport Comments from './Comments';\nimport { FeedContext } from '../../context/Context';\nimport { isIterableArray } from '../../helpers/utils';\nimport uuid from 'uuid/v1';\nimport av3 from '../../assets/img/team/3.jpg';\n\nconst FeedCardFooter = ({ id, countLCS, comments, otherComments }) => {\n  const { feeds, feedDispatch } = useContext(FeedContext);\n  const [comment, setComment] = useState('');\n\n  const submitComment = e => {\n    e.preventDefault();\n\n    const newComment = {\n      id: uuid(),\n      avatarSrc: av3,\n      name: 'Rebecca Marry',\n      content: comment,\n      postTime: '1m'\n    };\n\n    const newFeed = () => {\n      const targetedFeed = feeds.find(feed => feed.id === id);\n      targetedFeed.footer = { ...targetedFeed.footer, comments: [newComment, ...comments] };\n      return targetedFeed;\n    };\n\n    feedDispatch({ type: 'EDIT', payload: newFeed(), id });\n    setComment('');\n  };\n\n  return (\n    <CardFooter className=\"bg-light pt-0\">\n      <LikeComentShareCount countLCS={countLCS} comments={comments} />\n      <IconStatus id={id} />\n      <Flex tag={Form} align=\"center\" className=\"border-top border-200 pt-3\" onSubmit={submitComment}>\n        <Avatar src={av3} size=\"xl\" />\n        <Input\n          className=\"rounded-capsule ml-2 fs--1\"\n          placeholder=\"Write a comment...\"\n          value={comment}\n          onChange={({ target }) => setComment(target.value)}\n        />\n      </Flex>\n      {isIterableArray(comments) && <Comments comments={comments} loadComment={otherComments} />}\n    </CardFooter>\n  );\n};\n\nFeedCardFooter.propTypes = {\n  id: PropTypes.string.isRequired,\n  countLCS: PropTypes.object.isRequired,\n  comments: PropTypes.array,\n  otherComments: PropTypes.string\n};\n\nFeedCardFooter.defaultProps = {\n  countLCS: { like: 0 },\n  comments: []\n};\n\nexport default FeedCardFooter;\n"]},"metadata":{},"sourceType":"module"}