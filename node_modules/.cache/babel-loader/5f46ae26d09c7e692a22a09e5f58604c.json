{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import classNames from'classnames';import React,{useEffect,useState}from'react';import{Link}from'react-router-dom';import{Collapse,Container,Nav,Navbar,NavbarBrand,NavbarToggler}from'reactstrap';import handleNavbarTransparency from'../../helpers/handleNavbarTransparency';import NavbarTopDropDownMenus from'./NavbarTopDropDownMenus';import LandingRightSideNavItem from'./LandingRightSideNavItem';import{topNavbarBreakpoint}from'../../config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NavbarStandard=function NavbarStandard(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),navbarCollapsed=_useState2[0],setNavbarCollapsed=_useState2[1];useEffect(function(){window.addEventListener('scroll',handleNavbarTransparency);return function(){return window.removeEventListener('scroll',handleNavbarTransparency);};},[]);return/*#__PURE__*/_jsx(Navbar,{dark:true,fixed:\"top\",expand:topNavbarBreakpoint,className:classNames('navbar-standard navbar-theme',{'bg-dark':!navbarCollapsed}),children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(NavbarBrand,{className:\"text-white\",tag:Link,to:\"/\",children:\"Falcon\"}),/*#__PURE__*/_jsx(NavbarToggler,{onClick:function onClick(){return setNavbarCollapsed(!navbarCollapsed);}}),/*#__PURE__*/_jsxs(Collapse,{isOpen:!navbarCollapsed,navbar:true,className:\"scrollbar\",children:[/*#__PURE__*/_jsx(Nav,{navbar:true,children:/*#__PURE__*/_jsx(NavbarTopDropDownMenus,{setNavbarCollapsed:setNavbarCollapsed})}),/*#__PURE__*/_jsx(LandingRightSideNavItem,{})]})]})});};export default NavbarStandard;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/navbar/NavbarStandard.js"],"names":["classNames","React","useEffect","useState","Link","Collapse","Container","Nav","Navbar","NavbarBrand","NavbarToggler","handleNavbarTransparency","NavbarTopDropDownMenus","LandingRightSideNavItem","topNavbarBreakpoint","NavbarStandard","navbarCollapsed","setNavbarCollapsed","window","addEventListener","removeEventListener"],"mappings":"sGAAA,MAAOA,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,GAA9B,CAAmCC,MAAnC,CAA2CC,WAA3C,CAAwDC,aAAxD,KAA6E,YAA7E,CACA,MAAOC,CAAAA,wBAAP,KAAqC,wCAArC,CACA,MAAOC,CAAAA,sBAAP,KAAmC,0BAAnC,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CACA,OAASC,mBAAT,KAAoC,cAApC,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACmBZ,QAAQ,CAAC,IAAD,CAD3B,wCACpBa,eADoB,eACHC,kBADG,eAG3Bf,SAAS,CAAC,UAAM,CACdgB,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkCR,wBAAlC,EACA,MAAO,kBAAMO,CAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,CAAqCT,wBAArC,CAAN,EAAP,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACE,KAAC,MAAD,EACE,IAAI,KADN,CAEE,KAAK,CAAC,KAFR,CAGE,MAAM,CAAEG,mBAHV,CAIE,SAAS,CAAEd,UAAU,CAAC,8BAAD,CAAiC,CACpD,UAAW,CAACgB,eADwC,CAAjC,CAJvB,uBAQE,MAAC,SAAD,yBACE,KAAC,WAAD,EAAa,SAAS,CAAC,YAAvB,CAAoC,GAAG,CAAEZ,IAAzC,CAA+C,EAAE,CAAC,GAAlD,oBADF,cAIE,KAAC,aAAD,EAAe,OAAO,CAAE,yBAAMa,CAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAxB,EAAxB,EAJF,cAKE,MAAC,QAAD,EAAU,MAAM,CAAE,CAACA,eAAnB,CAAoC,MAAM,KAA1C,CAA2C,SAAS,CAAC,WAArD,wBACE,KAAC,GAAD,EAAK,MAAM,KAAX,uBACE,KAAC,sBAAD,EAAwB,kBAAkB,CAAEC,kBAA5C,EADF,EADF,cAIE,KAAC,uBAAD,IAJF,GALF,GARF,EADF,CAuBD,CA/BD,CAiCA,cAAeF,CAAAA,cAAf","sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Container, Nav, Navbar, NavbarBrand, NavbarToggler } from 'reactstrap';\nimport handleNavbarTransparency from '../../helpers/handleNavbarTransparency';\nimport NavbarTopDropDownMenus from './NavbarTopDropDownMenus';\nimport LandingRightSideNavItem from './LandingRightSideNavItem';\nimport { topNavbarBreakpoint } from '../../config';\n\nconst NavbarStandard = () => {\n  const [navbarCollapsed, setNavbarCollapsed] = useState(true);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleNavbarTransparency);\n    return () => window.removeEventListener('scroll', handleNavbarTransparency);\n  }, []);\n\n  return (\n    <Navbar\n      dark\n      fixed=\"top\"\n      expand={topNavbarBreakpoint}\n      className={classNames('navbar-standard navbar-theme', {\n        'bg-dark': !navbarCollapsed\n      })}\n    >\n      <Container>\n        <NavbarBrand className=\"text-white\" tag={Link} to=\"/\">\n          Falcon\n        </NavbarBrand>\n        <NavbarToggler onClick={() => setNavbarCollapsed(!navbarCollapsed)} />\n        <Collapse isOpen={!navbarCollapsed} navbar className=\"scrollbar\">\n          <Nav navbar>\n            <NavbarTopDropDownMenus setNavbarCollapsed={setNavbarCollapsed} />\n          </Nav>\n          <LandingRightSideNavItem />\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavbarStandard;\n"]},"metadata":{},"sourceType":"module"}