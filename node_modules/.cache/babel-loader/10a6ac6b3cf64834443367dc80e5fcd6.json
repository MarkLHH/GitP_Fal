{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/education/EducationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDuration } from '../../helpers/utils';\nimport { Button, Col, CustomInput, Form, FormGroup, Row } from 'reactstrap';\nimport EducationInput from './EducationInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EducationForm = ({\n  educations,\n  setEducations\n}) => {\n  _s();\n\n  // State\n  const [school, setSchool] = useState('');\n  const [degree, setDegree] = useState('');\n  const [field, setField] = useState('');\n  const [location, setLocation] = useState(''); // const [description, setDescription] = useState('');\n\n  const [current, setCurrent] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [isButtonDisable, setIsButtonDisable] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newEducation = {\n      imgSrc: '',\n      institution: school,\n      degree,\n      duration: getDuration(startDate, endDate),\n      location,\n      to: '#!'\n    };\n    setEducations([newEducation, ...educations]);\n    setSchool('');\n    setDegree('');\n    setField('');\n    setLocation('');\n    setCurrent(false);\n    setStartDate('');\n    setEndDate('');\n  };\n\n  useEffect(() => {\n    setIsButtonDisable(!(school && degree && field && location && startDate && (current || endDate)));\n  }, [school, degree, field, location, current, startDate, endDate]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(EducationInput, {\n      id: \"school\",\n      label: \"School\",\n      value: school,\n      onChange: ({\n        target\n      }) => setSchool(target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EducationInput, {\n      id: \"degree\",\n      label: \"Degree\",\n      value: degree,\n      onChange: ({\n        target\n      }) => setDegree(target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EducationInput, {\n      id: \"field\",\n      label: \"Field\",\n      value: field,\n      onChange: ({\n        target\n      }) => setField(target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EducationInput, {\n      id: \"location\",\n      label: \"Location\",\n      value: location,\n      onChange: ({\n        target\n      }) => setLocation(target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: {\n            size: 7,\n            offset: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CustomInput, {\n            type: \"checkbox\",\n            id: \"education-current\",\n            label: \"I currently work here\",\n            checked: current,\n            onChange: ({\n              target\n            }) => setCurrent(target.checked),\n            inline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EducationInput, {\n      id: \"educationFrom\",\n      label: \"From\",\n      value: startDate,\n      onChange: setStartDate,\n      type: \"datetime\",\n      timeFormat: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !current && /*#__PURE__*/_jsxDEV(EducationInput, {\n      id: \"educationTo\",\n      label: \"To\",\n      value: endDate,\n      onChange: setEndDate,\n      type: \"datetime\",\n      timeFormat: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: {\n            size: 7,\n            offset: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disabled: isButtonDisable,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EducationForm, \"TYo9TF9jmNwS9nsjYnFdGiurWoU=\");\n\n_c = EducationForm;\nEducationForm.propTypes = {\n  educations: PropTypes.array.isRequired,\n  setEducations: PropTypes.func.isRequired\n};\nexport default EducationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EducationForm\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/education/EducationForm.js"],"names":["React","useState","useEffect","PropTypes","getDuration","Button","Col","CustomInput","Form","FormGroup","Row","EducationInput","EducationForm","educations","setEducations","school","setSchool","degree","setDegree","field","setField","location","setLocation","current","setCurrent","startDate","setStartDate","endDate","setEndDate","isButtonDisable","setIsButtonDisable","handleSubmit","e","preventDefault","newEducation","imgSrc","institution","duration","to","target","value","size","offset","checked","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDuration } from '../../helpers/utils';\nimport { Button, Col, CustomInput, Form, FormGroup, Row } from 'reactstrap';\nimport EducationInput from './EducationInput';\n\nconst EducationForm = ({ educations, setEducations }) => {\n  // State\n  const [school, setSchool] = useState('');\n  const [degree, setDegree] = useState('');\n  const [field, setField] = useState('');\n  const [location, setLocation] = useState('');\n  // const [description, setDescription] = useState('');\n  const [current, setCurrent] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [isButtonDisable, setIsButtonDisable] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newEducation = {\n      imgSrc: '',\n      institution: school,\n      degree,\n      duration: getDuration(startDate, endDate),\n      location,\n      to: '#!'\n    };\n\n    setEducations([newEducation, ...educations]);\n    setSchool('');\n    setDegree('');\n    setField('');\n    setLocation('');\n    setCurrent(false);\n    setStartDate('');\n    setEndDate('');\n  };\n\n  useEffect(() => {\n    setIsButtonDisable(!(school && degree && field && location && startDate && (current || endDate)));\n  }, [school, degree, field, location, current, startDate, endDate]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <EducationInput id=\"school\" label=\"School\" value={school} onChange={({ target }) => setSchool(target.value)} />\n\n      <EducationInput id=\"degree\" label=\"Degree\" value={degree} onChange={({ target }) => setDegree(target.value)} />\n\n      <EducationInput id=\"field\" label=\"Field\" value={field} onChange={({ target }) => setField(target.value)} />\n\n      <EducationInput\n        id=\"location\"\n        label=\"Location\"\n        value={location}\n        onChange={({ target }) => setLocation(target.value)}\n      />\n\n      <FormGroup>\n        <Row className=\"row\">\n          <Col lg={{ size: 7, offset: 3 }}>\n            <CustomInput\n              type=\"checkbox\"\n              id=\"education-current\"\n              label=\"I currently work here\"\n              checked={current}\n              onChange={({ target }) => setCurrent(target.checked)}\n              inline\n            />\n          </Col>\n        </Row>\n      </FormGroup>\n\n      <EducationInput\n        id=\"educationFrom\"\n        label=\"From\"\n        value={startDate}\n        onChange={setStartDate}\n        type=\"datetime\"\n        timeFormat={false}\n      />\n\n      {!current && (\n        <EducationInput\n          id=\"educationTo\"\n          label=\"To\"\n          value={endDate}\n          onChange={setEndDate}\n          type=\"datetime\"\n          timeFormat={false}\n        />\n      )}\n\n      <FormGroup className=\"form-group\">\n        <Row className=\"row\">\n          <Col lg={{ size: 7, offset: 3 }}>\n            <Button color=\"primary\" disabled={isButtonDisable}>\n              Save\n            </Button>\n          </Col>\n        </Row>\n      </FormGroup>\n    </Form>\n  );\n};\n\nEducationForm.propTypes = {\n  educations: PropTypes.array.isRequired,\n  setEducations: PropTypes.func.isRequired\n};\n\nexport default EducationForm;\n"]},"metadata":{},"sourceType":"module"}