{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer,useState}from'react';import{KanbanContext}from'../../context/Context';import{arrayReducer}from'../../reducers/arrayReducer';import rawKanbanItems,{rawItems}from'../../data/kanban/kanbanItems';import{jsx as _jsx}from\"react/jsx-runtime\";var KanbanProvider=function KanbanProvider(_ref){var children=_ref.children;var _useReducer=useReducer(arrayReducer,rawKanbanItems),_useReducer2=_slicedToArray(_useReducer,2),kanbanColumns=_useReducer2[0],kanbanColumnsDispatch=_useReducer2[1];var _useReducer3=useReducer(arrayReducer,rawItems),_useReducer4=_slicedToArray(_useReducer3,2),kanbanTaskCards=_useReducer4[0],kanbanTaskCardsDispatch=_useReducer4[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],setModal=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),modalContent=_useState4[0],setModalContent=_useState4[1];var getItemStyle=function getItemStyle(isDragging){return{// change background colour if dragging\ncursor:isDragging?'grabbing':'pointer',transform:isDragging?'rotate(-3deg)':'',transition:'all 0.3s ease-out'// styles we need to apply on draggables\n};};var UpdateColumnData=function UpdateColumnData(column,items){kanbanColumnsDispatch({type:'EDIT',payload:_objectSpread(_objectSpread({},column),{},{items:items}),id:column.id});};var value={kanbanTaskCards:kanbanTaskCards,kanbanTaskCardsDispatch:kanbanTaskCardsDispatch,kanbanColumns:kanbanColumns,kanbanColumnsDispatch:kanbanColumnsDispatch,getItemStyle:getItemStyle,UpdateColumnData:UpdateColumnData,modalContent:modalContent,setModalContent:setModalContent,modal:modal,setModal:setModal};return/*#__PURE__*/_jsx(KanbanContext.Provider,{value:value,children:children});};export default KanbanProvider;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/kanban/KanbanProvider.js"],"names":["React","useReducer","useState","KanbanContext","arrayReducer","rawKanbanItems","rawItems","KanbanProvider","children","kanbanColumns","kanbanColumnsDispatch","kanbanTaskCards","kanbanTaskCardsDispatch","modal","setModal","modalContent","setModalContent","getItemStyle","isDragging","cursor","transform","transition","UpdateColumnData","column","items","type","payload","id","value"],"mappings":"2MAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,OAASC,YAAT,KAA6B,6BAA7B,CAEA,MAAOC,CAAAA,cAAP,EAAyBC,QAAzB,KAAyC,+BAAzC,C,2CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,iBACQP,UAAU,CAACG,YAAD,CAAeC,cAAf,CADlB,4CAChCI,aADgC,iBACjBC,qBADiB,kCAEYT,UAAU,CAACG,YAAD,CAAeE,QAAf,CAFtB,6CAEhCK,eAFgC,iBAEfC,uBAFe,+BAIbV,QAAQ,CAAC,KAAD,CAJK,wCAIhCW,KAJgC,eAIzBC,QAJyB,8BAMCZ,QAAQ,CAAC,EAAD,CANT,yCAMhCa,YANgC,eAMlBC,eANkB,eAQvC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,UAAU,QAAK,CAClC;AACAC,MAAM,CAAED,UAAU,CAAG,UAAH,CAAgB,SAFA,CAGlCE,SAAS,CAAEF,UAAU,CAAG,eAAH,CAAqB,EAHR,CAIlCG,UAAU,CAAE,mBAEZ;AANkC,CAAL,EAA/B,CASA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,MAAD,CAASC,KAAT,CAAmB,CAC1Cd,qBAAqB,CAAC,CACpBe,IAAI,CAAE,MADc,CAEpBC,OAAO,gCACFH,MADE,MAELC,KAAK,CAALA,KAFK,EAFa,CAMpBG,EAAE,CAAEJ,MAAM,CAACI,EANS,CAAD,CAArB,CAQD,CATD,CAWA,GAAMC,CAAAA,KAAK,CAAG,CACZjB,eAAe,CAAfA,eADY,CAEZC,uBAAuB,CAAvBA,uBAFY,CAGZH,aAAa,CAAbA,aAHY,CAIZC,qBAAqB,CAArBA,qBAJY,CAKZO,YAAY,CAAZA,YALY,CAMZK,gBAAgB,CAAhBA,gBANY,CAOZP,YAAY,CAAZA,YAPY,CAQZC,eAAe,CAAfA,eARY,CASZH,KAAK,CAALA,KATY,CAUZC,QAAQ,CAARA,QAVY,CAAd,CAYA,mBAAO,KAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAEc,KAA/B,UAAuCpB,QAAvC,EAAP,CACD,CAzCD,CA2CA,cAAeD,CAAAA,cAAf","sourcesContent":["import React, { useReducer, useState } from 'react';\r\nimport { KanbanContext } from '../../context/Context';\r\nimport { arrayReducer } from '../../reducers/arrayReducer';\r\n\r\nimport rawKanbanItems, { rawItems } from '../../data/kanban/kanbanItems';\r\n\r\nconst KanbanProvider = ({ children }) => {\r\n  const [kanbanColumns, kanbanColumnsDispatch] = useReducer(arrayReducer, rawKanbanItems);\r\n  const [kanbanTaskCards, kanbanTaskCardsDispatch] = useReducer(arrayReducer, rawItems);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [modalContent, setModalContent] = useState({});\r\n\r\n  const getItemStyle = isDragging => ({\r\n    // change background colour if dragging\r\n    cursor: isDragging ? 'grabbing' : 'pointer',\r\n    transform: isDragging ? 'rotate(-3deg)' : '',\r\n    transition: 'all 0.3s ease-out'\r\n\r\n    // styles we need to apply on draggables\r\n  });\r\n\r\n  const UpdateColumnData = (column, items) => {\r\n    kanbanColumnsDispatch({\r\n      type: 'EDIT',\r\n      payload: {\r\n        ...column,\r\n        items\r\n      },\r\n      id: column.id\r\n    });\r\n  };\r\n\r\n  const value = {\r\n    kanbanTaskCards,\r\n    kanbanTaskCardsDispatch,\r\n    kanbanColumns,\r\n    kanbanColumnsDispatch,\r\n    getItemStyle,\r\n    UpdateColumnData,\r\n    modalContent,\r\n    setModalContent,\r\n    modal,\r\n    setModal\r\n  };\r\n  return <KanbanContext.Provider value={value}>{children}</KanbanContext.Provider>;\r\n};\r\n\r\nexport default KanbanProvider;\r\n"]},"metadata":{},"sourceType":"module"}