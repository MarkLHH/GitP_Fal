{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/page/Notifications.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Alert, Button, Card, CardBody, Col, CustomInput, Form, Input, Label, ListGroup, ListGroupItem, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\nimport Notification from '../notification/Notification';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Loader from '../common/Loader';\nimport { isIterableArray } from '../../helpers/utils';\nimport { notifications as rawNotifications } from '../../data/notification/notification';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst NotificationSettings = () => {\n  _s();\n\n  const [check1, setCheck1] = useState(true);\n  const [check2, setCheck2] = useState(true);\n  const [check3, setCheck3] = useState(true);\n  const listGroupItemClasses = 'd-flex justify-content-between align-items-center py-2 px-0 border-200';\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n      type: \"radio\",\n      id: \"exampleCustomRadio\",\n      name: \"customRadio\",\n      label: \"Get a notification each time there is activity on your page or an important update.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      type: \"radio\",\n      id: \"exampleCustomRadio2\",\n      name: \"customRadio\",\n      label: \"Get one notification every 12-24 hours on all activity and updates.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      type: \"radio\",\n      id: \"exampleCustomRadio3\",\n      name: \"customRadio\",\n      label: \"Off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"fs-0 mb-3 mt-4\",\n      children: \"Edit your notification settings for: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      flush: true,\n      className: \"mb-4 fs--1\",\n      children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n        className: listGroupItemClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"New Mention of Page \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            check: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"checkbox\",\n            checked: check1,\n            onChange: () => setCheck1(!check1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        className: listGroupItemClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"New Comments on page post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            check: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"checkbox\",\n            checked: check2,\n            onChange: () => setCheck2(!check2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        className: listGroupItemClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Edits to Comments you have written\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            check: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"checkbox\",\n            checked: check3,\n            onChange: () => setCheck3(!check3)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      type: \"checkbox\",\n      id: \"customCheckboxActivity\",\n      label: \"Allow notifications from your followers activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      type: \"checkbox\",\n      id: \"customCheckboxAssociationsGroups\",\n      label: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      type: \"checkbox\",\n      id: \"customCheckboxAssociations\",\n      label: \"Associations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotificationSettings, \"AigiY0Lv2kpIWe9A638yCCWjDFM=\");\n\n_c = NotificationSettings;\n\nconst Notifications = ({\n  items = rawNotifications.length,\n  children\n}) => {\n  _s2();\n\n  const {\n    loading,\n    data: notifications,\n    setData: setNotifications\n  } = useFakeFetch(rawNotifications);\n  const [settingsIsOpen, setSettingsIsOpen] = useState(false);\n\n  const toggleSettingsModal = () => setSettingsIsOpen(!settingsIsOpen);\n\n  const markAsRead = e => {\n    e.preventDefault();\n    const updatedNotifications = notifications.map(notification => {\n      if (!notification.hasOwnProperty('unread')) return notification;\n      return { ...notification,\n        unread: false\n      };\n    });\n    setNotifications(updatedNotifications);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"h-100\",\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"Your Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fs--1\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-sans-serif\",\n          to: \"#!\",\n          onClick: markAsRead,\n          children: \"Mark all as read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-sans-serif ml-2 ml-sm-3\",\n          to: \"#!\",\n          onClick: toggleSettingsModal,\n          children: \"Notification settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: settingsIsOpen,\n        toggle: toggleSettingsModal,\n        centered: true,\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Notification Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(NotificationSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            size: \"sm\",\n            onClick: toggleSettingsModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"sm\",\n            onClick: toggleSettingsModal,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"p-0\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : isIterableArray(notifications) ? notifications.slice(0, items).map((notification, index) => /*#__PURE__*/_createElement(Notification, { ...notification,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 70\n        }\n      })) : /*#__PURE__*/_jsxDEV(Row, {\n        className: \"p-card\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            color: \"info\",\n            className: \"mb-0\",\n            children: \"No notifications found!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Notifications, \"j/1pueXmzMOUZzbuHA0Fn6feNZs=\", false, function () {\n  return [useFakeFetch];\n});\n\n_c2 = Notifications;\nNotifications.propTypes = {\n  items: PropTypes.number,\n  children: PropTypes.node\n};\nexport default Notifications;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationSettings\");\n$RefreshReg$(_c2, \"Notifications\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/page/Notifications.js"],"names":["React","useState","Link","PropTypes","Alert","Button","Card","CardBody","Col","CustomInput","Form","Input","Label","ListGroup","ListGroupItem","Modal","ModalBody","ModalFooter","ModalHeader","Row","Notification","FalconCardHeader","Loader","isIterableArray","notifications","rawNotifications","useFakeFetch","NotificationSettings","check1","setCheck1","check2","setCheck2","check3","setCheck3","listGroupItemClasses","Notifications","items","length","children","loading","data","setData","setNotifications","settingsIsOpen","setSettingsIsOpen","toggleSettingsModal","markAsRead","e","preventDefault","updatedNotifications","map","notification","hasOwnProperty","unread","slice","index","propTypes","number","node"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,GALF,EAMEC,WANF,EAOEC,IAPF,EAQEC,KARF,EASEC,KATF,EAUEC,SAVF,EAWEC,aAXF,EAYEC,KAZF,EAaEC,SAbF,EAcEC,WAdF,EAeEC,WAfF,EAgBEC,GAhBF,QAiBO,YAjBP;AAkBA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,aAAa,IAAIC,gBAA1B,QAAkD,sCAAlD;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAC+B,MAAD,EAASC,SAAT,IAAsBhC,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMiC,oBAAoB,GAAG,wEAA7B;AAEA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,oBAFL;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,WAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,qBAFL;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,EAAE,EAAC,qBAA7B;AAAmD,MAAA,IAAI,EAAC,aAAxD;AAAsE,MAAA,KAAK,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,YAbF,eAeE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAiBE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,YAA3B;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEA,oBAA1B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAEN,MAAhC;AAAwC,YAAA,QAAQ,EAAE,MAAMC,SAAS,CAAC,CAACD,MAAF;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEM,oBAA1B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAEJ,MAAhC;AAAwC,YAAA,QAAQ,EAAE,MAAMC,SAAS,CAAC,CAACD,MAAF;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAeE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEI,oBAA1B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAEF,MAAhC;AAAwC,YAAA,QAAQ,EAAE,MAAMC,SAAS,CAAC,CAACD,MAAF;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eAyCE,QAAC,WAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,wBAFL;AAGE,MAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAzCF,eA8CE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,EAAE,EAAC,kCAAhC;AAAmE,MAAA,KAAK,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,YA9CF,eA+CE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,EAAE,EAAC,4BAAhC;AAA6D,MAAA,KAAK,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,YA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CA1DD;;GAAML,oB;;KAAAA,oB;;AA4DN,MAAMQ,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAGX,gBAAgB,CAACY,MAA3B;AAAmCC,EAAAA;AAAnC,CAAD,KAAmD;AAAA;;AACvE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEhB,aAAjB;AAAgCiB,IAAAA,OAAO,EAAEC;AAAzC,MAA8DhB,YAAY,CAACD,gBAAD,CAAhF;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsC3C,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAM4C,mBAAmB,GAAG,MAAMD,iBAAiB,CAAC,CAACD,cAAF,CAAnD;;AAEA,QAAMG,UAAU,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,oBAAoB,GAAGzB,aAAa,CAAC0B,GAAd,CAAkBC,YAAY,IAAI;AAC7D,UAAI,CAACA,YAAY,CAACC,cAAb,CAA4B,QAA5B,CAAL,EAA4C,OAAOD,YAAP;AAE5C,aAAO,EACL,GAAGA,YADE;AAELE,QAAAA,MAAM,EAAE;AAFH,OAAP;AAID,KAP4B,CAA7B;AASAX,IAAAA,gBAAgB,CAACO,oBAAD,CAAhB;AACD,GAZD;;AAcA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC,oBAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAkC,UAAA,EAAE,EAAC,IAArC;AAA0C,UAAA,OAAO,EAAEH,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,8BAAhB;AAA+C,UAAA,EAAE,EAAC,IAAlD;AAAuD,UAAA,OAAO,EAAED,mBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEF,cAAf;AAA+B,QAAA,MAAM,EAAEE,mBAAvC;AAA4D,QAAA,QAAQ,MAApE;AAAqE,QAAA,IAAI,EAAC,IAA1E;AAAA,gCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA,iCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,WAAD;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,WAAd;AAA0B,YAAA,IAAI,EAAC,IAA/B;AAAoC,YAAA,OAAO,EAAEA,mBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,IAAI,EAAC,IAA7B;AAAkC,YAAA,OAAO,EAAEA,mBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,KAApB;AAAA,gBACGN,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADM,GAEJhB,eAAe,CAACC,aAAD,CAAf,GACFA,aAAa,CAAC8B,KAAd,CAAoB,CAApB,EAAuBlB,KAAvB,EAA8Bc,GAA9B,CAAkC,CAACC,YAAD,EAAeI,KAAf,kBAAyB,eAAC,YAAD,OAAkBJ,YAAlB;AAAgC,QAAA,GAAG,EAAEI,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3D,CADE,gBAGF,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAC,MAAb;AAAoB,YAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YA1BF,EAyCGjB,QAzCH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAjED;;IAAMH,a;UACgET,Y;;;MADhES,a;AAmENA,aAAa,CAACqB,SAAd,GAA0B;AACxBpB,EAAAA,KAAK,EAAEjC,SAAS,CAACsD,MADO;AAExBnB,EAAAA,QAAQ,EAAEnC,SAAS,CAACuD;AAFI,CAA1B;AAKA,eAAevB,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  Col,\n  CustomInput,\n  Form,\n  Input,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row\n} from 'reactstrap';\nimport Notification from '../notification/Notification';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Loader from '../common/Loader';\nimport { isIterableArray } from '../../helpers/utils';\nimport { notifications as rawNotifications } from '../../data/notification/notification';\nimport useFakeFetch from '../../hooks/useFakeFetch';\n\nconst NotificationSettings = () => {\n  const [check1, setCheck1] = useState(true);\n  const [check2, setCheck2] = useState(true);\n  const [check3, setCheck3] = useState(true);\n\n  const listGroupItemClasses = 'd-flex justify-content-between align-items-center py-2 px-0 border-200';\n\n  return (\n    <Form>\n      <CustomInput\n        type=\"radio\"\n        id=\"exampleCustomRadio\"\n        name=\"customRadio\"\n        label=\"Get a notification each time there is activity on your page or an important update.\"\n      />\n      <CustomInput\n        type=\"radio\"\n        id=\"exampleCustomRadio2\"\n        name=\"customRadio\"\n        label=\"Get one notification every 12-24 hours on all activity and updates.\"\n      />\n      <CustomInput type=\"radio\" id=\"exampleCustomRadio3\" name=\"customRadio\" label=\"Off\" />\n\n      <h5 className=\"fs-0 mb-3 mt-4\">Edit your notification settings for: </h5>\n\n      <ListGroup flush className=\"mb-4 fs--1\">\n        <ListGroupItem className={listGroupItemClasses}>\n          <span>New Mention of Page </span>\n          <span>\n            <Label check />\n            <Input type=\"checkbox\" checked={check1} onChange={() => setCheck1(!check1)} />\n          </span>\n        </ListGroupItem>\n        <ListGroupItem className={listGroupItemClasses}>\n          <span>New Comments on page post</span>\n          <span>\n            <Label check />\n            <Input type=\"checkbox\" checked={check2} onChange={() => setCheck2(!check2)} />\n          </span>\n        </ListGroupItem>\n        <ListGroupItem className={listGroupItemClasses}>\n          <span>Edits to Comments you have written</span>\n          <span>\n            <Label check />\n            <Input type=\"checkbox\" checked={check3} onChange={() => setCheck3(!check3)} />\n          </span>\n        </ListGroupItem>\n      </ListGroup>\n\n      <CustomInput\n        type=\"checkbox\"\n        id=\"customCheckboxActivity\"\n        label=\"Allow notifications from your followers activity\"\n      />\n      <CustomInput type=\"checkbox\" id=\"customCheckboxAssociationsGroups\" label=\"Groups\" />\n      <CustomInput type=\"checkbox\" id=\"customCheckboxAssociations\" label=\"Associations\" />\n    </Form>\n  );\n};\n\nconst Notifications = ({ items = rawNotifications.length, children }) => {\n  const { loading, data: notifications, setData: setNotifications } = useFakeFetch(rawNotifications);\n  const [settingsIsOpen, setSettingsIsOpen] = useState(false);\n\n  const toggleSettingsModal = () => setSettingsIsOpen(!settingsIsOpen);\n\n  const markAsRead = e => {\n    e.preventDefault();\n    const updatedNotifications = notifications.map(notification => {\n      if (!notification.hasOwnProperty('unread')) return notification;\n\n      return {\n        ...notification,\n        unread: false\n      };\n    });\n\n    setNotifications(updatedNotifications);\n  };\n\n  return (\n    <Card className=\"h-100\">\n      <FalconCardHeader title=\"Your Notifications\">\n        <div className=\"fs--1\">\n          <Link className=\"text-sans-serif\" to=\"#!\" onClick={markAsRead}>\n            Mark all as read\n          </Link>\n          <Link className=\"text-sans-serif ml-2 ml-sm-3\" to=\"#!\" onClick={toggleSettingsModal}>\n            Notification settings\n          </Link>\n        </div>\n\n        <Modal isOpen={settingsIsOpen} toggle={toggleSettingsModal} centered size=\"lg\">\n          <ModalHeader>Notification Settings</ModalHeader>\n          <ModalBody>\n            <NotificationSettings />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" size=\"sm\" onClick={toggleSettingsModal}>\n              Cancel\n            </Button>\n            <Button color=\"primary\" size=\"sm\" onClick={toggleSettingsModal}>\n              Update\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </FalconCardHeader>\n      <CardBody className=\"p-0\">\n        {loading ? (\n          <Loader />\n        ) : isIterableArray(notifications) ? (\n          notifications.slice(0, items).map((notification, index) => <Notification {...notification} key={index} />)\n        ) : (\n          <Row className=\"p-card\">\n            <Col>\n              <Alert color=\"info\" className=\"mb-0\">\n                No notifications found!\n              </Alert>\n            </Col>\n          </Row>\n        )}\n      </CardBody>\n      {children}\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  items: PropTypes.number,\n  children: PropTypes.node\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}