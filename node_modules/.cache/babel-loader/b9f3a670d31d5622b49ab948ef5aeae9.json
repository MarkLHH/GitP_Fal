{"ast":null,"code":"import{useEffect}from'react';import PropTypes from'prop-types';import L from'leaflet';import'leaflet.markercluster/dist/leaflet.markercluster';import'leaflet.markercluster/dist/MarkerCluster.css';import'leaflet.markercluster/dist/MarkerCluster.Default.css';import{useLeaflet}from'react-leaflet';import{customMarker}from'./constants';var mcg=L.markerClusterGroup({chunkedLoading:false,spiderfyOnMaxZoom:false});var MarkerCluster=function MarkerCluster(_ref){var markers=_ref.markers;var _useLeaflet=useLeaflet(),map=_useLeaflet.map;useEffect(function(){mcg.clearLayers();markers.map(function(_ref2){var lat=_ref2.lat,long=_ref2.long,name=_ref2.name,street=_ref2.street,location=_ref2.location;var popupContent=\"\\n        <h6 class=\\\"mb-1\\\">\".concat(name,\"</h6>\\n        <p class=\\\"m-0 text-500\\\">\").concat(street,\", \").concat(location,\"</p>\\n      \");return L.marker(new L.LatLng(lat,long),{icon:customMarker}).addTo(mcg).bindPopup(popupContent);});// optionally center the map around the markers\n// map.fitBounds(mcg.getBounds());\n// // add the marker cluster group to the map\nmap.addLayer(mcg);},[markers,map]);return null;};MarkerCluster.propTypes={markers:PropTypes.arrayOf(PropTypes.shape({lat:PropTypes.number.isRequired,long:PropTypes.number.isRequired,name:PropTypes.string.isRequired,street:PropTypes.string,location:PropTypes.string}).isRequired).isRequired};export default MarkerCluster;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/dashboard/MarkerCluster.js"],"names":["useEffect","PropTypes","L","useLeaflet","customMarker","mcg","markerClusterGroup","chunkedLoading","spiderfyOnMaxZoom","MarkerCluster","markers","map","clearLayers","lat","long","name","street","location","popupContent","marker","LatLng","icon","addTo","bindPopup","addLayer","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,CAAP,KAAc,SAAd,CACA,MAAO,kDAAP,CACA,MAAO,8CAAP,CACA,MAAO,sDAAP,CACA,OAASC,UAAT,KAA2B,eAA3B,CACA,OAASC,YAAT,KAA6B,aAA7B,CAEA,GAAMC,CAAAA,GAAG,CAAGH,CAAC,CAACI,kBAAF,CAAqB,CAC/BC,cAAc,CAAE,KADe,CAE/BC,iBAAiB,CAAE,KAFY,CAArB,CAAZ,CAKA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,iBACrBP,UAAU,EADW,CAC7BQ,GAD6B,aAC7BA,GAD6B,CAGrCX,SAAS,CAAC,UAAM,CACdK,GAAG,CAACO,WAAJ,GACAF,OAAO,CAACC,GAAR,CAAY,eAA2C,IAAxCE,CAAAA,GAAwC,OAAxCA,GAAwC,CAAnCC,IAAmC,OAAnCA,IAAmC,CAA7BC,IAA6B,OAA7BA,IAA6B,CAAvBC,MAAuB,OAAvBA,MAAuB,CAAfC,QAAe,OAAfA,QAAe,CACrD,GAAMC,CAAAA,YAAY,wCACGH,IADH,qDAEUC,MAFV,cAEqBC,QAFrB,gBAAlB,CAIA,MAAOf,CAAAA,CAAC,CAACiB,MAAF,CAAS,GAAIjB,CAAAA,CAAC,CAACkB,MAAN,CAAaP,GAAb,CAAkBC,IAAlB,CAAT,CAAkC,CACvCO,IAAI,CAAEjB,YADiC,CAAlC,EAGJkB,KAHI,CAGEjB,GAHF,EAIJkB,SAJI,CAIML,YAJN,CAAP,CAKD,CAVD,EAYA;AACA;AACA;AACAP,GAAG,CAACa,QAAJ,CAAanB,GAAb,EACD,CAlBQ,CAkBN,CAACK,OAAD,CAAUC,GAAV,CAlBM,CAAT,CAoBA,MAAO,KAAP,CACD,CAxBD,CA0BAF,aAAa,CAACgB,SAAd,CAA0B,CACxBf,OAAO,CAAET,SAAS,CAACyB,OAAV,CACPzB,SAAS,CAAC0B,KAAV,CAAgB,CACdd,GAAG,CAAEZ,SAAS,CAAC2B,MAAV,CAAiBC,UADR,CAEdf,IAAI,CAAEb,SAAS,CAAC2B,MAAV,CAAiBC,UAFT,CAGdd,IAAI,CAAEd,SAAS,CAAC6B,MAAV,CAAiBD,UAHT,CAIdb,MAAM,CAAEf,SAAS,CAAC6B,MAJJ,CAKdb,QAAQ,CAAEhB,SAAS,CAAC6B,MALN,CAAhB,EAMGD,UAPI,EAQPA,UATsB,CAA1B,CAYA,cAAepB,CAAAA,aAAf","sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport L from 'leaflet';\nimport 'leaflet.markercluster/dist/leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { useLeaflet } from 'react-leaflet';\nimport { customMarker } from './constants';\n\nconst mcg = L.markerClusterGroup({\n  chunkedLoading: false,\n  spiderfyOnMaxZoom: false\n});\n\nconst MarkerCluster = ({ markers }) => {\n  const { map } = useLeaflet();\n\n  useEffect(() => {\n    mcg.clearLayers();\n    markers.map(({ lat, long, name, street, location }) => {\n      const popupContent = `\n        <h6 class=\"mb-1\">${name}</h6>\n        <p class=\"m-0 text-500\">${street}, ${location}</p>\n      `;\n      return L.marker(new L.LatLng(lat, long), {\n        icon: customMarker\n      })\n        .addTo(mcg)\n        .bindPopup(popupContent);\n    });\n\n    // optionally center the map around the markers\n    // map.fitBounds(mcg.getBounds());\n    // // add the marker cluster group to the map\n    map.addLayer(mcg);\n  }, [markers, map]);\n\n  return null;\n};\n\nMarkerCluster.propTypes = {\n  markers: PropTypes.arrayOf(\n    PropTypes.shape({\n      lat: PropTypes.number.isRequired,\n      long: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      street: PropTypes.string,\n      location: PropTypes.string\n    }).isRequired\n  ).isRequired\n};\n\nexport default MarkerCluster;\n"]},"metadata":{},"sourceType":"module"}