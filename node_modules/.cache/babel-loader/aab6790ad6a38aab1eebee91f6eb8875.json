{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{Button,Card,CardBody,CardFooter,Col,Form,FormGroup,Input,Label,Modal,ModalBody,ModalFooter,ModalHeader,Row}from'reactstrap';import Loader from'../common/Loader';import rawFaqs from'../../data/faq/faqs';import FalconCardHeader from'../common/FalconCardHeader';import{isIterableArray}from'../../helpers/utils';import useFakeFetch from'../../hooks/useFakeFetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";var AskQuestionForm=function AskQuestionForm(){return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(Input,{id:\"name\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"emailModal\",children:\"Email Address\"}),/*#__PURE__*/_jsx(Input,{id:\"emailModal\",type:\"email\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"question\",children:\"Question\"}),/*#__PURE__*/_jsx(Input,{type:\"textarea\",id:\"question\",rows:\"4\"})]})]});};var Faq=function Faq(_ref){var question=_ref.question,answer=_ref.answer;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"fs-0\",children:question}),/*#__PURE__*/_jsx(\"p\",{className:\"fs--1\",children:answer})]});};var FaqCol=function FaqCol(){var _useFakeFetch=useFakeFetch(rawFaqs),loading=_useFakeFetch.loading,faqs=_useFakeFetch.data;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var toggleModal=function toggleModal(){return setIsOpen(!isOpen);};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Frequently asked questions\",light:false}),/*#__PURE__*/_jsx(CardBody,{className:\"bg-light\",children:loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{lg:6,children:isIterableArray(faqs)&&faqs.slice(0,4).map(function(faq,index){return/*#__PURE__*/_createElement(Faq,_objectSpread(_objectSpread({},faq),{},{key:index}));})}),/*#__PURE__*/_jsx(Col,{lg:6,children:isIterableArray(faqs)&&faqs.slice(4).map(function(faq,index){return/*#__PURE__*/_createElement(Faq,_objectSpread(_objectSpread({},faq),{},{key:index}));})})]})}),/*#__PURE__*/_jsxs(CardFooter,{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"fs-0 font-weight-normal\",children:\"Have more questions?\"}),/*#__PURE__*/_jsx(Button,{color:\"falcon-primary\",size:\"sm\",onClick:toggleModal,children:\"Ask us anything\"}),/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,toggle:toggleModal,centered:true,children:[/*#__PURE__*/_jsx(ModalHeader,{children:\"Ask your question\"}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsx(AskQuestionForm,{})}),/*#__PURE__*/_jsxs(ModalFooter,{children:[/*#__PURE__*/_jsx(Button,{color:\"secondary\",size:\"sm\",onClick:toggleModal,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",size:\"sm\",onClick:toggleModal,children:\"Send Question\"})]})]})]})]});};export default FaqCol;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/faq/FaqCol.js"],"names":["React","Fragment","useState","Button","Card","CardBody","CardFooter","Col","Form","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","Row","Loader","rawFaqs","FalconCardHeader","isIterableArray","useFakeFetch","AskQuestionForm","Faq","question","answer","FaqCol","loading","faqs","data","isOpen","setIsOpen","toggleModal","slice","map","faq","index"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row\n} from 'reactstrap';\nimport Loader from '../common/Loader';\nimport rawFaqs from '../../data/faq/faqs';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport useFakeFetch from '../../hooks/useFakeFetch';\n\nconst AskQuestionForm = () => (\n  <Form>\n    <FormGroup>\n      <Label for=\"name\">Name</Label>\n      <Input id=\"name\" />\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"emailModal\">Email Address</Label>\n      <Input id=\"emailModal\" type=\"email\" />\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"question\">Question</Label>\n      <Input type=\"textarea\" id=\"question\" rows=\"4\" />\n    </FormGroup>\n  </Form>\n);\n\nconst Faq = ({ question, answer }) => (\n  <Fragment>\n    <h5 className=\"fs-0\">{question}</h5>\n    <p className=\"fs--1\">{answer}</p>\n  </Fragment>\n);\n\nFaq.propTypes = {\n  question: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired\n};\n\nconst FaqCol = () => {\n  const { loading, data: faqs } = useFakeFetch(rawFaqs);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => setIsOpen(!isOpen);\n\n  return (\n    <Card>\n      <FalconCardHeader title=\"Frequently asked questions\" light={false} />\n      <CardBody className=\"bg-light\">\n        {loading ? (\n          <Loader />\n        ) : (\n          <Row>\n            <Col lg={6}>\n              {isIterableArray(faqs) && faqs.slice(0, 4).map((faq, index) => <Faq {...faq} key={index} />)}\n            </Col>\n            <Col lg={6}>{isIterableArray(faqs) && faqs.slice(4).map((faq, index) => <Faq {...faq} key={index} />)}</Col>\n          </Row>\n        )}\n      </CardBody>\n      <CardFooter className=\"text-center py-4\">\n        <h6 className=\"fs-0 font-weight-normal\">Have more questions?</h6>\n        <Button color=\"falcon-primary\" size=\"sm\" onClick={toggleModal}>\n          Ask us anything\n        </Button>\n        <Modal isOpen={isOpen} toggle={toggleModal} centered>\n          <ModalHeader>Ask your question</ModalHeader>\n          <ModalBody>\n            <AskQuestionForm />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" size=\"sm\" onClick={toggleModal}>\n              Close\n            </Button>\n            <Button color=\"primary\" size=\"sm\" onClick={toggleModal}>\n              Send Question\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default FaqCol;\n"]},"metadata":{},"sourceType":"module"}