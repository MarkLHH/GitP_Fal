{"ast":null,"code":"import _slicedToArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{toast}from'react-toastify';import{Button,Form,FormGroup,Input}from'reactstrap';import withRedirect from'../../hoc/withRedirect';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ForgetPasswordForm=function ForgetPasswordForm(_ref){var setRedirect=_ref.setRedirect,setRedirectUrl=_ref.setRedirectUrl,layout=_ref.layout;// State\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];// Handler\nvar handleSubmit=function handleSubmit(e){e.preventDefault();if(email){toast.success(\"An email is sent to \".concat(email,\" with password reset link\"));setRedirect(true);}};useEffect(function(){setRedirectUrl(\"/authentication/\".concat(layout,\"/confirm-mail\"));},[setRedirectUrl,layout]);return/*#__PURE__*/_jsxs(Form,{className:\"mt-4\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Input,{className:\"form-control\",placeholder:\"Email address\",value:email,onChange:function onChange(_ref2){var target=_ref2.target;return setEmail(target.value);},type:\"email\"})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Button,{color:\"primary\",block:true,disabled:!email,children:\"Send reset link\"})}),/*#__PURE__*/_jsxs(Link,{className:\"fs--1 text-600\",to:\"#!\",children:[\"I can't recover my account using this page\",/*#__PURE__*/_jsx(\"span\",{className:\"d-inline-block ml-1\",children:\"\\u2192\"})]})]});};ForgetPasswordForm.defaultProps={layout:'basic'};export default withRedirect(ForgetPasswordForm);","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/auth/ForgetPasswordForm.js"],"names":["React","useState","useEffect","Link","toast","Button","Form","FormGroup","Input","withRedirect","ForgetPasswordForm","setRedirect","setRedirectUrl","layout","email","setEmail","handleSubmit","e","preventDefault","success","target","value","defaultProps"],"mappings":"sGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,SAAvB,CAAkCC,KAAlC,KAA+C,YAA/C,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,C,wFAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAA6C,IAA1CC,CAAAA,WAA0C,MAA1CA,WAA0C,CAA7BC,cAA6B,MAA7BA,cAA6B,CAAbC,MAAa,MAAbA,MAAa,CACtE;AADsE,cAE5CZ,QAAQ,CAAC,EAAD,CAFoC,wCAE/Da,KAF+D,eAExDC,QAFwD,eAItE;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxBA,CAAC,CAACC,cAAF,GACA,GAAIJ,KAAJ,CAAW,CACTV,KAAK,CAACe,OAAN,+BAAqCL,KAArC,+BACAH,WAAW,CAAC,IAAD,CAAX,CACD,CACF,CAND,CAQAT,SAAS,CAAC,UAAM,CACdU,cAAc,2BAAoBC,MAApB,kBAAd,CACD,CAFQ,CAEN,CAACD,cAAD,CAAiBC,MAAjB,CAFM,CAAT,CAIA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,CAAuB,QAAQ,CAAEG,YAAjC,wBACE,KAAC,SAAD,wBACE,KAAC,KAAD,EACE,SAAS,CAAC,cADZ,CAEE,WAAW,CAAC,eAFd,CAGE,KAAK,CAAEF,KAHT,CAIE,QAAQ,CAAE,4BAAGM,CAAAA,MAAH,OAAGA,MAAH,OAAgBL,CAAAA,QAAQ,CAACK,MAAM,CAACC,KAAR,CAAxB,EAJZ,CAKE,IAAI,CAAC,OALP,EADF,EADF,cAUE,KAAC,SAAD,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,KAAK,KAA7B,CAA8B,QAAQ,CAAE,CAACP,KAAzC,6BADF,EAVF,cAeE,MAAC,IAAD,EAAM,SAAS,CAAC,gBAAhB,CAAiC,EAAE,CAAC,IAApC,qEAEE,aAAM,SAAS,CAAC,qBAAhB,oBAFF,GAfF,GADF,CAsBD,CAvCD,CA+CAJ,kBAAkB,CAACY,YAAnB,CAAkC,CAAET,MAAM,CAAE,OAAV,CAAlC,CAEA,cAAeJ,CAAAA,YAAY,CAACC,kBAAD,CAA3B","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst ForgetPasswordForm = ({ setRedirect, setRedirectUrl, layout }) => {\n  // State\n  const [email, setEmail] = useState('');\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email) {\n      toast.success(`An email is sent to ${email} with password reset link`);\n      setRedirect(true);\n    }\n  };\n\n  useEffect(() => {\n    setRedirectUrl(`/authentication/${layout}/confirm-mail`);\n  }, [setRedirectUrl, layout]);\n\n  return (\n    <Form className=\"mt-4\" onSubmit={handleSubmit}>\n      <FormGroup>\n        <Input\n          className=\"form-control\"\n          placeholder=\"Email address\"\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n          type=\"email\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Button color=\"primary\" block disabled={!email}>\n          Send reset link\n        </Button>\n      </FormGroup>\n      <Link className=\"fs--1 text-600\" to=\"#!\">\n        I can't recover my account using this page\n        <span className=\"d-inline-block ml-1\">&rarr;</span>\n      </Link>\n    </Form>\n  );\n};\n\nForgetPasswordForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func.isRequired,\n  layout: PropTypes.string\n};\n\nForgetPasswordForm.defaultProps = { layout: 'basic' };\n\nexport default withRedirect(ForgetPasswordForm);\n"]},"metadata":{},"sourceType":"module"}