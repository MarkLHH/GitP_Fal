{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/feed/FeedCardHeader.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Media } from 'reactstrap';\nimport Avatar from '../common/Avatar';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FeedDropDown from './FeedDropDown';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedCardHeader = ({\n  name,\n  avatarSrc,\n  time,\n  location,\n  privacy,\n  status,\n  share\n}) => {\n  return /*#__PURE__*/_jsxDEV(FalconCardHeader, {\n    title: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatarSrc,\n        className: status,\n        size: \"2xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Media, {\n        body: true,\n        className: \"align-self-center ml-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1 line-height-1\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"font-weight-semi-bold\",\n            to: \"/pages/profile\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), !!share && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: [\"shared \", /^[aeiou]/g.test(share.toLowerCase()) ? 'an' : 'a', \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#!\",\n              children: share\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 79\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0 fs--1\",\n          children: [time, \" \\u2022 \", location, \" \\u2022\", ' ', /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: classNames({\n              users: privacy === 'friends',\n              lock: privacy === 'private',\n              'globe-americas': privacy === 'public'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this),\n    titleTag: Media,\n    children: /*#__PURE__*/_jsxDEV(FeedDropDown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FeedCardHeader;\nFeedCardHeader.propsType = {\n  name: PropTypes.string.isRequired,\n  avatarSrc: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  privacyIcon: PropTypes.string.isRequired,\n  status: PropTypes.string,\n  share: PropTypes.bool\n};\nexport default FeedCardHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedCardHeader\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/feed/FeedCardHeader.js"],"names":["React","Fragment","PropTypes","Media","Avatar","Link","FontAwesomeIcon","FeedDropDown","FalconCardHeader","classNames","FeedCardHeader","name","avatarSrc","time","location","privacy","status","share","test","toLowerCase","users","lock","propsType","string","isRequired","privacyIcon","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,OAAnC;AAA4CC,EAAAA,MAA5C;AAAoDC,EAAAA;AAApD,CAAD,KAAiE;AACtF,sBACE,QAAC,gBAAD;AACE,IAAA,KAAK,eACH,QAAC,QAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEL,SAAb;AAAwB,QAAA,SAAS,EAAEI,MAAnC;AAA2C,QAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAY,QAAA,SAAS,EAAC,wBAAtB;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,oBAAb;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,uBAAhB;AAAwC,YAAA,EAAE,EAAC,gBAA3C;AAAA,sBACGL;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,EAIG,CAAC,CAACM,KAAF,iBACC;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,kCACU,YAAYC,IAAZ,CAAiBD,KAAK,CAACE,WAAN,EAAjB,IAAwC,IAAxC,GAA+C,GADzD,oBAC8D;AAAG,cAAA,IAAI,EAAC,IAAR;AAAA,wBAAcF;AAAd;AAAA;AAAA;AAAA;AAAA,oBAD9D;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,qBACGJ,IADH,cACYC,QADZ,aACwB,GADxB,eAEE,QAAC,eAAD;AACE,YAAA,IAAI,EAAEL,UAAU,CAAC;AACfW,cAAAA,KAAK,EAAEL,OAAO,KAAK,SADJ;AAEfM,cAAAA,IAAI,EAAEN,OAAO,KAAK,SAFH;AAGf,gCAAkBA,OAAO,KAAK;AAHf,aAAD;AADlB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AA4BE,IAAA,QAAQ,EAAEZ,KA5BZ;AAAA,2BA8BE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AA9BF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAnCD;;KAAMO,c;AAqCNA,cAAc,CAACY,SAAf,GAA2B;AACzBX,EAAAA,IAAI,EAAET,SAAS,CAACqB,MAAV,CAAiBC,UADE;AAEzBZ,EAAAA,SAAS,EAAEV,SAAS,CAACqB,MAAV,CAAiBC,UAFH;AAGzBX,EAAAA,IAAI,EAAEX,SAAS,CAACqB,MAAV,CAAiBC,UAHE;AAIzBV,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB,MAAV,CAAiBC,UAJF;AAKzBC,EAAAA,WAAW,EAAEvB,SAAS,CAACqB,MAAV,CAAiBC,UALL;AAMzBR,EAAAA,MAAM,EAAEd,SAAS,CAACqB,MANO;AAOzBN,EAAAA,KAAK,EAAEf,SAAS,CAACwB;AAPQ,CAA3B;AAUA,eAAehB,cAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Media } from 'reactstrap';\nimport Avatar from '../common/Avatar';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FeedDropDown from './FeedDropDown';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport classNames from 'classnames';\n\nconst FeedCardHeader = ({ name, avatarSrc, time, location, privacy, status, share }) => {\n  return (\n    <FalconCardHeader\n      title={\n        <Fragment>\n          <Avatar src={avatarSrc} className={status} size=\"2xl\" />\n          <Media body className=\"align-self-center ml-2\">\n            <p className=\"mb-1 line-height-1\">\n              <Link className=\"font-weight-semi-bold\" to=\"/pages/profile\">\n                {name}\n              </Link>\n              {!!share && (\n                <span className=\"ml-1\">\n                  shared {/^[aeiou]/g.test(share.toLowerCase()) ? 'an' : 'a'} <a href=\"#!\">{share}</a>\n                </span>\n              )}\n            </p>\n            <p className=\"mb-0 fs--1\">\n              {time} • {location} •{' '}\n              <FontAwesomeIcon\n                icon={classNames({\n                  users: privacy === 'friends',\n                  lock: privacy === 'private',\n                  'globe-americas': privacy === 'public'\n                })}\n              />\n            </p>\n          </Media>\n        </Fragment>\n      }\n      titleTag={Media}\n    >\n      <FeedDropDown />\n    </FalconCardHeader>\n  );\n};\n\nFeedCardHeader.propsType = {\n  name: PropTypes.string.isRequired,\n  avatarSrc: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  privacyIcon: PropTypes.string.isRequired,\n  status: PropTypes.string,\n  share: PropTypes.bool\n};\n\nexport default FeedCardHeader;\n"]},"metadata":{},"sourceType":"module"}