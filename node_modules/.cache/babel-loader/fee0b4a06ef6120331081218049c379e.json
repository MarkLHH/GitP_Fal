{"ast":null,"code":"import React,{Fragment}from'react';import WizardInput from'./WizardInput';import{Col,CustomInput,Row}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BasicUserForm=function BasicUserForm(_ref){var register=_ref.register,errors=_ref.errors,watch=_ref.watch;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(WizardInput,{label:\"Name*\",placeholder:\"Name\",name:\"name\",id:\"name\",innerRef:register({required:'Name is required',minLength:{value:2,message:'Min length 2'}}),errors:errors}),/*#__PURE__*/_jsx(WizardInput,{label:\"Email*\",placeholder:\"Email\",id:\"email\",name:\"email\",innerRef:register({required:'Email is required',pattern:{value:/[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})/i,message:'Email must be valid'}}),errors:errors}),/*#__PURE__*/_jsxs(Row,{form:true,children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(WizardInput,{type:\"password\",label:\"Password*\",placeholder:\"Password\",id:\"password\",name:\"password\",innerRef:register({required:'You must specify a password',minLength:{value:2,message:'Password must have at least 2 characters'}}),errors:errors})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(WizardInput,{type:\"password\",label:\"Confirm Password*\",placeholder:\"Confirm Password\",id:\"confirmPassword\",name:\"confirmPassword\",innerRef:register({validate:function validate(value){return value===watch('password')||'The password do not match';}}),errors:errors})})]}),/*#__PURE__*/_jsx(WizardInput,{type:\"checkbox\",id:\"agreeToTerms\",tag:CustomInput,label:/*#__PURE__*/_jsxs(Fragment,{children:[\"I accept the \",/*#__PURE__*/_jsx(\"a\",{href:\"#!\",children:\" terms\"}),\" and \",/*#__PURE__*/_jsx(\"a\",{href:\"#!\",children:\" privacy policy\"})]}),name:\"agreeToTerms\",innerRef:register({required:'You have to agree with us'}),errors:errors})]});};export default BasicUserForm;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/auth/wizard/BasicUserForm.js"],"names":["React","Fragment","WizardInput","Col","CustomInput","Row","BasicUserForm","register","errors","watch","required","minLength","value","message","pattern","validate"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,GAAT,CAAcC,WAAd,CAA2BC,GAA3B,KAAsC,YAAtC,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiC,IAA9BC,CAAAA,QAA8B,MAA9BA,QAA8B,CAApBC,MAAoB,MAApBA,MAAoB,CAAZC,KAAY,MAAZA,KAAY,CACrD,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EACE,KAAK,CAAC,OADR,CAEE,WAAW,CAAC,MAFd,CAGE,IAAI,CAAC,MAHP,CAIE,EAAE,CAAC,MAJL,CAKE,QAAQ,CAAEF,QAAQ,CAAC,CACjBG,QAAQ,CAAE,kBADO,CAEjBC,SAAS,CAAE,CACTC,KAAK,CAAE,CADE,CAETC,OAAO,CAAE,cAFA,CAFM,CAAD,CALpB,CAYE,MAAM,CAAEL,MAZV,EADF,cAeE,KAAC,WAAD,EACE,KAAK,CAAC,QADR,CAEE,WAAW,CAAC,OAFd,CAGE,EAAE,CAAC,OAHL,CAIE,IAAI,CAAC,OAJP,CAKE,QAAQ,CAAED,QAAQ,CAAC,CACjBG,QAAQ,CAAE,mBADO,CAEjBI,OAAO,CAAE,CACPF,KAAK,CAAE,6FADA,CAEPC,OAAO,CAAE,qBAFF,CAFQ,CAAD,CALpB,CAYE,MAAM,CAAEL,MAZV,EAfF,cA6BE,MAAC,GAAD,EAAK,IAAI,KAAT,wBACE,KAAC,GAAD,wBACE,KAAC,WAAD,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAC,WAFR,CAGE,WAAW,CAAC,UAHd,CAIE,EAAE,CAAC,UAJL,CAKE,IAAI,CAAC,UALP,CAME,QAAQ,CAAED,QAAQ,CAAC,CACjBG,QAAQ,CAAE,6BADO,CAEjBC,SAAS,CAAE,CACTC,KAAK,CAAE,CADE,CAETC,OAAO,CAAE,0CAFA,CAFM,CAAD,CANpB,CAaE,MAAM,CAAEL,MAbV,EADF,EADF,cAkBE,KAAC,GAAD,wBACE,KAAC,WAAD,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAC,mBAFR,CAGE,WAAW,CAAC,kBAHd,CAIE,EAAE,CAAC,iBAJL,CAKE,IAAI,CAAC,iBALP,CAME,QAAQ,CAAED,QAAQ,CAAC,CACjBQ,QAAQ,CAAE,kBAAAH,KAAK,QAAIA,CAAAA,KAAK,GAAKH,KAAK,CAAC,UAAD,CAAf,EAA+B,2BAAnC,EADE,CAAD,CANpB,CASE,MAAM,CAAED,MATV,EADF,EAlBF,GA7BF,cA6DE,KAAC,WAAD,EACE,IAAI,CAAC,UADP,CAEE,EAAE,CAAC,cAFL,CAGE,GAAG,CAAEJ,WAHP,CAIE,KAAK,cACH,MAAC,QAAD,yCACe,UAAG,IAAI,CAAC,IAAR,oBADf,sBAC2C,UAAG,IAAI,CAAC,IAAR,6BAD3C,GALJ,CASE,IAAI,CAAC,cATP,CAUE,QAAQ,CAAEG,QAAQ,CAAC,CACjBG,QAAQ,CAAE,2BADO,CAAD,CAVpB,CAaE,MAAM,CAAEF,MAbV,EA7DF,GADF,CA+ED,CAhFD,CAkFA,cAAeF,CAAAA,aAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport WizardInput from './WizardInput';\nimport { Col, CustomInput, Row } from 'reactstrap';\n\nconst BasicUserForm = ({ register, errors, watch }) => {\n  return (\n    <Fragment>\n      <WizardInput\n        label=\"Name*\"\n        placeholder=\"Name\"\n        name=\"name\"\n        id=\"name\"\n        innerRef={register({\n          required: 'Name is required',\n          minLength: {\n            value: 2,\n            message: 'Min length 2'\n          }\n        })}\n        errors={errors}\n      />\n      <WizardInput\n        label=\"Email*\"\n        placeholder=\"Email\"\n        id=\"email\"\n        name=\"email\"\n        innerRef={register({\n          required: 'Email is required',\n          pattern: {\n            value: /[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})/i,\n            message: 'Email must be valid'\n          }\n        })}\n        errors={errors}\n      />\n      <Row form>\n        <Col>\n          <WizardInput\n            type=\"password\"\n            label=\"Password*\"\n            placeholder=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            innerRef={register({\n              required: 'You must specify a password',\n              minLength: {\n                value: 2,\n                message: 'Password must have at least 2 characters'\n              }\n            })}\n            errors={errors}\n          />\n        </Col>\n        <Col>\n          <WizardInput\n            type=\"password\"\n            label=\"Confirm Password*\"\n            placeholder=\"Confirm Password\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            innerRef={register({\n              validate: value => value === watch('password') || 'The password do not match'\n            })}\n            errors={errors}\n          />\n        </Col>\n      </Row>\n      <WizardInput\n        type=\"checkbox\"\n        id=\"agreeToTerms\"\n        tag={CustomInput}\n        label={\n          <Fragment>\n            I accept the <a href=\"#!\"> terms</a> and <a href=\"#!\"> privacy policy</a>\n          </Fragment>\n        }\n        name=\"agreeToTerms\"\n        innerRef={register({\n          required: 'You have to agree with us'\n        })}\n        errors={errors}\n      />\n    </Fragment>\n  );\n};\n\nexport default BasicUserForm;\n"]},"metadata":{},"sourceType":"module"}