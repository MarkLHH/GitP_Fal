{"ast":null,"code":"import React,{Fragment}from'react';import{Card,CardBody,CardHeader,NavLink}from'reactstrap';import CodeHighlight from'../common/CodeHighlight';import FalconCardHeader from'../common/FalconCardHeader';import PageHeader from'../common/PageHeader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GettingStarted=function GettingStarted(){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Getting Started\",className:\"mb-3\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"mt-2 mb-0\",children:[\"Welcome to the ReactJS version of the\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://themes.getbootstrap.com/product/falcon-admin-dashboard-webapp-template/\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"original Falcon theme\"}),\". This doc will guide you to understand how \",/*#__PURE__*/_jsx(\"strong\",{children:\"Falcon-React\"}),\" theme is organized, basics of how to customize, and how to compile from the source code if you want.\"]})}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Running in Local environment\"}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"This project is scaffolded using\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://create-react-app.dev\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"Create React App\"}),\".\"]}),/*#__PURE__*/_jsxs(\"ol\",{className:\"mb-0 pl-card\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Install\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://nodejs.org\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"Node.js\"}),' ',\"if you do not already have it installed on your machine.\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"Open the \\u201Cfalcon-react\\u201D directory with your cmd or terminal\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Run \",/*#__PURE__*/_jsx(\"code\",{children:\"npm i\"}),/*#__PURE__*/_jsx(\"br\",{}),\"This command will download all the necessary dependencies for falcon in the \",/*#__PURE__*/_jsx(\"code\",{children:\"node_modules\"}),' ',\"directory.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Run \",/*#__PURE__*/_jsx(\"code\",{children:\"npm start\"}),/*#__PURE__*/_jsx(\"br\",{}),\"A local web server will start at \",/*#__PURE__*/_jsx(\"code\",{children:\"http://localhost:3000\"}),\".\",/*#__PURE__*/_jsx(\"br\",{}),\"We are using webpack and webpack-serve to automatically detect file changes. So, if you edit and save a file, your browser will automatically refresh and preview the change.\"]})]})]})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Creating a Production Build\"}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"After you done your customization, when you are ready to build, Run \",/*#__PURE__*/_jsx(\"code\",{children:\"npm run build\"}),\" command in your project directory to make the Production build.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"This will create an optimized production build by compililing, merging and minifying all the source files as necessary and put them in the \",/*#__PURE__*/_jsx(\"code\",{children:\"build/\"}),\" folder.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"You can run \",/*#__PURE__*/_jsx(\"code\",{children:\"node server.js\"}),\" to run the production build locally at\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"http://localhost:5000\"}),\".\"]})]})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Compiling SCSS\"}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Run \",/*#__PURE__*/_jsx(\"code\",{children:\"npm run scss\"}),\" command in your project directory to compile scss. This will compile all the SCSS files from \",/*#__PURE__*/_jsx(\"code\",{children:\"src/assets/scss/\"}),\" directory and generate \",/*#__PURE__*/_jsx(\"code\",{children:\"theme.css\"}),\",\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"theme.css.map\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"theme-rtl.css\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"theme-rtl.css.map\"}),\" files in\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"public/css/\"}),\" directory. Reload your browser to see the changes.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"You can also use the SCSS watcher to automatically compile and reload your browser every time you save your SCSS files by running the command\"}),' ',/*#__PURE__*/_jsx(\"code\",{children:\"npm run scss\"}),/*#__PURE__*/_jsx(\"strong\",{children:\" in a separate terminal window while running\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:\"npm start\"}),' ',/*#__PURE__*/_jsx(\"strong\",{children:\" in another.\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"You can add your own SCSS and override the theme style in the \",/*#__PURE__*/_jsx(\"code\",{children:\"_user.scss\"}),\" file.\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-0\",children:[\"To make broader changes to the design of the theme, such as changing the color scheme or font sizes, use\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"src/assets/scss/_user-variables.scss\"}),\". Any variable from\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"node_modules/bootstrap/scss/_variables.scss\"}),\" or \",/*#__PURE__*/_jsx(\"code\",{children:\"src/assets/scss/theme/_variables.scss\"}),' ',\"can be overridden with your own value.\"]})]})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",id:\"setting-config\",children:[/*#__PURE__*/_jsx(CardHeader,{className:\"bg-light\",children:/*#__PURE__*/_jsx(NavLink,{href:\"#setting-config\",className:\"font-weight-semi-bold fs-1  p-0 text-900\",children:\"Settings configuration\"})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Control side panel settings from one place. Go to \",/*#__PURE__*/_jsx(\"code\",{children:\"src/config.js\"}),\" file and set your setting configuration.\"]}),/*#__PURE__*/_jsx(CodeHighlight,{code:\"export const version = '2.8.0';\\nexport const navbarBreakPoint = 'xl'; // Vertical navbar breakpoint\\nexport const topNavbarBreakpoint = 'lg';\\nexport const settings = {\\n  isFluid: false,\\n  isRTL: false,\\n  isDark: true,\\n  isTopNav: true,\\n  isVertical: false,\\n  get isCombo() {\\n    return this.isVertical && this.isTopNav;\\n  },\\n  showBurgerMenu: false, // controls showing vertical nav on mobile\\n  currency: '$',\\n  isNavbarVerticalCollapsed: false, // toggle vertical navbar collapse\\n  navbarStyle: 'transparent'\\n};\\nexport default { version, navbarBreakPoint, topNavbarBreakpoint, settings };\",language:\"jsx\"})]})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{title:\"Contents\"}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"Inside the zip-file you'll find the following directories and files. Both compiled and minified distrubution files, as well as the source files are included in the package.\"}),/*#__PURE__*/_jsx(\"code\",{children:/*#__PURE__*/_jsx(\"pre\",{children:\"\\ntheme/\\n  \\u251C\\u2500\\u2500 .browserslistrc\\n  \\u251C\\u2500\\u2500 .env\\n  \\u251C\\u2500\\u2500 .eslintrc.json\\n  \\u251C\\u2500\\u2500 .gitignore\\n  \\u251C\\u2500\\u2500 .gitlab-ci.yml\\n  \\u251C\\u2500\\u2500 .prettierrc\\n  \\u251C\\u2500\\u2500 gulpfile.js\\n  \\u251C\\u2500\\u2500 package.json\\n  \\u251C\\u2500\\u2500 package-lock.json\\n  \\u251C\\u2500\\u2500 README.md\\n  \\u251C\\u2500\\u2500 build/\\n  \\u251C\\u2500\\u2500 public/\\n  \\u2502   \\u251C\\u2500\\u2500 css/\\n  \\u2502   \\u251C\\u2500\\u2500 favicon.ico\\n  \\u2502   \\u251C\\u2500\\u2500 index.html\\n  \\u2502   \\u2514\\u2500\\u2500 manifest.json\\n  \\u2514\\u2500\\u2500 src/\\n      \\u251C\\u2500\\u2500 assets/\\n      \\u2502   \\u251C\\u2500\\u2500 img/\\n      \\u2502   \\u251C\\u2500\\u2500 scss/\\n      \\u2502   \\u2514\\u2500\\u2500 video/\\n      \\u251C\\u2500\\u2500 components/\\n      \\u251C\\u2500\\u2500 contex/\\n      \\u251C\\u2500\\u2500 data/\\n      \\u251C\\u2500\\u2500 helpers/\\n      \\u251C\\u2500\\u2500 hoc/\\n      \\u251C\\u2500\\u2500 hooks/\\n      \\u251C\\u2500\\u2500 layouts/\\n      \\u251C\\u2500\\u2500 App.js\\n      \\u251C\\u2500\\u2500 config.js\\n      \\u251C\\u2500\\u2500 index.js\\n      \\u251C\\u2500\\u2500 Main.js\\n      \\u2514\\u2500\\u2500 routes.js\\n\"})})]})]})]});};export default GettingStarted;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/documentation/GettingStarted.js"],"names":["React","Fragment","Card","CardBody","CardHeader","NavLink","CodeHighlight","FalconCardHeader","PageHeader","GettingStarted"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Card, CardBody, CardHeader, NavLink } from 'reactstrap';\r\nimport CodeHighlight from '../common/CodeHighlight';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport PageHeader from '../common/PageHeader';\r\n\r\nconst GettingStarted = () => (\r\n  <Fragment>\r\n    <PageHeader title=\"Getting Started\" className=\"mb-3\">\r\n      <p className=\"mt-2 mb-0\">\r\n        Welcome to the ReactJS version of the{' '}\r\n        <a\r\n          href=\"https://themes.getbootstrap.com/product/falcon-admin-dashboard-webapp-template/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          original Falcon theme\r\n        </a>\r\n        . This doc will guide you to understand how <strong>Falcon-React</strong> theme is organized, basics of how to\r\n        customize, and how to compile from the source code if you want.\r\n      </p>\r\n    </PageHeader>\r\n\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Running in Local environment\" />\r\n      <CardBody>\r\n        <p>\r\n          This project is scaffolded using{' '}\r\n          <a href=\"https://create-react-app.dev\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Create React App\r\n          </a>\r\n          .\r\n        </p>\r\n        <ol className=\"mb-0 pl-card\">\r\n          <li>\r\n            Install{' '}\r\n            <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Node.js\r\n            </a>{' '}\r\n            if you do not already have it installed on your machine.\r\n          </li>\r\n          <li>Open the “falcon-react” directory with your cmd or terminal</li>\r\n          <li>\r\n            Run <code>npm i</code>\r\n            <br />\r\n            This command will download all the necessary dependencies for falcon in the <code>node_modules</code>{' '}\r\n            directory.\r\n          </li>\r\n          <li>\r\n            Run <code>npm start</code>\r\n            <br />A local web server will start at <code>http://localhost:3000</code>.<br />\r\n            We are using webpack and webpack-serve to automatically detect file changes. So, if you edit and save a\r\n            file, your browser will automatically refresh and preview the change.\r\n          </li>\r\n        </ol>\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Creating a Production Build\" />\r\n      <CardBody>\r\n        <p>\r\n          After you done your customization, when you are ready to build, Run <code>npm run build</code> command in your\r\n          project directory to make the Production build.\r\n        </p>\r\n        <p>\r\n          This will create an optimized production build by compililing, merging and minifying all the source files as\r\n          necessary and put them in the <code>build/</code> folder.\r\n        </p>\r\n        <p>\r\n          You can run <code>node server.js</code> to run the production build locally at{' '}\r\n          <code>http://localhost:5000</code>.\r\n        </p>\r\n      </CardBody>\r\n    </Card>\r\n\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Compiling SCSS\" />\r\n      <CardBody>\r\n        <p>\r\n          Run <code>npm run scss</code> command in your project directory to compile scss. This will compile all the\r\n          SCSS files from <code>src/assets/scss/</code> directory and generate <code>theme.css</code>,{' '}\r\n          <code>theme.css.map</code>, <code>theme-rtl.css</code>, <code>theme-rtl.css.map</code> files in{' '}\r\n          <code>public/css/</code> directory. Reload your browser to see the changes.\r\n        </p>\r\n        <p>\r\n          <strong>\r\n            You can also use the SCSS watcher to automatically compile and reload your browser every time you save your\r\n            SCSS files by running the command\r\n          </strong>{' '}\r\n          <code>npm run scss</code>\r\n          <strong> in a separate terminal window while running</strong> <code>npm start</code>{' '}\r\n          <strong> in another.</strong>\r\n        </p>\r\n        <p>\r\n          You can add your own SCSS and override the theme style in the <code>_user.scss</code> file.\r\n        </p>\r\n        <p className=\"mb-0\">\r\n          To make broader changes to the design of the theme, such as changing the color scheme or font sizes, use{' '}\r\n          <code>src/assets/scss/_user-variables.scss</code>. Any variable from{' '}\r\n          <code>node_modules/bootstrap/scss/_variables.scss</code> or <code>src/assets/scss/theme/_variables.scss</code>{' '}\r\n          can be overridden with your own value.\r\n        </p>\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\" id=\"setting-config\">\r\n      <CardHeader className=\"bg-light\">\r\n        <NavLink href=\"#setting-config\" className=\"font-weight-semi-bold fs-1  p-0 text-900\">\r\n          Settings configuration\r\n        </NavLink>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <p>\r\n          Control side panel settings from one place. Go to <code>src/config.js</code> file and set your setting\r\n          configuration.\r\n        </p>\r\n        <CodeHighlight\r\n          code={`export const version = '2.8.0';\r\nexport const navbarBreakPoint = 'xl'; // Vertical navbar breakpoint\r\nexport const topNavbarBreakpoint = 'lg';\r\nexport const settings = {\r\n  isFluid: false,\r\n  isRTL: false,\r\n  isDark: true,\r\n  isTopNav: true,\r\n  isVertical: false,\r\n  get isCombo() {\r\n    return this.isVertical && this.isTopNav;\r\n  },\r\n  showBurgerMenu: false, // controls showing vertical nav on mobile\r\n  currency: '$',\r\n  isNavbarVerticalCollapsed: false, // toggle vertical navbar collapse\r\n  navbarStyle: 'transparent'\r\n};\r\nexport default { version, navbarBreakPoint, topNavbarBreakpoint, settings };`}\r\n          language=\"jsx\"\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Contents\" />\r\n      <CardBody>\r\n        <p className=\"mb-0\">\r\n          Inside the zip-file you'll find the following directories and files. Both compiled and minified distrubution\r\n          files, as well as the source files are included in the package.\r\n        </p>\r\n        <code>\r\n          <pre>\r\n            {`\r\ntheme/\r\n  ├── .browserslistrc\r\n  ├── .env\r\n  ├── .eslintrc.json\r\n  ├── .gitignore\r\n  ├── .gitlab-ci.yml\r\n  ├── .prettierrc\r\n  ├── gulpfile.js\r\n  ├── package.json\r\n  ├── package-lock.json\r\n  ├── README.md\r\n  ├── build/\r\n  ├── public/\r\n  │   ├── css/\r\n  │   ├── favicon.ico\r\n  │   ├── index.html\r\n  │   └── manifest.json\r\n  └── src/\r\n      ├── assets/\r\n      │   ├── img/\r\n      │   ├── scss/\r\n      │   └── video/\r\n      ├── components/\r\n      ├── contex/\r\n      ├── data/\r\n      ├── helpers/\r\n      ├── hoc/\r\n      ├── hooks/\r\n      ├── layouts/\r\n      ├── App.js\r\n      ├── config.js\r\n      ├── index.js\r\n      ├── Main.js\r\n      └── routes.js\r\n`}\r\n          </pre>\r\n        </code>\r\n      </CardBody>\r\n    </Card>\r\n  </Fragment>\r\n);\r\n\r\nexport default GettingStarted;\r\n"]},"metadata":{},"sourceType":"module"}