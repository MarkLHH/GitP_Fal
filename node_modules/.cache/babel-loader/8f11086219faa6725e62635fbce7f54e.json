{"ast":null,"code":"import _objectSpread from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useContext}from'react';import{Nav}from'reactstrap';import Scrollbar from'react-scrollbars-custom';import ChatThread from'./ChatThread';import ChatContactsSearch from'./ChatContactsSearch';import AppContext,{ChatContext}from'../../../context/Context';import{isIterableArray}from'../../../helpers/utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatSidebar=function ChatSidebar(){var _useContext=useContext(AppContext),isRTL=_useContext.isRTL;var _useContext2=useContext(ChatContext),threads=_useContext2.threads;return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-sidebar rounded-left\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contacts-list bg-white\",children:/*#__PURE__*/_jsx(Scrollbar,{style:{height:'100%',minWidth:'75px'},rtl:isRTL,noScrollX:true,trackYProps:{renderer:function renderer(props){var elementRef=props.elementRef,restProps=_objectWithoutProperties(props,[\"elementRef\"]);return/*#__PURE__*/_jsx(\"span\",_objectSpread(_objectSpread({},restProps),{},{ref:elementRef,className:\"TrackY\"}));}},children:/*#__PURE__*/_jsx(Nav,{className:\"border-0\",children:isIterableArray(threads)&&threads.map(function(thread){return/*#__PURE__*/_jsx(ChatThread,{thread:thread},thread.id);})})})}),/*#__PURE__*/_jsx(ChatContactsSearch,{})]});};export default ChatSidebar;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/chat/sidebar/ChatSidebar.js"],"names":["React","useContext","Nav","Scrollbar","ChatThread","ChatContactsSearch","AppContext","ChatContext","isIterableArray","ChatSidebar","isRTL","threads","height","minWidth","renderer","props","elementRef","restProps","map","thread","id"],"mappings":"+NAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,GAAT,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,UAAP,EAAqBC,WAArB,KAAwC,0BAAxC,CACA,OAASC,eAAT,KAAgC,wBAAhC,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,iBACNR,UAAU,CAACK,UAAD,CADJ,CAChBI,KADgB,aAChBA,KADgB,kBAEJT,UAAU,CAACM,WAAD,CAFN,CAEhBI,OAFgB,cAEhBA,OAFgB,CAIxB,mBACE,aAAK,SAAS,CAAC,2BAAf,wBACE,YAAK,SAAS,CAAC,wBAAf,uBACE,KAAC,SAAD,EACE,KAAK,CAAE,CACLC,MAAM,CAAE,MADH,CAELC,QAAQ,CAAE,MAFL,CADT,CAKE,GAAG,CAAEH,KALP,CAME,SAAS,KANX,CAOE,WAAW,CAAE,CACXI,QADW,mBACFC,KADE,CACK,IACNC,CAAAA,UADM,CACuBD,KADvB,CACNC,UADM,CACSC,SADT,0BACuBF,KADvB,iBAEd,mBAAO,2CAAUE,SAAV,MAAqB,GAAG,CAAED,UAA1B,CAAsC,SAAS,CAAC,QAAhD,GAAP,CACD,CAJU,CAPf,uBAcE,KAAC,GAAD,EAAK,SAAS,CAAC,UAAf,UACGR,eAAe,CAACG,OAAD,CAAf,EAA4BA,OAAO,CAACO,GAAR,CAAY,SAAAC,MAAM,qBAAI,KAAC,UAAD,EAAY,MAAM,CAAEA,MAApB,EAAiCA,MAAM,CAACC,EAAxC,CAAJ,EAAlB,CAD/B,EAdF,EADF,EADF,cAqBE,KAAC,kBAAD,IArBF,GADF,CAyBD,CA7BD,CA+BA,cAAeX,CAAAA,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Nav } from 'reactstrap';\nimport Scrollbar from 'react-scrollbars-custom';\nimport ChatThread from './ChatThread';\nimport ChatContactsSearch from './ChatContactsSearch';\nimport AppContext, { ChatContext } from '../../../context/Context';\nimport { isIterableArray } from '../../../helpers/utils';\n\nconst ChatSidebar = () => {\n  const { isRTL } = useContext(AppContext);\n  const { threads } = useContext(ChatContext);\n\n  return (\n    <div className=\"chat-sidebar rounded-left\">\n      <div className=\"contacts-list bg-white\">\n        <Scrollbar\n          style={{\n            height: '100%',\n            minWidth: '75px'\n          }}\n          rtl={isRTL}\n          noScrollX\n          trackYProps={{\n            renderer(props) {\n              const { elementRef, ...restProps } = props;\n              return <span {...restProps} ref={elementRef} className=\"TrackY\" />;\n            }\n          }}\n        >\n          <Nav className=\"border-0\">\n            {isIterableArray(threads) && threads.map(thread => <ChatThread thread={thread} key={thread.id} />)}\n          </Nav>\n        </Scrollbar>\n      </div>\n      <ChatContactsSearch />\n    </div>\n  );\n};\n\nexport default ChatSidebar;\n"]},"metadata":{},"sourceType":"module"}