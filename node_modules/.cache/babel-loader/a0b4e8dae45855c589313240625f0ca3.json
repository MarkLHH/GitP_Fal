{"ast":null,"code":"var _jsxFileName = \"/workspace/GitP_Fal/src/components/feed/FeedInterest.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport EventSummary from '../event/EventSummary';\nimport FalconCardFooterLink from '../common/FalconCardFooterLink';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport Loader from '../common/Loader';\nimport createMarkup from '../../helpers/createMarkup';\nimport rawEvents from '../../data/event/events';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst resolvedEvents = rawEvents.slice(2);\n\nconst FeedInterest = props => {\n  _s();\n\n  const {\n    loading,\n    data: events\n  } = useFakeFetch(resolvedEvents);\n  return /*#__PURE__*/_jsxDEV(Card, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(FalconCardHeader, {\n      title: \"You may interested\",\n      titleTag: \"h5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"fs--1\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : isIterableArray(events) && events.map(({\n        id,\n        additional,\n        ...rest\n      }, index) => /*#__PURE__*/_createElement(EventSummary, { ...rest,\n        divider: events.length !== index + 1,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-1000 mb-0\",\n        dangerouslySetInnerHTML: createMarkup(additional)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FalconCardFooterLink, {\n      title: \"All Events\",\n      to: \"/pages/events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeedInterest, \"982BuWdbiMO5/Jy4M3qnlTj5H5I=\", false, function () {\n  return [useFakeFetch];\n});\n\n_c = FeedInterest;\nexport default FeedInterest;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedInterest\");","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/feed/FeedInterest.js"],"names":["React","Card","CardBody","FalconCardHeader","isIterableArray","EventSummary","FalconCardFooterLink","useFakeFetch","Loader","createMarkup","rawEvents","resolvedEvents","slice","FeedInterest","props","loading","data","events","map","id","additional","rest","index","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,YAA/B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,cAAc,GAAGD,SAAS,CAACE,KAAV,CAAgB,CAAhB,CAAvB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAA4BV,YAAY,CAACI,cAAD,CAA9C;AAEA,sBACE,QAAC,IAAD,OAAUG,KAAV;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC,oBAAxB;AAA6C,MAAA,QAAQ,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,OAApB;AAAA,gBACGC,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADM,GAGNX,eAAe,CAACa,MAAD,CAAf,IACAA,MAAM,CAACC,GAAP,CAAW,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,UAAN;AAAkB,WAAGC;AAArB,OAAD,EAA8BC,KAA9B,kBACT,eAAC,YAAD,OAAkBD,IAAlB;AAAwB,QAAA,OAAO,EAAEJ,MAAM,CAACM,MAAP,KAAkBD,KAAK,GAAG,CAA3D;AAA8D,QAAA,GAAG,EAAEH,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAA8B,QAAA,uBAAuB,EAAEV,YAAY,CAACW,UAAD;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,CADF;AALJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE,QAAC,oBAAD;AAAsB,MAAA,KAAK,EAAC,YAA5B;AAAyC,MAAA,EAAE,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArBD;;GAAMP,Y;UAC8BN,Y;;;KAD9BM,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport EventSummary from '../event/EventSummary';\nimport FalconCardFooterLink from '../common/FalconCardFooterLink';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport Loader from '../common/Loader';\nimport createMarkup from '../../helpers/createMarkup';\nimport rawEvents from '../../data/event/events';\n\nconst resolvedEvents = rawEvents.slice(2);\n\nconst FeedInterest = props => {\n  const { loading, data: events } = useFakeFetch(resolvedEvents);\n\n  return (\n    <Card {...props}>\n      <FalconCardHeader title=\"You may interested\" titleTag=\"h5\" />\n      <CardBody className=\"fs--1\">\n        {loading ? (\n          <Loader />\n        ) : (\n          isIterableArray(events) &&\n          events.map(({ id, additional, ...rest }, index) => (\n            <EventSummary {...rest} divider={events.length !== index + 1} key={id}>\n              <p className=\"text-1000 mb-0\" dangerouslySetInnerHTML={createMarkup(additional)} />\n            </EventSummary>\n          ))\n        )}\n      </CardBody>\n      <FalconCardFooterLink title=\"All Events\" to=\"/pages/events\" />\n    </Card>\n  );\n};\n\nexport default FeedInterest;\n"]},"metadata":{},"sourceType":"module"}