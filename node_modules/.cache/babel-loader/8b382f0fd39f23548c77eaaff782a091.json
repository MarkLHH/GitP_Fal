{"ast":null,"code":"import _toConsumableArray from\"/workspace/GitP_Fal/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{Fragment,useContext}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Badge,Card,CardBody,Col,Row,UncontrolledTooltip}from'reactstrap';import FalconCardHeader from'../common/FalconCardHeader';import Flex from'../common/Flex';import ReactEchartsCore from'echarts-for-react/lib/core';import echarts from'echarts/lib/echarts';import{themeColors,getPosition,numberFormatter,getGrays}from'../../helpers/utils';import'echarts/lib/chart/bar';import'echarts/lib/component/tooltip';import AppContext from'../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getOption=function getOption(data,dataBackground,isDark){var grays=getGrays(isDark);return{tooltip:{trigger:'axis',padding:[7,10],formatter:'{b1}: {c1}',backgroundColor:grays.white,borderColor:grays['300'],borderWidth:1,textStyle:{color:themeColors.dark},transitionDuration:0,position:function position(pos,params,dom,rect,size){return getPosition(pos,params,dom,rect,size);}},xAxis:{type:'category',data:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],boundaryGap:false,axisLine:{show:false},axisLabel:{show:false},axisTick:{show:false},axisPointer:{type:'none'}},yAxis:{type:'value',splitLine:{show:false},axisLine:{show:false},axisLabel:{show:false},axisTick:{show:false},axisPointer:{type:'none'}},series:[{type:'bar',barWidth:'5px',barGap:'-100%',itemStyle:{color:grays['200'],barBorderRadius:10},data:dataBackground,animation:false,emphasis:{itemStyle:{color:grays['200']}}},{type:'bar',barWidth:'5px',itemStyle:{color:themeColors.primary,barBorderRadius:10},data:data,emphasis:{itemStyle:{color:themeColors.primary}},z:10}],grid:{right:5,left:10,top:0,bottom:0}};};var WeeklySales=function WeeklySales(_ref){var data=_ref.data;var _useContext=useContext(AppContext),currency=_useContext.currency,isDark=_useContext.isDark;var total=data.reduce(function(total,currentValue){return total+currentValue;},0);// Max value of data\nvar yMax=Math.max.apply(Math,_toConsumableArray(data));var dataBackground=data.map(function(){return yMax;});return/*#__PURE__*/_jsxs(Card,{className:\"h-md-100\",children:[/*#__PURE__*/_jsx(FalconCardHeader,{className:\"pb-0\",title:/*#__PURE__*/_jsxs(Fragment,{children:[\"Weekly Sales\",' ',/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:['far','question-circle'],transform:\"shrink-1\",className:\"text-400\",id:\"weeklySalesTooltip\"}),/*#__PURE__*/_jsx(UncontrolledTooltip,{placement:\"bottom\",target:\"weeklySalesTooltip\",children:\"Calculated according to last week's sales\"})]}),light:false,titleTag:\"h6\"}),/*#__PURE__*/_jsx(CardBody,{tag:Flex,align:\"end\",children:/*#__PURE__*/_jsxs(Row,{className:\"flex-grow-1\",children:[/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fs-4 font-weight-normal text-sans-serif text-700 line-height-1 mb-1\",children:[currency,numberFormatter(total,0)]}),/*#__PURE__*/_jsx(Badge,{pill:true,color:\"soft-success\",className:\"fs--2\",children:\"+3.5%\"})]}),/*#__PURE__*/_jsx(Col,{xs:\"auto\",className:\"pl-0\",children:/*#__PURE__*/_jsx(ReactEchartsCore,{echarts:echarts,option:getOption(data,dataBackground,isDark),style:{width:'8.5rem',height:'100%'}})})]})})]});};export default WeeklySales;","map":{"version":3,"sources":["/workspace/GitP_Fal/src/components/dashboard-alt/WeeklySales.js"],"names":["React","Fragment","useContext","FontAwesomeIcon","Badge","Card","CardBody","Col","Row","UncontrolledTooltip","FalconCardHeader","Flex","ReactEchartsCore","echarts","themeColors","getPosition","numberFormatter","getGrays","AppContext","getOption","data","dataBackground","isDark","grays","tooltip","trigger","padding","formatter","backgroundColor","white","borderColor","borderWidth","textStyle","color","dark","transitionDuration","position","pos","params","dom","rect","size","xAxis","type","boundaryGap","axisLine","show","axisLabel","axisTick","axisPointer","yAxis","splitLine","series","barWidth","barGap","itemStyle","barBorderRadius","animation","emphasis","primary","z","grid","right","left","top","bottom","WeeklySales","currency","total","reduce","currentValue","yMax","Math","max","map","width","height"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Badge, Card, CardBody, Col, Row, UncontrolledTooltip } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Flex from '../common/Flex';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport echarts from 'echarts/lib/echarts';\nimport { themeColors, getPosition, numberFormatter, getGrays } from '../../helpers/utils';\n\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/tooltip';\nimport AppContext from '../../context/Context';\n\nconst getOption = (data, dataBackground, isDark) => {\n  const grays = getGrays(isDark);\n  return {\n    tooltip: {\n      trigger: 'axis',\n      padding: [7, 10],\n      formatter: '{b1}: {c1}',\n      backgroundColor: grays.white,\n      borderColor: grays['300'],\n      borderWidth: 1,\n      textStyle: { color: themeColors.dark },\n      transitionDuration: 0,\n      position(pos, params, dom, rect, size) {\n        return getPosition(pos, params, dom, rect, size);\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      boundaryGap: false,\n      axisLine: { show: false },\n      axisLabel: { show: false },\n      axisTick: { show: false },\n      axisPointer: { type: 'none' }\n    },\n    yAxis: {\n      type: 'value',\n      splitLine: { show: false },\n      axisLine: { show: false },\n      axisLabel: { show: false },\n      axisTick: { show: false },\n      axisPointer: { type: 'none' }\n    },\n    series: [\n      {\n        type: 'bar',\n        barWidth: '5px',\n        barGap: '-100%',\n        itemStyle: {\n          color: grays['200'],\n          barBorderRadius: 10\n        },\n        data: dataBackground,\n        animation: false,\n        emphasis: { itemStyle: { color: grays['200'] } }\n      },\n      {\n        type: 'bar',\n        barWidth: '5px',\n        itemStyle: {\n          color: themeColors.primary,\n          barBorderRadius: 10\n        },\n        data: data,\n        emphasis: { itemStyle: { color: themeColors.primary } },\n        z: 10\n      }\n    ],\n    grid: { right: 5, left: 10, top: 0, bottom: 0 }\n  };\n};\n\nconst WeeklySales = ({ data }) => {\n  const { currency, isDark } = useContext(AppContext);\n  const total = data.reduce((total, currentValue) => total + currentValue, 0);\n  // Max value of data\n  const yMax = Math.max(...data);\n  const dataBackground = data.map(() => yMax);\n\n  return (\n    <Card className=\"h-md-100\">\n      <FalconCardHeader\n        className=\"pb-0\"\n        title={\n          <Fragment>\n            Weekly Sales{' '}\n            <FontAwesomeIcon\n              icon={['far', 'question-circle']}\n              transform=\"shrink-1\"\n              className=\"text-400\"\n              id=\"weeklySalesTooltip\"\n            />\n            <UncontrolledTooltip placement=\"bottom\" target=\"weeklySalesTooltip\">\n              Calculated according to last week's sales\n            </UncontrolledTooltip>\n          </Fragment>\n        }\n        light={false}\n        titleTag=\"h6\"\n      />\n      <CardBody tag={Flex} align=\"end\">\n        <Row className=\"flex-grow-1\">\n          <Col>\n            <div className=\"fs-4 font-weight-normal text-sans-serif text-700 line-height-1 mb-1\">\n              {currency}\n              {numberFormatter(total, 0)}\n            </div>\n            <Badge pill color=\"soft-success\" className=\"fs--2\">\n              +3.5%\n            </Badge>\n          </Col>\n          <Col xs=\"auto\" className=\"pl-0\">\n            <ReactEchartsCore\n              echarts={echarts}\n              option={getOption(data, dataBackground, isDark)}\n              style={{ width: '8.5rem', height: '100%' }}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nWeeklySales.propTypes = { data: PropTypes.array.isRequired };\n\nexport default WeeklySales;\n"]},"metadata":{},"sourceType":"module"}